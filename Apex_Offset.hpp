                                                      /* Create by #FF69B4 */
class Miscellaneous
{
	int                                                cl_entitylist;                                            // 0x1B2C6E8(0x00x4)
	int                                                LocalPlayer;                                              // 0x1EDD7E8(0x00x4)
	int                                                LocalEntityHandle;                                        // 0x1373DC8(0x00x4)
	int                                                NameList;                                                 // 0xBBDC630(0x00x4)
	int                                                ViewRender;                                               // 0x7665F38(0x00x4)
	int                                                StudioHdr;                                                // 0x10F0(0x00x4)
};

//class DataMap.C_BaseAnimating
class C_BaseAnimating
{
	float                                              m_currentFrame.animCycle;                                 // 0x00C4(0x0004)
	int                                                m_animNetworkFlags;                                       // 0x0A88(0x0004)
	bool                                               m_networkAnimActive;                                      // 0x0A8C(0x0001)
	bool                                               m_animActive;                                             // 0x0A8E(0x0001)
	bool                                               m_animCollisionEnabled;                                   // 0x0A8F(0x0001)
	bool                                               m_animRelativeToGroundEnabled;                            // 0x0A90(0x0001)
	bool                                               m_animPlantingEnabled;                                    // 0x0A91(0x0001)
	struct Embedded                                    m_predictedAnimEventData;                                 // 0x0B88(0x0000)
	struct Embedded                                    m_SequenceTransitioner;                                   // 0x0C20(0x0000)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	short                                              m_skinMod;                                                // 0x0E58(0x0002)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	int                                                m_camoIndex;                                              // 0x0E60(0x0004)
	struct Time                                        m_nResetEventsStartTime;                                  // 0x0E68(0x0004)
	int                                                m_nResetEventsParity;                                     // 0x0E6C(0x0004)
	bool                                               m_bSequenceFinished;                                      // 0x0EFC(0x0001)
	bool                                               m_bSequenceLooped;                                        // 0x0F04(0x0001)
	bool                                               m_bSequenceLoops;                                         // 0x0F05(0x0001)
	bool                                               m_bSequenceReadyForBreakout;                              // 0x0F06(0x0001)
	float                                              m_flModelScale;                                           // 0x0F08(0x0004)
	float                                              m_currentFrameBaseAnimating.animStartTime;                // 0x0F14(0x0004)
	float                                              m_currentFrameBaseAnimating.animStartCycle;               // 0x0F18(0x0004)
	float                                              m_currentFrameBaseAnimating.animPlaybackRate;             // 0x0F1C(0x0004)
	int                                                m_currentFrameBaseAnimating.animModelIndex;               // 0x0F20(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequenceParity;           // 0x0F24(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequence;                 // 0x0F2C(0x0002)
	float                                              m_currentFrameBaseAnimating.m_flPoseParameters;           // 0x0F3C(0x0060)
};

//class DataMap.C_ClientRagdoll
class C_ClientRagdoll
{
	struct Color32                                     m_clrRender;                                              // 0x0050(0x0004)
	char                                               m_nRenderFX;                                              // 0x04AD(0x0001)
	char                                               m_nRenderMode;                                            // 0x04B9(0x0001)
	struct Embedded                                    m_pRagdoll;                                               // 0x0BE8(0x0008)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	short                                              m_skinMod;                                                // 0x0E58(0x0002)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	bool                                               m_bFadeOut;                                               // 0x1640(0x0001)
	bool                                               m_bImportant;                                             // 0x1641(0x0001)
	struct Time                                        m_flEffectTime;                                           // 0x1644(0x0004)
	int                                                m_iCurrentFriction;                                       // 0x1648(0x0004)
	int                                                m_iMinFriction;                                           // 0x164C(0x0004)
	int                                                m_iMaxFriction;                                           // 0x1650(0x0004)
	float                                              m_flFrictionModTime;                                      // 0x1654(0x0004)
	struct Time                                        m_flFrictionTime;                                         // 0x1658(0x0004)
	int                                                m_iFrictionAnimState;                                     // 0x165C(0x0004)
	bool                                               m_bReleaseRagdoll;                                        // 0x1660(0x0001)
	bool                                               m_bFadingOut;                                             // 0x1661(0x0001)
	float                                              m_flScaleEnd;                                             // 0x1664(0x0028)
	float                                              m_flScaleTimeStart;                                       // 0x168C(0x0028)
	float                                              m_flScaleTimeEnd;                                         // 0x16B4(0x0028)
};

//class DataMap.CPlayerState
class CPlayerState
{
	bool                                               deadflag;                                                 // 0x006C(0x0001)
};

//class DataMap.PlayerZiplineData_Client
class PlayerZiplineData_Client
{
	bool                                               m_ziplineReenableWeapons;                                 // 0x0008(0x0001)
	float                                              m_mountingZiplineAlpha;                                   // 0x000C(0x0004)
	struct Time                                        m_ziplineStartTime;                                       // 0x0010(0x0004)
	struct Time                                        m_ziplineEndTime;                                         // 0x0014(0x0004)
	struct Vector                                      m_mountingZiplineSourcePosition;                          // 0x0018(0x000C)
	struct Vector                                      m_mountingZiplineSourceVelocity;                          // 0x0024(0x000C)
	struct Vector                                      m_mountingZiplineTargetPosition;                          // 0x0030(0x000C)
	struct Vector                                      m_ziplineUsePosition;                                     // 0x0048(0x000C)
	float                                              m_slidingZiplineAlpha;                                    // 0x0054(0x0004)
	struct Vector                                      m_lastMoveDir2D;                                          // 0x0058(0x000C)
	bool                                               m_ziplineReverse;                                         // 0x0064(0x0001)
	struct Vector                                      m_ziplinePathDirection;                                   // 0x0068(0x000C)
};

//class DataMap.C_Player
class C_Player
{
	int                                                m_fFlags;                                                 // 0x0098(0x0004)
	float                                              m_currentFrame.animCycle;                                 // 0x00C4(0x0004)
	struct EHANDLE                                     m_pMoveParent;                                            // 0x0118(0x0004)
	struct Vector                                      m_vecAbsVelocity;                                         // 0x0140(0x000C)
	struct EHANDLE                                     m_hGroundEntity;                                          // 0x0438(0x0004)
	int                                                m_flMaxspeed;                                             // 0x0440(0x0004)
	struct Time                                        m_jumpPadDebounceExpireTime;                              // 0x0464(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	float                                              m_flFriction;                                             // 0x04A0(0x0004)
	int                                                m_nNextThinkTick;                                         // 0x0574(0x0004)
	struct Embedded                                    m_SequenceTransitioner;                                   // 0x0C20(0x0000)
	float                                              m_currentFrameBaseAnimating.animStartTime;                // 0x0F14(0x0004)
	float                                              m_currentFrameBaseAnimating.animStartCycle;               // 0x0F18(0x0004)
	float                                              m_currentFrameBaseAnimating.animPlaybackRate;             // 0x0F1C(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequenceParity;           // 0x0F24(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequence;                 // 0x0F2C(0x0002)
	float                                              m_currentFrameBaseAnimating.m_flPoseParameters;           // 0x0F3C(0x0060)
	bool                                               m_bZooming;                                               // 0x1C51(0x0001)
	struct Time                                        m_zoomToggleOnStartTime;                                  // 0x1C54(0x0004)
	float                                              m_zoomBaseFrac;                                           // 0x1C58(0x0004)
	struct Time                                        m_zoomBaseTime;                                           // 0x1C5C(0x0004)
	struct Time                                        m_zoomFullStartTime;                                      // 0x1C60(0x0004)
	int                                                m_lastUCmdSimulationTicks;                                // 0x1CD4(0x0004)
	float                                              m_lastUCmdSimulationRemainderTime;                        // 0x1CD8(0x0004)
	struct Embedded                                    m_Local;                                                  // 0x1E10(0x0000)
	float                                              m_currentFramePlayer.timeBase;                            // 0x20F8(0x0004)
	struct Embedded                                    m_currentFramePlayer.statusEffectsTimedPlayerCUR;         // 0x2100(0x0000)
	struct Embedded                                    m_currentFramePlayer.statusEffectsEndlessPlayerCUR;       // 0x21F0(0x0000)
	float                                              m_currentFramePlayer.m_flHullHeight;                      // 0x2290(0x0004)
	float                                              m_currentFramePlayer.m_traversalAnimProgress;             // 0x2294(0x0004)
	float                                              m_currentFramePlayer.m_sprintTiltFrac;                    // 0x2298(0x0004)
	float                                              m_currentFramePlayer.m_ziprailBankTiltFrac;               // 0x229C(0x0004)
	int                                                m_currentFramePlayer.m_ammoPoolCount;                     // 0x22AC(0x0020)
	struct Vector                                      m_currentFrameLocalPlayer.m_stepSmoothingOffset;          // 0x2480(0x000C)
	int                                                m_currentFrameLocalPlayer.m_duckTransitionRemainderMsec;  // 0x248C(0x0004)
	struct Vector                                      m_currentFrameLocalPlayer.m_vecPunchBase_Angle;           // 0x2490(0x000C)
	struct Vector                                      m_currentFrameLocalPlayer.m_vecPunchBase_AngleVel;        // 0x249C(0x000C)
	struct Vector                                      m_currentFrameLocalPlayer.m_vecPunchWeapon_Angle;         // 0x24A8(0x000C)
	float                                              m_currentFrameLocalPlayer.m_vecPunchWeapon_AngleVel.x;    // 0x24B4(0x0004)
	float                                              m_currentFrameLocalPlayer.m_vecPunchWeapon_AngleVel.y;    // 0x24B8(0x0004)
	float                                              m_currentFrameLocalPlayer.m_vecPunchWeapon_AngleVel.z;    // 0x24BC(0x0004)
	struct Quaternion                                  m_currentFrameLocalPlayer.m_localGravityRotation;         // 0x24F8(0x0010)
	struct Embedded                                    pl;                                                       // 0x2520(0x0000)
	int                                                m_ammoPoolCapacity;                                       // 0x25A4(0x0004)
	struct unknow                                      m_classModsActive;                                        // 0x25E0(0x0008)
	short                                              m_gestureSequences;                                       // 0x28EC(0x0010)
	struct Time                                        m_gestureStartTimes;                                      // 0x28FC(0x0020)
	float                                              m_gestureBlendInDuration;                                 // 0x291C(0x0020)
	float                                              m_gestureBlendOutDuration;                                // 0x293C(0x0020)
	struct Time                                        m_gestureFadeOutStartTime;                                // 0x295C(0x0020)
	float                                              m_gestureFadeOutDuration;                                 // 0x297C(0x0020)
	int                                                m_gestureAutoKillBitfield;                                // 0x299C(0x0004)
	int                                                m_afButtonLast;                                           // 0x29B8(0x0004)
	int                                                m_afButtonPressed;                                        // 0x29BC(0x0004)
	int                                                m_afButtonReleased;                                       // 0x29C0(0x0004)
	int                                                m_nButtons;                                               // 0x29C4(0x0004)
	int                                                m_nImpulse;                                               // 0x29C8(0x0004)
	int                                                m_flPhysics;                                              // 0x29CC(0x0004)
	float                                              m_flStepSoundTime;                                        // 0x29D0(0x0004)
	float                                              m_flTimeAllSuitDevicesOff;                                // 0x29D4(0x0004)
	float                                              m_fStickySprintMinTime;                                   // 0x29D8(0x0004)
	bool                                               m_bPlayedSprintStartEffects;                              // 0x29DC(0x0001)
	bool                                               m_fIsSprinting;                                           // 0x29E4(0x0001)
	bool                                               m_fIsWalking;                                             // 0x29E5(0x0001)
	struct Time                                        m_lastSprintPressTime;                                    // 0x29F4(0x0004)
	struct Time                                        m_stickySprintForwardEnableTime;                          // 0x29F8(0x0004)
	struct Time                                        m_stickySprintForwardDisableTime;                         // 0x29FC(0x0004)
	struct Time                                        m_sprintStartedTime;                                      // 0x2A00(0x0004)
	float                                              m_sprintStartedFrac;                                      // 0x2A04(0x0004)
	struct Time                                        m_sprintEndedTime;                                        // 0x2A08(0x0004)
	float                                              m_sprintEndedFrac;                                        // 0x2A0C(0x0004)
	struct Time                                        m_stickySprintStartTime;                                  // 0x2A10(0x0004)
	struct Time                                        m_damageImpulseNoDecelEndTime;                            // 0x2A14(0x0004)
	int                                                m_duckState;                                              // 0x2A34(0x0004)
	int                                                m_leanState;                                              // 0x2A38(0x0004)
	bool                                               m_doingHalfDuck;                                          // 0x2A3C(0x0001)
	bool                                               m_canStand;                                               // 0x2A3D(0x0001)
	struct Vector                                      m_StandHullMin;                                           // 0x2A40(0x000C)
	struct Vector                                      m_StandHullMax;                                           // 0x2A4C(0x000C)
	struct Vector                                      m_DuckHullMin;                                            // 0x2A58(0x000C)
	struct Vector                                      m_DuckHullMax;                                            // 0x2A64(0x000C)
	struct Vector                                      m_upDir;                                                  // 0x2A74(0x000C)
	struct Vector                                      m_upDirPredicted;                                         // 0x2A80(0x000C)
	struct Vector                                      m_lastWallRunStartPos;                                    // 0x2A8C(0x000C)
	int                                                m_wallRunCount;                                           // 0x2A98(0x0004)
	bool                                               m_wallRunWeak;                                            // 0x2A9C(0x0001)
	bool                                               m_shouldBeOneHanded;                                      // 0x2A9D(0x0001)
	float                                              m_oneHandFraction;                                        // 0x2AA0(0x0004)
	float                                              m_animAimPitch;                                           // 0x2AA4(0x0004)
	float                                              m_animAimYaw;                                             // 0x2AA8(0x0004)
	float                                              m_wallRunPushAwayTime;                                    // 0x2AB8(0x0004)
	struct Time                                        m_wallrunRetryTime;                                       // 0x2AC4(0x0004)
	struct Vector                                      m_wallrunRetryPos;                                        // 0x2AC8(0x000C)
	struct Vector                                      m_wallrunRetryNormal;                                     // 0x2AD4(0x000C)
	float                                              m_wallHangTime;                                           // 0x2AF8(0x0004)
	int                                                m_traversalState;                                         // 0x2AFC(0x0004)
	int                                                m_traversalType;                                          // 0x2B00(0x0004)
	struct Vector                                      m_traversalBegin;                                         // 0x2B04(0x000C)
	struct Vector                                      m_traversalMid;                                           // 0x2B10(0x000C)
	struct Vector                                      m_traversalEnd;                                           // 0x2B1C(0x000C)
	float                                              m_traversalMidFrac;                                       // 0x2B28(0x0004)
	struct Vector                                      m_traversalForwardDir;                                    // 0x2B2C(0x000C)
	struct Vector                                      m_traversalRefPos;                                        // 0x2B38(0x000C)
	float                                              m_traversalProgress;                                      // 0x2B44(0x0004)
	struct Time                                        m_traversalStartTime;                                     // 0x2B48(0x0004)
	struct Time                                        m_traversalHandAppearTime;                                // 0x2B4C(0x0004)
	struct Time                                        m_traversalReleaseTime;                                   // 0x2B50(0x0004)
	struct Time                                        m_traversalBlendOutStartTime;                             // 0x2B54(0x0004)
	struct Vector                                      m_traversalBlendOutStartOffset;                           // 0x2B58(0x000C)
	float                                              m_traversalYawDelta;                                      // 0x2B64(0x0004)
	struct Time                                        m_wallDangleJumpOffTime;                                  // 0x2B70(0x0004)
	bool                                               m_wallDangleMayHangHere;                                  // 0x2B74(0x0001)
	bool                                               m_wallDangleForceFallOff;                                 // 0x2B75(0x0001)
	bool                                               m_wallDangleLastPushedForward;                            // 0x2B76(0x0001)
	int                                                m_wallDangleDisableWeapon;                                // 0x2B78(0x0004)
	float                                              m_wallDangleClimbProgressFloor;                           // 0x2B7C(0x0004)
	bool                                               m_wallClimbSetUp;                                         // 0x2B80(0x0001)
	bool                                               m_wallHanging;                                            // 0x2B81(0x0001)
	bool                                               m_gravityLiftActive;                                      // 0x2B82(0x0001)
	struct Time                                        m_gravityLiftEnterTime;                                   // 0x2B84(0x0004)
	struct Time                                        m_gravityLiftEjectTime;                                   // 0x2B88(0x0004)
	float                                              m_gravityLiftHoverTime;                                   // 0x2B8C(0x0004)
	struct Vector                                      m_gravityLiftLastOrigin;                                  // 0x2B90(0x000C)
	struct Vector                                      m_gravityLiftEjectVelocity;                               // 0x2B9C(0x000C)
	bool                                               m_blackholeActive;                                        // 0x2BA8(0x0001)
	bool                                               m_jetDriveWasActive;                                      // 0x2BA9(0x0001)
	bool                                               m_jetDriveActive;                                         // 0x2BAA(0x0001)
	struct Vector                                      m_jetDriveTargetPos;                                      // 0x2BAC(0x000C)
	struct EHANDLE                                     m_jetDriveTargetEnt;                                      // 0x2BB8(0x0004)
	struct Vector                                      m_jetDriveTargetEntOffset;                                // 0x2BBC(0x000C)
	struct Vector                                      m_jetDriveStartPos;                                       // 0x2BC8(0x000C)
	struct Time                                        m_jetDriveStartTime;                                      // 0x2BD4(0x0004)
	float                                              m_jetDriveSpeed;                                          // 0x2BD8(0x0004)
	float                                              m_jetDriveAccel;                                          // 0x2BDC(0x0004)
	struct Time                                        m_jetDriveDecelWindowTimeOutTime;                         // 0x2BE0(0x0004)
	bool                                               m_jetDriveInDecelWindow;                                  // 0x2BE4(0x0001)
	float                                              m_jetDriveTimeout;                                        // 0x2BE8(0x0004)
	struct Vector                                      m_jetDriveDoubleJumpVelocity;                             // 0x2BEC(0x000C)
	struct Embedded                                    m_grapple;                                                // 0x2C80(0x0000)
	struct Embedded                                    m_grapple;                                                // 0x2C80(0x0000)
	bool                                               m_grappleActive;                                          // 0x2D10(0x0001)
	bool                                               m_grappleActive;                                          // 0x2D10(0x0001)
	bool                                               m_grappleNeedWindowCheck;                                 // 0x2D11(0x0001)
	struct EHANDLE                                     m_grappleNextWindowHint;                                  // 0x2D14(0x0004)
	bool                                               m_slowMoEnabled;                                          // 0x2D24(0x0001)
	bool                                               m_sliding;                                                // 0x2D25(0x0001)
	bool                                               m_slideLongJumpAllowed;                                   // 0x2D26(0x0001)
	struct Time                                        m_lastSlideTime;                                          // 0x2D28(0x0004)
	float                                              m_lastSlideBoost;                                         // 0x2D2C(0x0004)
	int                                                m_gravityGrenadeStatusEffect;                             // 0x2D30(0x0004)
	float                                              m_ziprailBankTiltVel;                                     // 0x2D34(0x0004)
	bool                                               m_bIsStickySprinting;                                     // 0x2D3A(0x0001)
	float                                              m_prevMoveYaw;                                            // 0x2D3C(0x0004)
	float                                              m_sprintTiltVel;                                          // 0x2D40(0x0004)
	struct EHANDLE                                     m_turret;                                                 // 0x2D54(0x0004)
	struct EHANDLE                                     m_hViewModels;                                            // 0x2D58(0x000C)
	struct Embedded                                    m_viewOffsetEntity;                                       // 0x2D68(0x0000)
	struct EHANDLE                                     m_activeZipline;                                          // 0x2E98(0x0004)
	struct EHANDLE                                     m_lastZipline;                                            // 0x2E9C(0x0004)
	struct Time                                        m_lastZiplineDetachTime;                                  // 0x2EA0(0x0004)
	bool                                               m_ziplineValid3pWeaponLayerAnim;                          // 0x2EA4(0x0001)
	int                                                m_ziplineState;                                           // 0x2EA8(0x0004)
	struct Embedded                                    m_zipline;                                                // 0x2EB0(0x0000)
	struct Vector                                      m_ziplineViewOffsetPosition;                              // 0x2F28(0x000C)
	struct Vector                                      m_ziplineViewOffsetVelocity;                              // 0x2F34(0x000C)
	struct EHANDLE                                     m_ziplineGrenadeEntity;                                   // 0x2F40(0x0004)
	struct EHANDLE                                     m_ziplineGrenadeBeginStationEntity;                       // 0x2F44(0x0004)
	char                                               m_ziplineGrenadeBeginStationAttachmentId;                 // 0x2F48(0x0001)
	float                                              m_ziplineReattachCooldownTime;                            // 0x2F50(0x0004)
	char                                               m_ziplineCooldownIndex;                                   // 0x2F54(0x0001)
	int                                                m_playAnimationType;                                      // 0x2F58(0x0004)
	bool                                               m_detachGrappleOnPlayAnimationEnd;                        // 0x2F5C(0x0001)
	int                                                m_playAnimationNext;                                      // 0x2F5E(0x0004)
	bool                                               m_boosting;                                               // 0x2F70(0x0001)
	bool                                               m_activateBoost;                                          // 0x2F71(0x0001)
	bool                                               m_repeatedBoost;                                          // 0x2F72(0x0001)
	float                                              m_boostMeter;                                             // 0x2F74(0x0004)
	bool                                               m_jetpack;                                                // 0x2F78(0x0001)
	bool                                               m_activateJetpack;                                        // 0x2F79(0x0001)
	bool                                               m_jetpackAfterburner;                                     // 0x2F7A(0x0001)
	bool                                               m_gliding;                                                // 0x2F7B(0x0001)
	float                                              m_glideMeter;                                             // 0x2F7C(0x0004)
	float                                              m_glideRechargeDelayAccumulator;                          // 0x2F80(0x0004)
	bool                                               m_hovering;                                               // 0x2F84(0x0001)
	bool                                               m_isPerformingBoostAction;                                // 0x2F85(0x0001)
	float                                              m_lastJumpHeight;                                         // 0x2F88(0x0004)
	struct EHANDLE                                     m_touchingUpdraftTriggers;                                // 0x2F8C(0x0040)
	int                                                m_touchingUpdraftTriggersCount;                           // 0x2FCC(0x0004)
	struct EHANDLE                                     m_touchingSlipTriggers;                                   // 0x2FD0(0x0040)
	int                                                m_touchingSlipTriggersCount;                              // 0x3010(0x0004)
	struct Vector                                      m_slipAirRestrictDirection;                               // 0x3014(0x000C)
	struct Time                                        m_slipAirRestrictTime;                                    // 0x3020(0x0004)
	struct Embedded                                    m_melee;                                                  // 0x31B8(0x0000)
	bool                                               m_useCredit;                                              // 0x31F8(0x0001)
	struct Time                                        m_wallRunStartTime;                                       // 0x359C(0x0004)
	struct Time                                        m_wallRunClearTime;                                       // 0x35A0(0x0004)
	float                                              m_onSlopeTime;                                            // 0x35A4(0x0004)
	struct Vector                                      m_lastWallNormal;                                         // 0x35A8(0x000C)
	bool                                               m_dodging;                                                // 0x35B4(0x0001)
	struct Time                                        m_lastDodgeTime;                                          // 0x35B8(0x0004)
	struct Vector                                      m_vecPreviouslyPredictedOrigin;                           // 0x35D0(0x000C)
	float                                              m_flTimeLastTouchedWall;                                  // 0x35DC(0x0004)
	struct Time                                        m_timeJetpackHeightActivateCheckPassed;                   // 0x35E0(0x0004)
	float                                              m_flTimeLastTouchedGround;                                // 0x35E4(0x0004)
	float                                              m_flTimeLastJumped;                                       // 0x35E8(0x0004)
	float                                              m_flTimeLastJumpGraceTap;                                 // 0x35EC(0x0004)
	float                                              m_flJumpGraceMultiTapFactor;                              // 0x35F0(0x0004)
	int                                                m_jumpGraceTapCount;                                      // 0x35F4(0x0004)
	float                                              m_flTimeLastLanded;                                       // 0x35F8(0x0004)
	float                                              m_flLastLandFromHeight;                                   // 0x35FC(0x0004)
	float                                              m_usePressedTime;                                         // 0x3600(0x0004)
	float                                              m_lastUseTime;                                            // 0x3604(0x0004)
	struct Vector                                      m_lastFakeFloorPos;                                       // 0x3614(0x000C)
	bool                                               m_bHasJumpedSinceTouchedGround;                           // 0x3620(0x0001)
	bool                                               m_bDoMultiJumpPenalty;                                    // 0x3621(0x0001)
	bool                                               m_dodgingInAir;                                           // 0x3622(0x0001)
	float                                              m_timeShouldTryGivePlayerDoubleJump;                      // 0x3660(0x0004)
	bool                                               m_activeViewmodelModifiers;                               // 0x3858(0x0036)
	struct Time                                        m_lastMoveInputTime;                                      // 0x3AF0(0x0004)
	struct EHANDLE                                     m_ignoreEntityForMovementUntilNotTouching;                // 0x3AF4(0x0004)
	float                                              m_gameMovementUtil.m_surfaceFriction;                     // 0x3FC0(0x0004)
	struct EHANDLE                                     m_lungeTargetEntity;                                      // 0x403C(0x0004)
	bool                                               m_isLungingToPosition;                                    // 0x4040(0x0001)
	struct Vector                                      m_lungeTargetPosition;                                    // 0x4044(0x000C)
	struct Vector                                      m_lungeStartPositionOffset;                               // 0x4050(0x000C)
	struct Vector                                      m_lungeEndPositionOffset;                                 // 0x405C(0x000C)
	struct Time                                        m_lungeStartTime;                                         // 0x4068(0x0004)
	struct Time                                        m_lungeEndTime;                                           // 0x406C(0x0004)
	bool                                               m_lungeCanFly;                                            // 0x4070(0x0001)
	bool                                               m_lungeLockPitch;                                         // 0x4071(0x0001)
	float                                              m_lungeStartPitch;                                        // 0x4074(0x0004)
	float                                              m_lungeSmoothTime;                                        // 0x4078(0x0004)
	float                                              m_lungeMaxTime;                                           // 0x407C(0x0004)
	float                                              m_lungeMaxEndSpeed;                                       // 0x4080(0x0004)
	struct Vector                                      m_vPrevGroundNormal;                                      // 0x433C(0x000C)
	struct EHANDLE                                     m_prepClimbPusher;                                        // 0x460C(0x0004)
	struct Vector                                      m_pushAwayFromTopAcceleration;                            // 0x4610(0x000C)
	bool                                               m_controllerModeActive;                                   // 0x463C(0x0001)
	float                                              m_skydiveForwardPoseValueVelocity;                        // 0x4654(0x0004)
	float                                              m_skydiveForwardPoseValueTarget;                          // 0x4658(0x0004)
	float                                              m_skydiveForwardPoseValueCurrent;                         // 0x465C(0x0004)
	float                                              m_skydiveSidePoseValueVelocity;                           // 0x4660(0x0004)
	float                                              m_skydiveSidePoseValueTarget;                             // 0x4664(0x0004)
	float                                              m_skydiveSidePoseValueCurrent;                            // 0x4668(0x0004)
	float                                              m_skydiveYawVelocity;                                     // 0x466C(0x0004)
	bool                                               m_skydiveIsNearDisableSkydiveEndEntity;                   // 0x4670(0x0001)
	int                                                m_skydiveState;                                           // 0x468C(0x0004)
	struct Time                                        m_skydiveStartTime;                                       // 0x4690(0x0004)
	struct Time                                        m_skydiveEndTime;                                         // 0x4694(0x0004)
	struct Time                                        m_skydiveAnticipateStartTime;                             // 0x4698(0x0004)
	struct Time                                        m_skydiveAnticipateEndTime;                               // 0x469C(0x0004)
	float                                              m_skydiveDistanceToLand;                                  // 0x46A0(0x0004)
	float                                              m_skydiveDiveAngle;                                       // 0x46A4(0x0004)
	bool                                               m_skydiveIsDiving;                                        // 0x46A8(0x0001)
	float                                              m_skydiveSpeed;                                           // 0x46AC(0x0004)
	float                                              m_skydiveStrafeAngle;                                     // 0x46B0(0x0004)
	bool                                               m_skydiveFreelookEnabled;                                 // 0x46B4(0x0001)
	struct Vector                                      m_skydiveFreelookLockedAngle;                             // 0x46B8(0x000C)
	float                                              m_skydivePlayerPitch;                                     // 0x46C4(0x0004)
	float                                              m_skydivePlayerYaw;                                       // 0x46C8(0x0004)
	bool                                               m_skydiveFollowing;                                       // 0x46CC(0x0001)
	struct Vector                                      m_skydiveUnfollowVelocity;                                // 0x46D0(0x000C)
	struct Vector                                      m_skydiveDisableSkydiveEndEntityHitPosition;              // 0x46E0(0x000C)
	struct Vector                                      m_skydiveDisableSkydiveEndEntityHitNormal;                // 0x46EC(0x000C)
	struct Vector                                      m_skydiveSlipVelocity;                                    // 0x46F8(0x000C)
	bool                                               m_skydiveFromUpdraft;                                     // 0x4704(0x0001)
	bool                                               m_skydiveFromSkywardLaunch;                               // 0x4705(0x0001)
	int                                                m_skywardLaunchState;                                     // 0x4708(0x0004)
	struct Vector                                      m_skywardDeployStartPos;                                  // 0x4710(0x000C)
	float                                              m_skywardLaunchSlowStartTime;                             // 0x471C(0x0004)
	float                                              m_skywardLaunchSlowEndTime;                               // 0x4720(0x0004)
	float                                              m_skywardLaunchFastEndTime;                               // 0x4724(0x0004)
	float                                              m_skywardDeployEndTime;                                   // 0x4728(0x0004)
	float                                              m_skywardLaunchEndTime;                                   // 0x472C(0x0004)
	float                                              m_skywardDeploySpeed;                                     // 0x4730(0x0004)
	float                                              m_skywardLaunchSlowSpeed;                                 // 0x4734(0x0004)
	float                                              m_skywardLaunchFastSpeed;                                 // 0x4738(0x0004)
	struct Vector                                      m_skywardOffset;                                          // 0x473C(0x000C)
	float                                              m_skywardOffsetSpeed;                                     // 0x4748(0x0004)
	bool                                               m_skywardLaunchInterrupted;                               // 0x474C(0x0001)
	bool                                               m_skywardLaunchFollowing;                                 // 0x474D(0x0001)
	struct Vector                                      m_armoredLeapAirPos;                                      // 0x4754(0x000C)
	struct Vector                                      m_armoredLeapEndPos;                                      // 0x4760(0x000C)
	int                                                m_armoredLeapType;                                        // 0x476C(0x0004)
	int                                                m_armoredLeapPhase;                                       // 0x4770(0x0004)
	struct Time                                        m_armoredLeapStartTime;                                   // 0x4774(0x0004)
	int                                                m_dragReviveState;                                        // 0x47E0(0x0004)
	float                                              m_dragReviveOutroStartTime;                               // 0x47E4(0x0004)
	struct EHANDLE                                     m_reviveTarget;                                           // 0x47E8(0x0004)
	struct Embedded                                    m_playerKnockBacks;                                       // 0x4818(0x0000)
	int                                                m_updraftCount;                                           // 0x4898(0x0004)
	int                                                m_updraftStage;                                           // 0x489C(0x0004)
	struct Time                                        m_updraftEnterTime;                                       // 0x48A0(0x0004)
	struct Time                                        m_updraftLeaveTime;                                       // 0x48A4(0x0004)
	float                                              m_updraftMinShakeActivationHeight;                        // 0x48A8(0x0004)
	float                                              m_updraftMaxShakeActivationHeight;                        // 0x48AC(0x0004)
	float                                              m_updraftLiftActivationHeight;                            // 0x48B0(0x0004)
	float                                              m_updraftLiftSpeed;                                       // 0x48B4(0x0004)
	float                                              m_updraftLiftAcceleration;                                // 0x48B8(0x0004)
	float                                              m_updraftLiftExitDuration;                                // 0x48BC(0x0004)
	struct Time                                        m_updraftSlowTime;                                        // 0x48C0(0x0004)
};

//class DataMap.C_WindEmitter
class C_WindEmitter
{
	struct Vector                                      m_params.shapeParams;                                     // 0x0A60(0x000C)
	struct Vector                                      m_params.windDir;                                         // 0x0A6C(0x000C)
	float                                              m_params.windSpeed;                                       // 0x0A78(0x0004)
	int                                                m_params.shapeType;                                       // 0x0A7C(0x0004)
	bool                                               m_params.enabled;                                         // 0x0A80(0x0001)
};

//class DataMap.C_WindVolume
class C_WindVolume
{
	struct Vector                                      m_params.shapeParams;                                     // 0x0A60(0x000C)
	struct Vector                                      m_params.scale;                                           // 0x0A6C(0x000C)
	struct Vector                                      m_params.windOrigin;                                      // 0x0A78(0x000C)
	struct Vector                                      m_params.windDir;                                         // 0x0A84(0x000C)
	float                                              m_params.windSpeed;                                       // 0x0A90(0x0004)
	int                                                m_params.windType;                                        // 0x0A94(0x0004)
	float                                              m_params.windGustScale;                                   // 0x0A98(0x0004)
	float                                              m_params.edgeFade;                                        // 0x0A9C(0x0004)
	int                                                m_params.shapeType;                                       // 0x0AA0(0x0004)
	int                                                m_params.sortPriority;                                    // 0x0AA4(0x0004)
	bool                                               m_params.enabled;                                         // 0x0AA8(0x0001)
};

//class DataMap.C_WindSettings
class C_WindSettings
{
	string                                             m_windGustTexture;                                        // 0x0A60(0x0008)
};

//class DataMap.C_BaseAnimatingOverlay
class C_BaseAnimatingOverlay
{
	struct Embedded                                    m_AnimOverlay;                                            // 0x1648(0x0000)
	int                                                m_AnimOverlayCount;                                       // 0x1720(0x0004)
	bool                                               m_currentFrameAnimatingOverlay.animOverlayIsActive;       // 0x1774(0x0009)
	float                                              m_currentFrameAnimatingOverlay.animOverlayStartTime;      // 0x1780(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayStartCycle;     // 0x17A4(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayPlaybackRate;   // 0x17C8(0x0024)
	int                                                m_currentFrameAnimatingOverlay.animOverlayModelIndex;     // 0x17EC(0x0024)
	int                                                m_currentFrameAnimatingOverlay.animOverlaySequence;       // 0x1810(0x0012)
	float                                              m_currentFrameAnimatingOverlay.animOverlayWeight;         // 0x1824(0x0024)
	int                                                m_currentFrameAnimatingOverlay.animOverlayOrder;          // 0x1848(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayAnimTime;       // 0x186C(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayFadeInDuration; // 0x1890(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayFadeOutDuration;// 0x18B4(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayCycle;          // 0x18D8(0x0024)
};

//class DataMap.WeaponInventory_Client
class WeaponInventory_Client
{
	struct EHANDLE                                     weapons;                                                  // 0x0008(0x0030)
	struct EHANDLE                                     activeWeapons;                                            // 0x0054(0x000C)
};

//class DataMap.C_BaseCombatCharacter
class C_BaseCombatCharacter
{
	struct EHANDLE                                     m_currentFrame.weaponGettingSwitchedOut;                  // 0x00C8(0x0008)
	bool                                               m_currentFrame.showActiveWeapon3p;                        // 0x00D0(0x0002)
	float                                              m_deathVelocity;                                          // 0x0474(0x000C)
	int                                                m_phaseShiftFlags;                                        // 0x07B8(0x0004)
	struct Time                                        m_flNextAttack;                                           // 0x1980(0x0004)
	struct Time                                        m_lastFiredTime;                                          // 0x1984(0x0004)
	struct EHANDLE                                     m_lastFiredWeapon;                                        // 0x1988(0x0004)
	struct Time                                        m_raiseFromMeleeEndTime;                                  // 0x198C(0x0004)
	int                                                m_sharedEnergyCount;                                      // 0x1990(0x0004)
	int                                                m_sharedEnergyTotal;                                      // 0x1994(0x0004)
	int                                                m_sharedEnergyLockoutThreshold;                           // 0x1998(0x0004)
	struct Time                                        m_lastSharedEnergyRegenTime;                              // 0x199C(0x0004)
	struct Time                                        m_sharedEnergyRegenRate;                                  // 0x19A0(0x0004)
	float                                              m_sharedEnergyRegenDelay;                                 // 0x19A4(0x0004)
	struct Time                                        m_lastSharedEnergyTakeTime;                               // 0x19A8(0x0004)
	struct Embedded                                    m_inventory;                                              // 0x19B0(0x0000)
	char                                               m_selectedWeapons;                                        // 0x1A10(0x0002)
	struct EHANDLE                                     m_latestPrimaryWeapons;                                   // 0x1A14(0x0008)
	struct EHANDLE                                     m_latestPrimaryWeaponsIndexZeroOrOne;                     // 0x1A1C(0x0008)
	char                                               m_latestNonOffhandWeapons;                                // 0x1A24(0x0002)
	char                                               m_selectedOffhands;                                       // 0x1A26(0x0003)
	char                                               m_selectedOffhandsPendingHybridAction;                    // 0x1A29(0x0003)
	char                                               m_lastCycleSlot;                                          // 0x1A2C(0x0001)
	struct EHANDLE                                     m_latestMeleeWeapon;                                      // 0x1A30(0x0004)
	int                                                m_weaponPermission;                                       // 0x1A34(0x0004)
	struct Time                                        m_weaponDelayEnableTime;                                  // 0x1A38(0x0004)
	bool                                               m_weaponDisabledInScript;                                 // 0x1A3C(0x0001)
	char                                               m_weaponDisabledFlags;                                    // 0x1A52(0x0001)
	int                                                m_weaponTypeDisabledFlags;                                // 0x1A58(0x0004)
	char                                               m_weaponTypeDisabledRefCount;                             // 0x1A5C(0x0009)
	bool                                               m_weaponAmmoRegenDisabled;                                // 0x1A65(0x0001)
	int                                                m_weaponAmmoRegenDisabledRefCount;                        // 0x1A68(0x0004)
	bool                                               m_hudInfo_visibilityTestAlwaysPasses;                     // 0x1A6C(0x0001)
	int                                                m_contextAction;                                          // 0x1A80(0x0004)
	int                                                m_phaseShiftType;                                         // 0x1AAC(0x0004)
	struct Time                                        m_phaseShiftTimeStart;                                    // 0x1AB0(0x0004)
	struct Time                                        m_phaseShiftTimeEnd;                                      // 0x1AB4(0x0004)
};

//class DataMap.C_ExposureController
class C_ExposureController
{
	float                                              m_autoCompensation;                                       // 0x0A60(0x0004)
	float                                              m_autoForceValue;                                         // 0x0A64(0x0004)
	float                                              m_autoMin;                                                // 0x0A68(0x0004)
	float                                              m_autoMax;                                                // 0x0A6C(0x0004)
	float                                              m_autoSpeed;                                              // 0x0A70(0x0004)
	float                                              m_minFadeTime;                                            // 0x0A74(0x0004)
	bool                                               m_isDirectional;                                          // 0x0A78(0x0001)
	float                                              m_directionalHalfAngle;                                   // 0x0A7C(0x0004)
};

//class DataMap.C_ExposureVolume
class C_ExposureVolume
{
	struct unknow                                      m_volumeTester;                                           // 0x0A60(0x0008)
	struct ClassPtr                                    m_exposureTarget;                                         // 0x0A68(0x0008)
	string                                             m_exposureTargetName;                                     // 0x0A70(0x0008)
	float                                              m_exposurePriority;                                       // 0x0A78(0x0004)
};

//class DataMap.C_FogController
class C_FogController
{
	struct Embedded                                    m_fogParams;                                              // 0x0A60(0x006C)
	struct Vector                                      m_fogAngles;                                              // 0x0ACC(0x000C)
	bool                                               m_useAbsAngles;                                           // 0x0AD8(0x0001)
};

//class DataMap.C_FogVolume
class C_FogVolume
{
	struct unknow                                      m_volumeTester;                                           // 0x0A60(0x0008)
	struct ClassPtr                                    m_fogTarget;                                              // 0x0A68(0x0008)
	string                                             m_fogTargetName;                                          // 0x0A70(0x0008)
	int                                                m_fogPriority;                                            // 0x0A78(0x0004)
};

//class DataMap.C_BreakableSurface
class C_BreakableSurface
{
	char                                               m_nPanelBits;                                             // 0x0CE8(0x0100)
};

//class DataMap.C_NPC_SentryTurret
class C_NPC_SentryTurret
{
	int                                                m_killCount;                                              // 0x1E14(0x0004)
	int                                                m_titanKillCount;                                         // 0x1E18(0x0004)
};

//class DataMap.C_ParticleSystem
class C_ParticleSystem
{
	bool                                               m_bClientSide;                                            // 0x0A68(0x0001)
	bool                                               m_bActive;                                                // 0x0A69(0x0001)
	float                                              m_warmUpTime;                                             // 0x0A70(0x0004)
	bool                                               m_pauseAfterWarmup;                                       // 0x0A74(0x0001)
	bool                                               m_bInSkybox;                                              // 0x0A75(0x0001)
	bool                                               m_killForReplay;                                          // 0x0A76(0x0001)
	bool                                               m_killIfOverLimit;                                        // 0x0A77(0x0001)
};

//class DataMap.C_PlayerLocalData
class C_PlayerLocalData
{
	int                                                m_nStepside;                                              // 0x0008(0x0004)
	int                                                m_nOldButtons;                                            // 0x000C(0x0004)
	int                                                m_nOldVehicleButtons;                                     // 0x0010(0x0004)
	int                                                m_iHideHUD;                                               // 0x0014(0x0004)
	int                                                m_superJumpsUsed;                                         // 0x0018(0x0004)
	bool                                               m_jumpedOffRodeo;                                         // 0x001C(0x0001)
	struct Time                                        m_jumpPressTime;                                          // 0x0020(0x0004)
	struct Time                                        m_prevJumpPressTime;                                      // 0x0024(0x0004)
	struct Time                                        m_jetpackActivateTime;                                    // 0x0028(0x0004)
	struct Time                                        m_jetpackDeactivateTime;                                  // 0x002C(0x0004)
	float                                              m_flSuitPower;                                            // 0x0030(0x0004)
	float                                              m_flSuitJumpPower;                                        // 0x0034(0x0004)
	float                                              m_flSuitGrapplePower;                                     // 0x0038(0x0004)
	float                                              m_flFallVelocity;                                         // 0x003C(0x0004)
	float                                              m_flStepSize;                                             // 0x0040(0x0004)
	float                                              m_airSlowMoFrac;                                          // 0x0044(0x0004)
	int                                                predictableFlags;                                         // 0x0048(0x0004)
	int                                                m_bitsActiveDevices;                                      // 0x004C(0x0004)
	int                                                m_forceStance;                                            // 0x0050(0x0004)
	bool                                               m_forceSlide;                                             // 0x0054(0x0001)
	bool                                               m_duckToggleOn;                                           // 0x0055(0x0001)
	bool                                               m_bDrawViewmodel;                                         // 0x0056(0x0001)
	bool                                               m_bAllowAutoMovement;                                     // 0x0057(0x0001)
	struct Vector                                      m_airMoveBlockPlanes;                                     // 0x0184(0x0018)
	struct Time                                        m_airMoveBlockPlaneTime;                                  // 0x019C(0x0004)
	int                                                m_airMoveBlockPlaneCount;                                 // 0x01A0(0x0004)
	struct Time                                        m_queuedMeleePressTime;                                   // 0x01A4(0x0004)
	struct Time                                        m_queuedGrappleMeleeTime;                                 // 0x01A8(0x0004)
	bool                                               m_disableMeleeUntilRelease;                               // 0x01AD(0x0001)
	struct Time                                        m_meleePressTime;                                         // 0x01B0(0x0004)
	int                                                m_meleeDisabledCounter;                                   // 0x01B4(0x0004)
	int                                                m_meleeInputIndex;                                        // 0x01B8(0x0004)
	bool                                               m_oneHandedWeaponUsage;                                   // 0x01C0(0x0001)
	bool                                               m_prevOneHandedWeaponUsage;                               // 0x01C1(0x0001)
	bool                                               m_titanEmbarkEnabled;                                     // 0x01F4(0x0001)
	bool                                               m_titanDisembarkEnabled;                                  // 0x01F5(0x0001)
	float                                              m_playerAnimStationaryGoalFeetYaw;                        // 0x01FC(0x0004)
	bool                                               m_playerAnimJumping;                                      // 0x0200(0x0001)
	struct Time                                        m_playerAnimJumpStartTime;                                // 0x0204(0x0004)
	bool                                               m_playerAnimFirstJumpFrame;                               // 0x0208(0x0001)
	bool                                               m_playerAnimDodging;                                      // 0x0209(0x0001)
	int                                                m_playerAnimJumpActivity;                                 // 0x020A(0x0002)
	bool                                               m_playerAnimLanding;                                      // 0x020C(0x0001)
	bool                                               m_playerAnimShouldLand;                                   // 0x020D(0x0001)
	struct Time                                        m_playerAnimLandStartTime;                                // 0x0210(0x0004)
	bool                                               m_playerAnimInAirWalk;                                    // 0x0214(0x0001)
	float                                              m_playerAnimPrevFrameSequenceMotionYaw;                   // 0x0218(0x0004)
	int                                                m_playerAnimMeleeParity;                                  // 0x021C(0x0004)
	struct Time                                        m_playerAnimMeleeStartTime;                               // 0x0220(0x0004)
	struct Quaternion                                  m_playerLocalGravityToWorldTransform;                     // 0x0224(0x0030)
	struct Quaternion                                  m_playerLocalGravityBlendStartRotation;                   // 0x0254(0x0010)
	struct Quaternion                                  m_playerLocalGravityBlendEndRotation;                     // 0x0264(0x0010)
	struct Vector                                      m_playerLocalGravityBlendEndDirection;                    // 0x0274(0x000C)
	struct Time                                        m_playerLocalGravityBlendStartTime;                       // 0x0280(0x0004)
	struct Time                                        m_playerLocalGravityBlendEndTime;                         // 0x0284(0x0004)
	float                                              m_playerLocalGravityBlendStrength;                        // 0x0288(0x0004)
	float                                              m_playerLocalGravityStrength;                             // 0x028C(0x0004)
	int                                                m_playerLocalGravityType;                                 // 0x0290(0x0004)
	struct Vector                                      m_playerLocalGravityPoint;                                // 0x0294(0x000C)
	struct Vector                                      m_playerLocalGravityLineStart;                            // 0x02A0(0x000C)
	struct Vector                                      m_playerLocalGravityLineEnd;                              // 0x02AC(0x000C)
	struct EHANDLE                                     m_playerLocalGravityEntity;                               // 0x02B8(0x0004)
	struct EHANDLE                                     m_playerLocalGravityLineStartEntity;                      // 0x02BC(0x0004)
	struct EHANDLE                                     m_playerLocalGravityLineEndEntity;                        // 0x02C0(0x0004)
	struct Time                                        m_playerFloatLookStartTime;                               // 0x02C4(0x0004)
	struct Time                                        m_playerFloatLookEndTime;                                 // 0x02C8(0x0004)
	float                                              m_wallrunLatestFloorHeight;                               // 0x02CC(0x0004)
	bool                                               m_wallrunFromJetpack;                                     // 0x02D0(0x0001)
	struct Vector                                      m_groundNormal;                                           // 0x02D4(0x000C)
	bool                                               m_continuousUseBlocked;                                   // 0x02E0(0x0001)
	struct EHANDLE                                     m_useEnt;                                                 // 0x02E4(0x0004)
};

//class DataMap.C_DynamicProp
class C_DynamicProp
{
	bool                                               m_bClientSide;                                            // 0x1640(0x0001)
};

//class DataMap.C_Team
class C_Team
{
	int                                                m_score;                                                  // 0x0A60(0x0004)
	int                                                m_score2;                                                 // 0x0A64(0x0004)
	int                                                m_kills;                                                  // 0x0A68(0x0004)
	int                                                m_deaths;                                                 // 0x0A6C(0x0004)
	int                                                m_iRoundsWon;                                             // 0x0A70(0x0004)
	int                                                m_iTeamTeamNum;                                           // 0x0A74(0x0004)
	char                                               m_szTeamname;                                             // 0x0A98(0x0100)
};

//class DataMap.C_TriggerCylinderHeavy
class C_TriggerCylinderHeavy
{
	struct Time                                        m_nextLaunchTime;                                         // 0x0ACC(0x0004)
	struct Time                                        m_teslaTrapObstructedEndTime;                             // 0x0B2C(0x0004)
};

//class DataMap.C_PlayerVehicle
class C_PlayerVehicle
{
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Embedded                                    m_SequenceTransitioner;                                   // 0x0C20(0x0000)
	struct EHANDLE                                     m_vehicleDriver;                                          // 0x1984(0x0004)
	bool                                               m_vehicleActivated;                                       // 0x19A8(0x0001)
	bool                                               m_blockDuckInput;                                         // 0x19A9(0x0001)
	float                                              m_vehicleLaunchTime;                                      // 0x19B8(0x0004)
	struct Vector                                      m_vehicleVelocity;                                        // 0x19C8(0x000C)
	struct EHANDLE                                     m_vehicleGroundEntity;                                    // 0x19D4(0x0004)
	struct Vector                                      m_vehicleGroundNormal;                                    // 0x19D8(0x000C)
	float                                              m_vehicleGroundDist;                                      // 0x19E4(0x0004)
	float                                              m_hoverVehicleHoverOffsetPrev;                            // 0x19E8(0x0010)
	struct Vector                                      m_hoverVehicleGroundAngles;                               // 0x19F8(0x000C)
	bool                                               m_hoverVehicleIsOnGround;                                 // 0x1A04(0x0001)
	bool                                               m_hoverVehicleHoverSimulationIsAwake;                     // 0x1A06(0x0001)
	struct Vector                                      m_hoverVehicleSmoothTilt;                                 // 0x1AB8(0x000C)
	struct Vector                                      m_hoverVehicleSmoothTiltVelocity;                         // 0x1AC4(0x000C)
	float                                              m_hoverVehicleSmoothYaw;                                  // 0x1AD0(0x0004)
	float                                              m_hoverVehicleSmoothYawVelocity;                          // 0x1AD4(0x0004)
	struct Vector                                      m_hoverVehicleLookAheadAcceleration;                      // 0x1AD8(0x000C)
	struct Time                                        m_hoverVehicleLastBoostTime;                              // 0x1AE4(0x0004)
	bool                                               m_hoverVehicleIsMarkedAsDrivingForward;                   // 0x1AEE(0x0001)
	float                                              m_hoverVehicleStunTimeEnd;                                // 0x1AF0(0x0004)
	float                                              m_hoverVehicleThrottle;                                   // 0x1AF4(0x0004)
	float                                              m_hoverVehicleBanking;                                    // 0x1AFC(0x0004)
	float                                              m_hoverVehicleFrictionLastTime;                           // 0x1B00(0x0004)
	int                                                m_hoverVehicleFrictionSurfPropOther;                      // 0x1B04(0x0004)
	struct Vector                                      m_hoverVehicleFrictionNormal;                             // 0x1B08(0x000C)
	struct Vector                                      m_hoverVehicleFrictionPos;                                // 0x1B14(0x000C)
	struct Vector                                      m_hoverVehiclePhysPush;                                   // 0x1B20(0x000C)
};

//class DataMap.CBaseGrenade
class CBaseGrenade
{
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	bool                                               m_doesExplode;                                            // 0x2E21(0x0001)
	bool                                               m_DmgRadius;                                              // 0x2E24(0x0004)
	float                                              m_grenadeCreationTime;                                    // 0x2E34(0x0004)
	struct Vector                                      m_grenadeCreationOrigin;                                  // 0x2E38(0x000C)
	bool                                               m_useMaskAbility;                                         // 0x2E44(0x0001)
	int                                                m_grenadeStatusFlags;                                     // 0x2E48(0x0004)
	float                                              m_flDamage;                                               // 0x2ED0(0x0004)
	struct EHANDLE                                     m_hThrower;                                               // 0x2ED4(0x0004)
};

//class DataMap.CBaseViewModel
class CBaseViewModel
{
	short                                              m_currentFrame.modelIndex;                                // 0x00A8(0x0002)
	float                                              m_currentFrame.animCycle;                                 // 0x00C4(0x0004)
	struct Vector                                      m_angAbsRotation;                                         // 0x0134(0x000C)
	struct Vector                                      m_vecAbsOrigin;                                           // 0x014C(0x000C)
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0164(0x000C)
	int                                                m_fEffects;                                               // 0x0448(0x0004)
	struct Vector                                      m_angNetworkAngles;                                       // 0x0494(0x000C)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	struct Time                                        m_nResetEventsStartTime;                                  // 0x0E68(0x0004)
	int                                                m_nResetEventsParity;                                     // 0x0E6C(0x0004)
	bool                                               m_bSequenceFinished;                                      // 0x0EFC(0x0001)
	float                                              m_currentFrameBaseAnimating.animStartTime;                // 0x0F14(0x0004)
	float                                              m_currentFrameBaseAnimating.animStartCycle;               // 0x0F18(0x0004)
	float                                              m_currentFrameBaseAnimating.animPlaybackRate;             // 0x0F1C(0x0004)
	int                                                m_currentFrameBaseAnimating.animModelIndex;               // 0x0F20(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequenceParity;           // 0x0F24(0x0004)
	int                                                m_currentFrameBaseAnimating.animSequence;                 // 0x0F2C(0x0002)
	bool                                               m_currentFrameAnimatingOverlay.animOverlayIsActive;       // 0x1774(0x0009)
	float                                              m_currentFrameAnimatingOverlay.animOverlayStartTime;      // 0x1780(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayStartCycle;     // 0x17A4(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayPlaybackRate;   // 0x17C8(0x0024)
	int                                                m_currentFrameAnimatingOverlay.animOverlayModelIndex;     // 0x17EC(0x0024)
	int                                                m_currentFrameAnimatingOverlay.animOverlaySequence;       // 0x1810(0x0012)
	float                                              m_currentFrameAnimatingOverlay.animOverlayWeight;         // 0x1824(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayAnimTime;       // 0x186C(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayFadeInDuration; // 0x1890(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayFadeOutDuration;// 0x18B4(0x0024)
	float                                              m_currentFrameAnimatingOverlay.animOverlayCycle;          // 0x18D8(0x0024)
	struct EHANDLE                                     m_viewModelOwner;                                         // 0x19D4(0x0004)
	bool                                               m_projectileIsVisible;                                    // 0x19D8(0x0001)
	bool                                               m_bBlockEventLayer;                                       // 0x1DD0(0x0001)
	bool                                               m_isAdsTransition;                                        // 0x1DD1(0x0001)
	struct EHANDLE                                     m_hWeapon;                                                // 0x1DD4(0x0004)
	char                                               m_tracerAttachments;                                      // 0x1DD8(0x0002)
	char                                               m_tracerAttachments;                                      // 0x1DD8(0x0002)
	char                                               m_tracerAttachmentsScoped;                                // 0x1DDA(0x0002)
	char                                               m_tracerAttachmentsScoped;                                // 0x1DDA(0x0002)
};

//class DataMap.CCollisionProperty
class CCollisionProperty
{
	struct Vector                                      m_vecMins;                                                // 0x0010(0x000C)
	struct Vector                                      m_vecMaxs;                                                // 0x001C(0x000C)
	int                                                m_usSolidFlags;                                           // 0x0028(0x0004)
	char                                               m_nSolidType;                                             // 0x002C(0x0001)
	char                                               m_triggerBloat;                                           // 0x002D(0x0001)
	char                                               m_collisionDetailLevel;                                   // 0x002E(0x0001)
};

//class DataMap.C_PropDoor
class C_PropDoor
{
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0164(0x000C)
	int                                                m_nNextThinkTick;                                         // 0x0574(0x0004)
	float                                              m_angle;                                                  // 0x16B4(0x0004)
	float                                              m_startAngle;                                             // 0x16B8(0x0004)
	float                                              m_startAngleVel;                                          // 0x16BC(0x0004)
	struct Time                                        m_startMoveTime;                                          // 0x16C0(0x0004)
	float                                              m_nextHitSoundTime;                                       // 0x16CC(0x0004)
	float                                              m_lastThinkTime;                                          // 0x16D0(0x0004)
	struct EHANDLE                                     m_interactingPlayer;                                      // 0x1718(0x0004)
	bool                                               m_interactingPlayerWantsOpen;                             // 0x171C(0x0001)
	struct Time                                        m_useDebounceEndTime;                                     // 0x1720(0x0004)
	float                                              m_prevAngle;                                              // 0x1728(0x0004)
};

//class DataMap.C_EnvWindShared
class C_EnvWindShared
{
	float                                              m_flStartTime;                                            // 0x0008(0x0004)
	int                                                m_iWindSeed;                                              // 0x000C(0x0004)
	int                                                m_iMinWind;                                               // 0x0010(0x0004)
	int                                                m_iMaxWind;                                               // 0x0014(0x0004)
	int                                                m_windRadius;                                             // 0x0018(0x0004)
	int                                                m_iMinGust;                                               // 0x001C(0x0004)
	int                                                m_iMaxGust;                                               // 0x0020(0x0004)
	float                                              m_flMinGustDelay;                                         // 0x0024(0x0004)
	float                                              m_flMaxGustDelay;                                         // 0x0028(0x0004)
	float                                              m_flGustDuration;                                         // 0x002C(0x0004)
	int                                                m_iGustDirChange;                                         // 0x0030(0x0004)
	struct Vector                                      m_location;                                               // 0x0034(0x000C)
	int                                                m_iszGustSound;                                           // 0x0040(0x0004)
	int                                                m_iWindDir;                                               // 0x0044(0x0004)
	float                                              m_flWindSpeed;                                            // 0x0048(0x0004)
	struct Vector                                      m_currentWindVector;                                      // 0x004C(0x000C)
	struct Vector                                      m_CurrentSwayVector;                                      // 0x0058(0x000C)
	struct Vector                                      m_PrevSwayVector;                                         // 0x0064(0x000C)
	int                                                m_iInitialWindDir;                                        // 0x0070(0x0004)
	float                                              m_flInitialWindSpeed;                                     // 0x0074(0x0004)
	float                                              m_flVariationTime;                                        // 0x0078(0x0004)
	float                                              m_flSimTime;                                              // 0x007C(0x0004)
	float                                              m_flSwitchTime;                                           // 0x0080(0x0004)
	float                                              m_flAveWindSpeed;                                         // 0x0084(0x0004)
	bool                                               m_bGusting;                                               // 0x0088(0x0001)
	float                                              m_flWindAngleVariation;                                   // 0x008C(0x0004)
	float                                              m_flWindSpeedVariation;                                   // 0x0090(0x0004)
	int                                                m_iEntIndex;                                              // 0x0094(0x0004)
	void                                               m_Stream;                                                 // 0x0098(0x0038)
	void                                               m_WindVariationStream;                                    // 0x00D0(0x0038)
	void                                               m_WindAveQueue;                                           // 0x0108(0x0038)
	void                                               m_WindVariationQueue;                                     // 0x0140(0x0038)
};

//class DataMap.C_GlobalNonRewinding
class C_GlobalNonRewinding
{
	struct Embedded                                    m_playerObserver;                                         // 0x0A60(0x0008)
	struct Embedded                                    m_playerMiscData;                                         // 0x0E60(0x0008)
};

//class DataMap.C_SequenceTransitionerLayer
class C_SequenceTransitionerLayer
{
	bool                                               m_sequenceTransitionerLayerActive;                        // 0x0018(0x0001)
	float                                              m_sequenceTransitionerLayerStartCycle;                    // 0x001C(0x0004)
	int                                                m_sequenceTransitionerLayerSequence;                      // 0x0020(0x0002)
	float                                              m_weight;                                                 // 0x0024(0x0004)
	float                                              m_sequenceTransitionerLayerPlaybackRate;                  // 0x0028(0x0004)
	struct Time                                        m_sequenceTransitionerLayerStartTime;                     // 0x002C(0x0004)
	float                                              m_sequenceTransitionerLayerFadeOutDuration;               // 0x0030(0x0004)
};

//class DataMap.C_SequenceTransitioner
class C_SequenceTransitioner
{
	struct Embedded                                    m_sequenceTransitionerLayers;                             // 0x0050(0x0000)
	int                                                m_sequenceTransitionerLayerCount;                         // 0x01A0(0x0004)
};

//class DataMap.C_KnockBack
class C_KnockBack
{
	struct Vector                                      velocity;                                                 // 0x0008(0x000C)
	struct Time                                        beginTime;                                                // 0x0014(0x0004)
	struct Time                                        endTime;                                                  // 0x0018(0x0004)
};

//class DataMap.CPlayerShared
class CPlayerShared
{
	int                                                m_nPlayerCond;                                            // 0x0008(0x0004)
};

//class DataMap.CPredictedFirstPersonProxy
class CPredictedFirstPersonProxy
{
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0164(0x000C)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	struct Vector                                      m_angNetworkAngles;                                       // 0x0494(0x000C)
	struct Embedded                                    m_SequenceTransitioner;                                   // 0x0C20(0x0000)
};

//class DataMap.C_WindowHint
class C_WindowHint
{
	struct Vector                                      normal;                                                   // 0x0A70(0x000C)
	struct Vector                                      right;                                                    // 0x0A7C(0x000C)
	float                                              halfSize;                                                 // 0x0A88(0x0008)
	float                                              halfSize[0];                                              // 0x0A88(0x0004)
	float                                              halfSize[1];                                              // 0x0A8C(0x0004)
};

//class DataMap.C_WallrunCurve
class C_WallrunCurve
{
	int                                                width;                                                    // 0x0A70(0x0004)
	int                                                height;                                                   // 0x0A74(0x0004)
};

//class DataMap.CGrappleHook
class CGrappleHook
{
	struct EHANDLE                                     m_pMoveParent;                                            // 0x0118(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0164(0x000C)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	char                                               m_parentAttachment;                                       // 0x0854(0x0001)
	struct EHANDLE                                     m_grappleZipline;                                         // 0x1640(0x0004)
};

//class DataMap.CTurret
class CTurret
{
	float                                              m_aimAngle;                                               // 0x19A0(0x000C)
	float                                              m_minConeAngle;                                           // 0x19AC(0x000C)
	float                                              m_maxConeAngle;                                           // 0x19B8(0x000C)
};

//class DataMap.C_VortexSphere
class C_VortexSphere
{
	bool                                               m_enabled;                                                // 0x0A60(0x0001)
	float                                              m_radius;                                                 // 0x0A64(0x0004)
	float                                              m_height;                                                 // 0x0A68(0x0004)
	float                                              m_bulletFov;                                              // 0x0A6C(0x0004)
	int                                                m_bulletAbsorbedCount;                                    // 0x0A70(0x0004)
	int                                                m_projectileAbsorbedCount;                                // 0x0A74(0x0004)
	struct EHANDLE                                     m_ownerWeapon;                                            // 0x0A78(0x0004)
	struct EHANDLE                                     m_vortexEffect;                                           // 0x0A7C(0x0004)
	struct Vector                                      m_vortexLocalAngles;                                      // 0x0A80(0x000C)
	string                                             m_gunAttachment;                                          // 0x0A90(0x0008)
	struct unknow                                      m_listPrev;                                               // 0x0A98(0x0008)
	struct unknow                                      m_listNext;                                               // 0x0AA0(0x0008)
};

//class DataMap.C_CrossbowBolt
class C_CrossbowBolt
{
	int                                                m_bounceCount;                                            // 0x2E20(0x0004)
	int                                                m_maxBounceCount;                                         // 0x2E24(0x0004)
	bool                                               m_doesGrow;                                               // 0x2E28(0x0001)
	float                                              m_growStartSize;                                          // 0x2E2C(0x0004)
	struct Tick                                        m_growStage1Tick;                                         // 0x2E30(0x0004)
	float                                              m_growStage1Size;                                         // 0x2E34(0x0004)
	struct Tick                                        m_growStage2Tick;                                         // 0x2E38(0x0004)
	float                                              m_growStage2Size;                                         // 0x2E3C(0x0004)
	struct Tick                                        m_growStageFinalTick;                                     // 0x2E40(0x0004)
	float                                              m_growStageFinalSize;                                     // 0x2E44(0x0004)
};

//class DataMap.C_Missile
class C_Missile
{
	bool                                               m_hasPlayedWhizby;                                        // 0x2E20(0x0001)
	struct Vector                                      m_whizByStart;                                            // 0x2E24(0x000C)
	char                                               m_whizBySoundName;                                        // 0x2E30(0x0040)
	float                                              m_homingSpeed;                                            // 0x2E70(0x0004)
	float                                              m_homingSpeedDodgingPlayer;                               // 0x2E74(0x0004)
	struct Vector                                      m_launchDir;                                              // 0x2E78(0x000C)
	struct EHANDLE                                     m_hSpecificTarget;                                        // 0x2E84(0x0004)
	struct Vector                                      m_targetOffset;                                           // 0x2E88(0x000C)
	struct Vector                                      m_targetPosition;                                         // 0x2E94(0x000C)
	bool                                               m_useTargetPosition;                                      // 0x2EA0(0x0001)
	float                                              m_postIgnitionSpeed;                                      // 0x2EA4(0x0004)
	struct Time                                        m_flGracePeriodEndsAt;                                    // 0x2EA8(0x0004)
	bool                                               m_pathSettingsInitialized;                                // 0x2EAC(0x0001)
	bool                                               m_expandContractMissile;                                  // 0x2EAD(0x0001)
	bool                                               m_spiralMissile;                                          // 0x2EAE(0x0001)
	void                                               m_spiralSettings;                                         // 0x2ED0(0x0024)
	struct Embedded                                    m_expandContractSettings;                                 // 0x2F40(0x0058)
	struct Time                                        m_lastThinkTime;                                          // 0x2F98(0x0004)
	struct EHANDLE                                     m_explosionIgnoreEntity;                                  // 0x2F9C(0x0004)
};

//class DataMap.C_Projectile
class C_Projectile
{
	bool                                               m_weaponDataIsSet;                                        // 0x1640(0x0001)
	bool                                               m_forceAdjustToGunBarrelDisabled;                         // 0x1641(0x0001)
	int                                                m_weaponClassIndex;                                       // 0x1644(0x0004)
	float                                              m_destructionDistance;                                    // 0x1648(0x0004)
	int                                                m_passThroughDepthTotal;                                  // 0x164C(0x0004)
	int                                                m_modBitfield;                                            // 0x1650(0x0004)
	int                                                m_overrideMods;                                           // 0x1654(0x0004)
	int                                                m_projectileTrailIndex;                                   // 0x1658(0x0004)
	int                                                m_impactEffectTable;                                      // 0x165C(0x0004)
	bool                                               m_reducedEffects;                                         // 0x1660(0x0001)
	float                                              m_projectileCreationTimeServer;                           // 0x1664(0x0004)
	struct EHANDLE                                     m_weaponSource;                                           // 0x1668(0x0004)
	int                                                m_passThroughModCount;                                    // 0x166C(0x0004)
	struct Vector                                      m_passThroughPoints;                                      // 0x1670(0x000C)
	int                                                m_preModdedTrailEffectIndices1p;                          // 0x167C(0x0004)
	int                                                m_preModdedTrailEffectIndices3p;                          // 0x1680(0x0004)
	struct Vector                                      m_launchOrigin;                                           // 0x1684(0x000C)
	struct unknow                                      m_wpnData;                                                // 0x1690(0x0008)
	short                                              m_hWeaponFileInfo;                                        // 0x1698(0x0002)
	int                                                m_weaponChargeLevel;                                      // 0x169C(0x0004)
	float                                              m_weaponChargeFraction;                                   // 0x16A0(0x0004)
	void                                               m_modVars;                                                // 0x16A8(0x1408)
	bool                                               m_modVarsAreValid;                                        // 0x2AB0(0x0001)
	struct Vector                                      m_launchVel;                                              // 0x2AB4(0x000C)
	void                                               m_scriptCB;                                               // 0x2AC0(0x0028)
	bool                                               m_hasPlayedTrailEffect;                                   // 0x2AE8(0x0001)
	struct Tick                                        m_projectileLifeTimeEndTick;                              // 0x2AEC(0x0004)
	float                                              m_projectileCreationTime;                                 // 0x2AF0(0x0004)
	bool                                               m_isVortexRefired;                                        // 0x2AF4(0x0001)
	bool                                               m_damageAliveOnly;                                        // 0x2AF5(0x0001)
	bool                                               m_usesPositionFunction;                                   // 0x2AF6(0x0001)
	struct Vector                                      m_lastCollisionNormal;                                    // 0x2AF8(0x000C)
	int                                                m_bounceIndex;                                            // 0x2B04(0x0004)
	int                                                m_randomInt;                                              // 0x2B08(0x0004)
	bool                                               m_thrownByAI;                                             // 0x2B0C(0x0001)
	float                                              m_perPolyRadius;                                          // 0x2B10(0x0008)
	struct Vector                                      m_posBeforePhysicsSimulate;                               // 0x2B18(0x000C)
	bool                                               m_hasIgnited;                                             // 0x2B24(0x0001)
	bool                                               m_inLagCompensation;                                      // 0x2B25(0x0001)
	struct EHANDLE                                     m_passEntities;                                           // 0x2B28(0x0068)
	float                                              m_projectileSpeed;                                        // 0x2B90(0x0004)
	bool                                               m_wantStartTrailEffect;                                   // 0x2BB0(0x0001)
	bool                                               m_hasCalledPostDataUpdate;                                // 0x2BB2(0x0001)
};

//class DataMap.CWeaponX
class CWeaponX
{
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	int                                                m_nNextThinkTick;                                         // 0x0574(0x0004)
	struct Embedded                                    m_SequenceTransitioner;                                   // 0x0C20(0x0000)
	struct EHANDLE                                     m_weaponOwner;                                            // 0x1640(0x0004)
	struct Time                                        m_lastPrimaryAttackTime;                                  // 0x1644(0x0004)
	struct Time                                        m_nextReadyTime;                                          // 0x1648(0x0004)
	struct Time                                        m_nextPrimaryAttackTime;                                  // 0x164C(0x0004)
	struct Time                                        m_attackTimeThisFrame;                                    // 0x1650(0x0004)
	int                                                m_worldModelIndexOverride;                                // 0x1654(0x0004)
	int                                                m_iWorldModelIndex;                                       // 0x1658(0x0004)
	int                                                m_holsterModelIndex;                                      // 0x165C(0x0004)
	int                                                m_droppedModelIndex;                                      // 0x1660(0x0004)
	int                                                m_idealSequence;                                          // 0x1664(0x0002)
	int                                                m_idealActivity;                                          // 0x1666(0x0002)
	int                                                m_weaponActivity;                                         // 0x1668(0x0002)
	int                                                m_ActiveState;                                            // 0x166C(0x0004)
	int                                                m_ammoInClip;                                             // 0x1670(0x0004)
	int                                                m_ammoInStockpile;                                        // 0x1674(0x0004)
	int                                                m_lifetimeShots;                                          // 0x1678(0x0004)
	struct Time                                        m_flTimeWeaponIdle;                                       // 0x167C(0x0004)
	int                                                m_weapState;                                              // 0x1680(0x0004)
	bool                                               m_discarded;                                              // 0x1685(0x0001)
	bool                                               m_bInReload;                                              // 0x1686(0x0001)
	int                                                m_tossRelease;                                            // 0x168C(0x0001)
	int                                                m_offhandSwitchSlot;                                      // 0x1690(0x0004)
	int                                                m_energizeState;                                          // 0x1694(0x0001)
	struct Time                                        m_startEnergizingTime;                                    // 0x1698(0x0004)
	struct Time                                        m_energizedEndTime;                                       // 0x169C(0x0004)
	float                                              m_heatValue;                                              // 0x16A0(0x0004)
	float                                              m_heatValueOnLastFire;                                    // 0x16A4(0x0004)
	int                                                m_customActivity;                                         // 0x16A8(0x0002)
	int                                                m_customActivitySequence;                                 // 0x16AA(0x0002)
	struct EHANDLE                                     m_customActivityOwner;                                    // 0x16AC(0x0004)
	struct Time                                        m_customActivityEndTime;                                  // 0x16B0(0x0004)
	char                                               m_customActivityFlags;                                    // 0x16B4(0x0001)
	struct Embedded                                    m_playerData;                                             // 0x16B8(0x0000)
	bool                                               m_targetingLaserEnabledScript;                            // 0x17AC(0x0001)
	bool                                               m_needsReloadCheck;                                       // 0x17AD(0x0001)
	bool                                               m_needsEmptyCycleCheck;                                   // 0x17AE(0x0001)
	int                                                m_skinOverride;                                           // 0x17B0(0x0004)
	bool                                               m_skinOverrideIsValid;                                    // 0x17B4(0x0001)
	struct Time                                        m_chargeStartTime;                                        // 0x17B8(0x0004)
	struct Time                                        m_chargeEndTime;                                          // 0x17BC(0x0004)
	float                                              m_lastChargeFrac;                                         // 0x17C0(0x0004)
	struct Time                                        m_lastRegenTime;                                          // 0x17C4(0x0004)
	struct Time                                        m_cooldownEndTime;                                        // 0x17C8(0x0004)
	bool                                               m_stockPileWasDraining;                                   // 0x17CC(0x0001)
	bool                                               m_weaponIsCharging;                                       // 0x17CD(0x0001)
	bool                                               m_weaponChargeLevelIncreasedAnimPlaying;                  // 0x17CE(0x0001)
	int                                                m_lastChargeLevel;                                        // 0x17D0(0x0004)
	int                                                m_chargeEnergyDepleteStepCounter;                         // 0x17D4(0x0004)
	int                                                m_burstFireCount;                                         // 0x17D8(0x0004)
	int                                                m_burstFireIndex;                                         // 0x17DC(0x0004)
	int                                                m_shotIndexForSpread;                                     // 0x17E0(0x0004)
	int                                                m_shotCount;                                              // 0x17E4(0x0004)
	struct Time                                        m_sustainedDischargeEndTime;                              // 0x17E8(0x0004)
	float                                              m_sustainedLaserCurrentSpread;                            // 0x17EC(0x0004)
	bool                                               m_sustainedDischargeIsInPrimaryAttack;                    // 0x17F0(0x0001)
	char                                               m_sustainedLaserNextRandomSeed;                           // 0x17F1(0x0001)
	int                                                m_modBitfieldFromPlayer;                                  // 0x17F4(0x0004)
	int                                                m_modBitfieldInternal;                                    // 0x17F8(0x0004)
	int                                                m_modBitfieldCurrent;                                     // 0x17FC(0x0004)
	int                                                m_curSharedEnergyCost;                                    // 0x1800(0x0004)
	bool                                               m_grappleWeaponNeedsDryfire;                              // 0x1804(0x0001)
	float                                              m_scriptFloat0;                                           // 0x1808(0x0004)
	bool                                               m_shouldPlayIdleAnims;                                    // 0x180C(0x0001)
	bool                                               m_scriptActivated;                                        // 0x180D(0x0001)
	char                                               m_curReactiveSkinKillCount;                               // 0x180E(0x0001)
	char                                               m_curReactiveSkinKnockdownCount;                          // 0x180F(0x0001)
	char                                               m_attachmentIndices;                                      // 0x1810(0x0003)
	float                                              m_flNextEmptySoundTime;                                   // 0x2E40(0x0004)
	bool                                               m_bRemoveable;                                            // 0x2E64(0x0001)
};

//class DataMap.C_ZiplinePhysicsNode
class C_ZiplinePhysicsNode
{
	struct Vector                                      position;                                                 // 0x0008(0x000C)
	struct Vector                                      prevPosition;                                             // 0x0014(0x000C)
};

//class DataMap.C_ZiplinePhysicsAttachedEntity
class C_ZiplinePhysicsAttachedEntity
{
	struct EHANDLE                                     entity;                                                   // 0x0008(0x0004)
	struct Vector                                      attachAcceleration;                                       // 0x000C(0x000C)
	float                                              attachTime;                                               // 0x0018(0x0004)
};

//class DataMap.C_ZiplinePhysics
class C_ZiplinePhysics
{
	int                                                m_ziplineType;                                            // 0x000C(0x0004)
	struct Vector                                      m_ziplineStart;                                           // 0x0010(0x000C)
	struct Vector                                      m_ziplineEnd;                                             // 0x001C(0x000C)
	struct Embedded                                    m_nodes;                                                  // 0x0028(0x0000)
	int                                                m_numNodes;                                               // 0x0228(0x0004)
	int                                                m_springDistance;                                         // 0x022C(0x0004)
	float                                              m_remainingUnsimulatedTime;                               // 0x0234(0x0004)
	struct Embedded                                    m_attachedEntities;                                       // 0x0240(0x0000)
	int                                                m_numAttachedEntities;                                    // 0x0340(0x0004)
	struct EHANDLE                                     m_ziplineOwner;                                           // 0x0344(0x0004)
};

//class DataMap.C_Zipline
class C_Zipline
{
	bool                                               m_detachEndOnUse;                                         // 0x0A60(0x0001)
	int                                                m_currentFrameZipline.numZiplinePoints;                   // 0x0A88(0x0004)
	struct Vector                                      m_currentFrameZipline.ziplinePositions;                   // 0x0A8C(0x00C0)
	struct Vector                                      m_currentFrameZipline.ziplinePreviousPositions;           // 0x0B4C(0x00C0)
	float                                              m_currentFrameZipline.ziplineDistances;                   // 0x0C0C(0x003C)
	struct Embedded                                    m_ziplinePhysics;                                         // 0x0C60(0x0000)
};

//class DataMap.C_BaseEntity
class C_BaseEntity
{
	int                                                m_iEFlags;                                                // 0x0058(0x0004)
	int                                                m_fFlags;                                                 // 0x0098(0x0004)
	short                                              m_currentFrame.modelIndex;                                // 0x00A8(0x0002)
	struct Vector                                      m_currentFrame.viewOffset;                                // 0x00B8(0x000C)
	struct Vector                                      m_vecAngVelocity;                                         // 0x0128(0x000C)
	struct Vector                                      m_angAbsRotation;                                         // 0x0134(0x000C)
	struct Vector                                      m_vecAbsVelocity;                                         // 0x0140(0x000C)
	struct Vector                                      m_vecAbsOrigin;                                           // 0x014C(0x000C)
	struct Vector                                      m_localOrigin;                                            // 0x0158(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0164(0x000C)
	float                                              m_flGravity;                                              // 0x0424(0x0004)
	float                                              m_flProxyRandomValue;                                     // 0x0428(0x0004)
	struct EHANDLE                                     m_hGroundEntity;                                          // 0x0438(0x0004)
	float                                              m_flMaxspeed;                                             // 0x0440(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_fEffects;                                               // 0x0448(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_passThroughFlags;                                       // 0x0468(0x0004)
	int                                                m_passThroughThickness;                                   // 0x046C(0x0004)
	float                                              m_passThroughDirection;                                   // 0x0470(0x0004)
	struct Vector                                      m_deathVelocity;                                          // 0x0474(0x000C)
	bool                                               m_bIsSoundCodeControllerValueSet;                         // 0x0480(0x0001)
	float                                              m_flSoundCodeControllerValue;                             // 0x0484(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	struct Vector                                      m_angNetworkAngles;                                       // 0x0494(0x000C)
	float                                              m_flFriction;                                             // 0x04A0(0x0004)
	struct EHANDLE                                     m_hOwnerEntity;                                           // 0x04A8(0x0004)
	bool                                               m_bRenderWithViewModels;                                  // 0x04AC(0x0001)
	char                                               m_nRenderFX;                                              // 0x04AD(0x0001)
	char                                               m_nRenderMode;                                            // 0x04B9(0x0001)
	char                                               m_MoveType;                                               // 0x04BA(0x0001)
	char                                               m_MoveCollide;                                            // 0x04BB(0x0001)
	struct Embedded                                    m_Collision;                                              // 0x04C0(0x0000)
};

//class DataMap.C_BaseEntity
class C_BaseEntity
{
	string                                             m_ModelName;                                              // 0x0030(0x0008)
	int                                                m_fFlags;                                                 // 0x0098(0x0004)
	struct Vector                                      m_angAbsRotation;                                         // 0x0134(0x000C)
	struct PositionVector                              m_vecAbsOrigin;                                           // 0x014C(0x000C)
	struct PositionVector                              m_vecPrevAbsOrigin;                                       // 0x0418(0x000C)
	float                                              m_flGravity;                                              // 0x0424(0x0004)
	float                                              m_rgflCoordinateFrame;                                    // 0x08D0(0x0030)
};

//class RecvTable.DT_CollisionProperty
class DT_CollisionProperty
{
	struct Vector                                      m_vecMins;                                                // 0x0010(0x000C)
	struct Vector                                      m_vecMaxs;                                                // 0x001C(0x000C)
	int                                                m_usSolidFlags;                                           // 0x0028(0x0004)
	int                                                m_nSolidType;                                             // 0x002C(0x0001)
	int                                                m_triggerBloat;                                           // 0x002D(0x0001)
	int                                                m_collisionDetailLevel;                                   // 0x002E(0x0001)
	int                                                m_nSurroundType;                                          // 0x003C(0x0001)
	struct Vector                                      m_vecSpecifiedSurroundingMins;                            // 0x0048(0x000C)
	struct Vector                                      m_vecSpecifiedSurroundingMaxs;                            // 0x0054(0x000C)
};

//class RecvTable.DT_PredictableId
class DT_PredictableId
{
	int                                                m_PredictableID;                                          // 0x07CC(0x0004)
};

//class RecvTable.DT_HighlightSettings
class DT_HighlightSettings
{
	struct m_highlightParams                           m_highlightParams;                                        // 0x01B8(0x0000)
	struct m_highlightFunctionBits                     m_highlightFunctionBits;                                  // 0x02C0(0x0000)
	struct m_highlightTeamBits                         m_highlightTeamBits;                                      // 0x0318(0x0000)
	struct m_highlightServerFadeBases                  m_highlightServerFadeBases;                               // 0x0370(0x0000)
	struct m_highlightServerFadeStartTimes             m_highlightServerFadeStartTimes;                          // 0x0378(0x0000)
	struct m_highlightServerFadeEndTimes               m_highlightServerFadeEndTimes;                            // 0x0380(0x0000)
	int                                                m_highlightServerContextID;                               // 0x03C0(0x0004)
};

//class RecvTable.DT_BaseEntity
class DT_BaseEntity
{
	struct DT_HighlightSettings                        HighlightSettings;                                        // 0x0000(0x0000)
	int                                                movetype;                                                 // 0x0000(0xFFFFFFFF)
	int                                                movecollide;                                              // 0x0000(0xFFFFFFFF)
	struct DT_PredictableId                            predictable_id;                                           // 0x0000(0x0000)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	int                                                m_clrRender;                                              // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_clIntensity;                                            // 0x0054(0x0001)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_bossPlayer;                                             // 0x0124(0x0004)
	int                                                m_shieldHealth;                                           // 0x0170(0x0004)
	int                                                m_shieldHealthMax;                                        // 0x0174(0x0004)
	int                                                m_wantsScopeHighlight;                                    // 0x03EC(0x0001)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_teamMemberIndex;                                        // 0x0454(0x0004)
	int                                                m_squadID;                                                // 0x0458(0x0004)
	int                                                m_grade;                                                  // 0x045C(0x0004)
	int                                                m_ignorePredictedTriggerFlags;                            // 0x0460(0x0004)
	int                                                m_passThroughFlags;                                       // 0x0468(0x0004)
	int                                                m_passThroughThickness;                                   // 0x046C(0x0004)
	float                                              m_passThroughDirection;                                   // 0x0470(0x0004)
	int                                                m_bIsSoundCodeControllerValueSet;                         // 0x0480(0x0001)
	float                                              m_flSoundCodeControllerValue;                             // 0x0484(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	int                                                m_bRenderWithViewModels;                                  // 0x04AC(0x0001)
	int                                                m_nRenderFX;                                              // 0x04AD(0x0001)
	int                                                m_nRenderMode;                                            // 0x04B9(0x0001)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	int                                                m_contents;                                               // 0x0544(0x0004)
	int                                                m_collideWithOwner;                                       // 0x0548(0x0001)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	string                                             m_iName;                                                  // 0x0589(0x0000)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	int                                                m_instanceNameIndex;                                      // 0x0694(0x0004)
	string                                             m_holdUsePrompt;                                          // 0x0718(0x0000)
	string                                             m_pressUsePrompt;                                         // 0x0720(0x0000)
	int                                                m_phaseShiftFlags;                                        // 0x07B8(0x0004)
	int                                                m_baseTakeDamage;                                         // 0x07BC(0x0001)
	int                                                m_invulnerableToDamageCount;                              // 0x07C0(0x0004)
	struct Time                                        m_attachmentLerpStartTime;                                // 0x0834(0x0004)
	struct Time                                        m_attachmentLerpEndTime;                                  // 0x0838(0x0004)
	struct Vector                                      m_attachmentLerpStartOrigin;                              // 0x083C(0x000C)
	struct Vector                                      m_attachmentLerpStartAngles;                              // 0x0848(0x000C)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_dissolveEffectEntityHandle;                             // 0x0914(0x0004)
	int                                                m_usablePriority;                                         // 0x0924(0x0004)
	float                                              m_usableDistanceOverride;                                 // 0x0928(0x0004)
	float                                              m_usableFOV;                                              // 0x092C(0x0004)
	float                                              m_usePromptSize;                                          // 0x0930(0x0004)
	struct m_spottedByTeams                            m_spottedByTeams;                                         // 0x0948(0x0000)
	int                                                m_firstChildEntityLink;                                   // 0x0A40(0x0004)
	int                                                m_firstParentEntityLink;                                  // 0x0A44(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
};

//class RecvTable.DT_SkyCamera
class DT_SkyCamera
{
	struct DT_BaseEntity                               DT_SkyCamera;                                             // 0x0000(0x0000)
};

//class RecvTable.DT_ZiplinePhysicsExlusive
class DT_ZiplinePhysicsExlusive
{
	struct m_nodes                                     m_nodes;                                                  // 0x0028(0x0000)
	int                                                m_numNodes;                                               // 0x0228(0x0004)
	float                                              m_remainingUnsimulatedTime;                               // 0x0234(0x0004)
};

//class RecvTable.DT_ZiplinePhysics
class DT_ZiplinePhysics
{
	struct DT_ZiplinePhysicsExlusive                   ziplinephysicsexclusive;                                  // 0x0000(0x0000)
	int                                                m_isInit;                                                 // 0x0008(0x0001)
	int                                                m_ziplineType;                                            // 0x000C(0x0004)
	struct Vector                                      m_ziplineStart;                                           // 0x0010(0x000C)
	struct Vector                                      m_ziplineEnd;                                             // 0x001C(0x000C)
	float                                              m_springDistance;                                         // 0x022C(0x0004)
	float                                              m_springDistanceScale;                                    // 0x0230(0x0004)
	int                                                m_outerZiplineEntity;                                     // 0x0238(0x0004)
	struct m_attachedEntities                          m_attachedEntities;                                       // 0x0240(0x0000)
	int                                                m_numAttachedEntities;                                    // 0x0340(0x0004)
	int                                                m_ziplineOwner;                                           // 0x0344(0x0004)
};

//class RecvTable.DT_Zipline
class DT_Zipline
{
	struct DT_BaseEntity                               DT_Zipline;                                               // 0x0000(0x0000)
	int                                                m_numZiplinePoints;                                       // 0x0008(0x0004)
	struct m_ziplinePositions                          m_ziplinePositions;                                       // 0x000C(0x0000)
	int                                                m_detachEndOnUse;                                         // 0x0A60(0x0001)
	int                                                m_dropToBottom;                                           // 0x0A61(0x0001)
	float                                              m_ziplineAutoDetachDistance;                              // 0x0A64(0x0004)
	int                                                m_ziplineVerticalPushOffInDirectionX;                     // 0x0A68(0x0001)
	int                                                m_ziplineVerticalPreserveVelocity;                        // 0x0A69(0x0001)
	float                                              m_ziplineWidth;                                           // 0x0A6C(0x0004)
	int                                                m_ziplineEnabled;                                         // 0x0A70(0x0001)
	int                                                m_ziplineAutoAttachEnabled;                               // 0x0A71(0x0001)
	float                                              m_ziplineFadeDist;                                        // 0x0A74(0x0004)
	float                                              m_ziplineSpeedScale;                                      // 0x0A78(0x0004)
	int                                                m_ziplineFollowsPath;                                     // 0x0A7C(0x0001)
	int                                                m_prevZipline;                                            // 0x0C50(0x0004)
	int                                                m_nextZipline;                                            // 0x0C54(0x0004)
	struct DT_ZiplinePhysics                           m_ziplinePhysics;                                         // 0x0C60(0x0000)
	int                                                m_ziplineMaterialIndex;                                   // 0x0FA8(0x0004)
	struct m_ziplineRestPositions                      m_ziplineRestPositions;                                   // 0x0FAC(0x0000)
	int                                                m_numZiplineRestPositions;                                // 0x106C(0x0004)
};

//class RecvTable.DT_Ziprail
class DT_Ziprail
{
	struct DT_Zipline                                  DT_Ziprail;                                               // 0x0000(0x0000)
	int                                                m_numZiprailPathNodes;                                    // 0x1080(0x0001)
	struct m_numSmoothPointsForPathNodes               m_numSmoothPointsForPathNodes;                            // 0x1084(0x0000)
	struct m_tangentTypesForPathNodes                  m_tangentTypesForPathNodes;                               // 0x1104(0x0000)
	struct m_positionsForPathNodes                     m_positionsForPathNodes;                                  // 0x1184(0x0000)
	struct m_smoothDistanceToNode                      m_smoothDistanceToNode;                                   // 0x1304(0x0000)
	float                                              m_ziprailPathLen;                                         // 0x1384(0x0004)
	struct Vector                                      m_pathExtentsMins;                                        // 0x1388(0x000C)
	struct Vector                                      m_pathExtentsMaxs;                                        // 0x1394(0x000C)
	int                                                m_ziprailUseAutoDetachSpeed;                              // 0x13A0(0x0001)
	float                                              m_ziprailMountReverseDistance;                            // 0x13A4(0x0004)
};

//class RecvTable.DT_ZiplineEnd
class DT_ZiplineEnd
{
	struct DT_BaseEntity                               DT_ZiplineEnd;                                            // 0x0000(0x0000)
	float                                              m_autoDetachDistance;                                     // 0x0A60(0x0004)
	int                                                m_verticalPushOffInDirectionX;                            // 0x0A64(0x0001)
	int                                                m_prevZipline;                                            // 0x0A68(0x0004)
};

//class RecvTable.DT_ServerAnimationData
class DT_ServerAnimationData
{
	struct Time                                        m_animStartTime;                                          // 0x0008(0x0004)
	float                                              m_animStartCycle;                                         // 0x000C(0x0004)
	int                                                m_animSequence;                                           // 0x0020(0x0002)
	struct Time                                        m_nResetEventsStartTime;                                  // 0x0E68(0x0004)
	int                                                m_nResetEventsParity;                                     // 0x0E6C(0x0004)
};

//class RecvTable.DT_SequenceTransitioner
class DT_SequenceTransitioner
{
	struct m_sequenceTransitionerLayers                m_sequenceTransitionerLayers;                             // 0x0050(0x0000)
	int                                                m_sequenceTransitionerLayerCount;                         // 0x01A0(0x0004)
};

//class RecvTable.DT_AnimRelativeData
class DT_AnimRelativeData
{
	struct Vector                                      m_animInitialPos;                                         // 0x0000(0x000C)
	struct Vector                                      m_animInitialVel;                                         // 0x000C(0x000C)
	struct Rotation                                    m_animInitialRot;                                         // 0x0018(0x0010)
	struct Vector                                      m_animInitialCorrectPos;                                  // 0x0028(0x000C)
	struct Rotation                                    m_animInitialCorrectRot;                                  // 0x0034(0x0010)
	struct Vector                                      m_animEntityToRefOffset;                                  // 0x0044(0x000C)
	struct Rotation                                    m_animEntityToRefRotation;                                // 0x0050(0x0010)
	struct Time                                        m_animBlendBeginTime;                                     // 0x0060(0x0004)
	struct Time                                        m_animBlendEndTime;                                       // 0x0064(0x0004)
	int                                                m_animScriptSequence;                                     // 0x0068(0x0002)
	int                                                m_animScriptModel;                                        // 0x006C(0x0004)
	int                                                m_animIgnoreParentRot;                                    // 0x0070(0x0001)
	int                                                m_animMotionMode;                                         // 0x0074(0x0004)
};

//class RecvTable.DT_PredictedAnimEventData
class DT_PredictedAnimEventData
{
	struct m_predictedAnimEventTimes                   m_predictedAnimEventTimes;                                // 0x0008(0x0000)
	struct m_predictedAnimEventIndices                 m_predictedAnimEventIndices;                              // 0x0028(0x0000)
	int                                                m_predictedAnimEventCount;                                // 0x0048(0x0004)
	int                                                m_predictedAnimEventTarget;                               // 0x004C(0x0004)
	int                                                m_predictedAnimEventSequence;                             // 0x0050(0x0002)
	int                                                m_predictedAnimEventModel;                                // 0x0054(0x0004)
	struct Time                                        m_predictedAnimEventsReadyToFireTime;                     // 0x0058(0x0004)
};

//class RecvTable.DT_BaseAnimating
class DT_BaseAnimating
{
	struct DT_BaseEntity                               DT_BaseAnimating;                                         // 0x0000(0x0000)
	struct DT_ServerAnimationData                      serveranimdata;                                           // 0x0000(0x0000)
	float                                              m_animPlaybackRate;                                       // 0x0010(0x0004)
	int                                                m_animModelIndex;                                         // 0x0014(0x0004)
	int                                                m_nNewSequenceParity;                                     // 0x0018(0x0004)
	int                                                m_animFrozen;                                             // 0x0022(0x0001)
	int                                                m_bClientSideRagdoll;                                     // 0x0023(0x0001)
	struct Vector                                      m_vecForce;                                               // 0x0024(0x000C)
	struct m_flPoseParameter                           m_flPoseParameter;                                        // 0x0030(0x0000)
	float                                              m_flEstIkOffset;                                          // 0x0090(0x0004)
	int                                                m_passDamageToParent;                                     // 0x07C4(0x0001)
	int                                                m_animNetworkFlags;                                       // 0x0A88(0x0004)
	int                                                m_animActive;                                             // 0x0A8C(0x0001)
	int                                                m_animCollisionEnabled;                                   // 0x0A8F(0x0001)
	int                                                m_animRelativeToGroundEnabled;                            // 0x0A90(0x0001)
	int                                                m_animPlantingEnabled;                                    // 0x0A91(0x0001)
	struct DT_AnimRelativeData                         m_animRelativeData;                                       // 0x0A94(0x0000)
	int                                                m_syncingWithEntity;                                      // 0x0B84(0x0004)
	struct DT_PredictedAnimEventData                   m_predictedAnimEventData;                                 // 0x0B88(0x0000)
	int                                                m_nRagdollImpactFXTableId;                                // 0x0BF4(0x0004)
	float                                              m_flSkyScaleStartValue;                                   // 0x0BF8(0x0004)
	float                                              m_flSkyScaleEndValue;                                     // 0x0BFC(0x0004)
	struct Time                                        m_flSkyScaleStartTime;                                    // 0x0C00(0x0004)
	struct Time                                        m_flSkyScaleEndTime;                                      // 0x0C04(0x0004)
	struct DT_SequenceTransitioner                     m_SequenceTransitioner;                                   // 0x0C20(0x0000)
	int                                                m_itemFlavorGUID;                                         // 0x0E4C(0x0004)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	int                                                m_skinMod;                                                // 0x0E58(0x0002)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	int                                                m_camoIndex;                                              // 0x0E60(0x0004)
	int                                                m_nForceBone;                                             // 0x0E98(0x0004)
	int                                                m_bSequenceFinished;                                      // 0x0EFC(0x0001)
	float                                              m_lockedAnimDeltaYaw;                                     // 0x0F00(0x0004)
	float                                              m_flModelScale;                                           // 0x0F08(0x0004)
};

//class RecvTable.DT_WeaponX_LocalWeaponData
class DT_WeaponX_LocalWeaponData
{
	int                                                m_nNextThinkTick;                                         // 0x0574(0x0004)
	struct Time                                        m_lastPrimaryAttackTime;                                  // 0x1644(0x0004)
	struct Time                                        m_nextReadyTime;                                          // 0x1648(0x0004)
	struct Time                                        m_nextPrimaryAttackTime;                                  // 0x164C(0x0004)
	struct Time                                        m_attackTimeThisFrame;                                    // 0x1650(0x0004)
	int                                                m_ammoInClip;                                             // 0x1670(0x0004)
	int                                                m_ammoInStockpile;                                        // 0x1674(0x0004)
	int                                                m_lifetimeShots;                                          // 0x1678(0x0004)
	struct Time                                        m_flTimeWeaponIdle;                                       // 0x167C(0x0004)
	int                                                m_bInReload;                                              // 0x1686(0x0001)
};

//class RecvTable.DT_WeaponPlayerData
class DT_WeaponPlayerData
{
	float                                              m_moveSpread;                                             // 0x0008(0x0004)
	struct Time                                        m_spreadStartTime;                                        // 0x000C(0x0004)
	float                                              m_spreadStartFracHip;                                     // 0x0010(0x0004)
	float                                              m_spreadStartFracADS;                                     // 0x0014(0x0004)
	float                                              m_kickSpreadHipfire;                                      // 0x0018(0x0004)
	float                                              m_kickSpreadADS;                                          // 0x001C(0x0004)
	struct Time                                        m_kickTime;                                               // 0x0020(0x0004)
	float                                              m_kickScaleBasePitch;                                     // 0x0024(0x0004)
	float                                              m_kickScaleBaseYaw;                                       // 0x0028(0x0004)
	float                                              m_kickPatternScaleBase;                                   // 0x002C(0x0004)
	struct Time                                        m_kickSpringHeatBaseTime;                                 // 0x0030(0x0004)
	float                                              m_kickSpringHeatBaseValue;                                // 0x0034(0x0004)
	struct Time                                        m_semiAutoTriggerHoldTime;                                // 0x0038(0x0004)
	int                                                m_semiAutoTriggerDown;                                    // 0x003C(0x0001)
	int                                                m_pendingTriggerPull;                                     // 0x003D(0x0001)
	int                                                m_semiAutoNeedsRechamber;                                 // 0x003E(0x0001)
	int                                                m_pendingReloadAttempt;                                   // 0x003F(0x0001)
	int                                                m_offhandHybridNormalMode;                                // 0x0040(0x0001)
	int                                                m_pendingoffhandHybridToss;                               // 0x0041(0x0001)
	int                                                m_fastHolster;                                            // 0x0042(0x0001)
	int                                                m_didFirstDeploy;                                         // 0x0043(0x0001)
	int                                                m_shouldCatch;                                            // 0x0044(0x0001)
	int                                                m_clipModelIsHidden;                                      // 0x0045(0x0001)
	int                                                m_segmentedReloadEndSeqRequired;                          // 0x0046(0x0001)
	int                                                m_reloadStartedEmpty;                                     // 0x0047(0x0001)
	int                                                m_segmentedAnimStartedOneHanded;                          // 0x0048(0x0001)
	int                                                m_segmentedReloadCanRestartLoop;                          // 0x0049(0x0001)
	int                                                m_segmentedReloadLoopFireLocked;                          // 0x004A(0x0001)
	struct m_realtimeModCmds                           m_realtimeModCmds;                                        // 0x004B(0x0000)
	int                                                m_realtimeModCmdHead;                                     // 0x0053(0x0001)
	int                                                m_realtimeModCmdCount;                                    // 0x0054(0x0001)
	int                                                m_realtimeModCanADS;                                      // 0x0055(0x0001)
	int                                                m_customActivityAttachedModelIndex;                       // 0x0058(0x0004)
	int                                                m_customActivityAttachedModelAttachmentId;                // 0x005C(0x0001)
	struct Time                                        m_fireRateLerp_startTime;                                 // 0x0060(0x0004)
	float                                              m_fireRateLerp_startFraction;                             // 0x0064(0x0004)
	struct Time                                        m_fireRateLerp_stopTime;                                  // 0x0068(0x0004)
	float                                              m_fireRateLerp_stopFraction;                              // 0x006C(0x0004)
	int                                                m_chargeAnimIndex;                                        // 0x0070(0x0004)
	int                                                m_chargeAnimIndexOld;                                     // 0x0074(0x0004)
	int                                                m_proScreen_owner;                                        // 0x0078(0x0004)
	int                                                m_proScreen_int0;                                         // 0x007C(0x0004)
	int                                                m_proScreen_int1;                                         // 0x0080(0x0004)
	int                                                m_proScreen_int2;                                         // 0x0084(0x0004)
	float                                              m_proScreen_float0;                                       // 0x0088(0x0004)
	float                                              m_proScreen_float1;                                       // 0x008C(0x0004)
	float                                              m_proScreen_float2;                                       // 0x0090(0x0004)
	int                                                m_reloadMilestone;                                        // 0x0094(0x0004)
	int                                                m_rechamberMilestone;                                     // 0x0098(0x0004)
	int                                                m_cooldownMilestone;                                      // 0x009C(0x0004)
	int                                                m_prevSeqWeight;                                          // 0x00A0(0x0004)
	struct Time                                        m_fullReloadStartTime;                                    // 0x00A4(0x0004)
	struct Time                                        m_scriptTime0;                                            // 0x00A8(0x0004)
	struct Time                                        m_scriptTime1;                                            // 0x00AC(0x0004)
	int                                                m_scriptFlags0;                                           // 0x00B0(0x0004)
	int                                                m_scriptInt0;                                             // 0x00B4(0x0002)
	int                                                m_scriptInt1;                                             // 0x00B6(0x0002)
	float                                              m_curZoomFOV;                                             // 0x00B8(0x0004)
	float                                              m_targetZoomFOV;                                          // 0x00BC(0x0004)
	float                                              m_zoomFOVLerpTime;                                        // 0x00C0(0x0004)
	struct Time                                        m_zoomFOVLerpEndTime;                                     // 0x00C4(0x0004)
	struct Time                                        m_latestDryfireTime;                                      // 0x00C8(0x0004)
	struct Time                                        m_requestedAttackEndTime;                                 // 0x00CC(0x0004)
	int                                                m_currentAltFireAnimIndex;                                // 0x00D0(0x0004)
	int                                                m_legendaryModelIndex;                                    // 0x00D4(0x0004)
	int                                                m_charmModelIndex;                                        // 0x00D8(0x0004)
	int                                                m_charmAttachment;                                        // 0x00DC(0x0001)
	int                                                m_charmItemFlavorGUID;                                    // 0x00E0(0x0004)
	int                                                m_stickerDecalMaterialIndex;                              // 0x00E4(0x0004)
	int                                                m_stickerDecalAttachment;                                 // 0x00E8(0x0001)
	float                                              m_stickerScale;                                           // 0x00EC(0x0004)
};

//class RecvTable.DT_WeaponX_PredictingClientOnly
class DT_WeaponX_PredictingClientOnly
{
	struct Time                                        m_lastRegenTime;                                          // 0x17C4(0x0004)
	struct Time                                        m_cooldownEndTime;                                        // 0x17C8(0x0004)
	int                                                m_stockPileWasDraining;                                   // 0x17CC(0x0001)
	int                                                m_weaponIsCharging;                                       // 0x17CD(0x0001)
	int                                                m_weaponChargeLevelIncreasedAnimPlaying;                  // 0x17CE(0x0001)
	int                                                m_lastChargeLevel;                                        // 0x17D0(0x0004)
	int                                                m_chargeEnergyDepleteStepCounter;                         // 0x17D4(0x0004)
	int                                                m_burstFireCount;                                         // 0x17D8(0x0004)
	int                                                m_burstFireIndex;                                         // 0x17DC(0x0004)
	int                                                m_shotIndexForSpread;                                     // 0x17E0(0x0004)
	int                                                m_shotCount;                                              // 0x17E4(0x0004)
	int                                                m_animModelIndexPredictingClientOnly;                     // 0x1828(0x0004)
	int                                                m_animSequencePredictingClientOnly;                       // 0x182C(0x0002)
};

//class RecvTable.DT_WeaponX
class DT_WeaponX
{
	struct DT_BaseAnimating                            DT_WeaponX;                                               // 0x0000(0x0000)
	struct DT_WeaponX_LocalWeaponData                  LocalWeaponData;                                          // 0x0000(0x0000)
	struct DT_WeaponX_PredictingClientOnly             predictingClientOnly;                                     // 0x0000(0x0000)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_bClientSideAnimation;                                   // 0x100E(0x0001)
	int                                                m_weaponOwner;                                            // 0x1640(0x0004)
	int                                                m_worldModelIndexOverride;                                // 0x1654(0x0004)
	int                                                m_iWorldModelIndex;                                       // 0x1658(0x0004)
	int                                                m_holsterModelIndex;                                      // 0x165C(0x0004)
	int                                                m_droppedModelIndex;                                      // 0x1660(0x0004)
	int                                                m_idealSequence;                                          // 0x1664(0x0002)
	int                                                m_idealActivity;                                          // 0x1666(0x0002)
	int                                                m_weaponActivity;                                         // 0x1668(0x0002)
	int                                                m_ActiveState;                                            // 0x166C(0x0004)
	int                                                m_weapState;                                              // 0x1680(0x0004)
	int                                                m_allowedToUse;                                           // 0x1684(0x0001)
	int                                                m_discarded;                                              // 0x1685(0x0001)
	int                                                m_forcedADS;                                              // 0x1688(0x0004)
	int                                                m_tossRelease;                                            // 0x168C(0x0001)
	int                                                m_offhandSwitchSlot;                                      // 0x1690(0x0004)
	int                                                m_energizeState;                                          // 0x1694(0x0001)
	struct Time                                        m_startEnergizingTime;                                    // 0x1698(0x0004)
	struct Time                                        m_energizedEndTime;                                       // 0x169C(0x0004)
	float                                              m_heatValue;                                              // 0x16A0(0x0004)
	float                                              m_heatValueOnLastFire;                                    // 0x16A4(0x0004)
	int                                                m_customActivity;                                         // 0x16A8(0x0002)
	int                                                m_customActivitySequence;                                 // 0x16AA(0x0002)
	int                                                m_customActivityOwner;                                    // 0x16AC(0x0004)
	struct Time                                        m_customActivityEndTime;                                  // 0x16B0(0x0004)
	int                                                m_customActivityFlags;                                    // 0x16B4(0x0001)
	struct DT_WeaponPlayerData                         m_playerData;                                             // 0x16B8(0x0000)
	int                                                m_lastTossedGrenade;                                      // 0x17A8(0x0004)
	int                                                m_targetingLaserEnabledScript;                            // 0x17AC(0x0001)
	int                                                m_needsReloadCheck;                                       // 0x17AD(0x0001)
	int                                                m_needsEmptyCycleCheck;                                   // 0x17AE(0x0001)
	int                                                m_skinOverride;                                           // 0x17B0(0x0004)
	int                                                m_skinOverrideIsValid;                                    // 0x17B4(0x0001)
	struct Time                                        m_chargeStartTime;                                        // 0x17B8(0x0004)
	struct Time                                        m_chargeEndTime;                                          // 0x17BC(0x0004)
	float                                              m_lastChargeFrac;                                         // 0x17C0(0x0004)
	struct Time                                        m_sustainedDischargeEndTime;                              // 0x17E8(0x0004)
	float                                              m_sustainedLaserCurrentSpread;                            // 0x17EC(0x0004)
	int                                                m_sustainedDischargeIsInPrimaryAttack;                    // 0x17F0(0x0001)
	int                                                m_sustainedLaserNextRandomSeed;                           // 0x17F1(0x0001)
	int                                                m_modBitfieldFromPlayer;                                  // 0x17F4(0x0004)
	int                                                m_modBitfieldInternal;                                    // 0x17F8(0x0004)
	int                                                m_modBitfieldCurrent;                                     // 0x17FC(0x0004)
	int                                                m_curSharedEnergyCost;                                    // 0x1800(0x0004)
	int                                                m_grappleWeaponNeedsDryfire;                              // 0x1804(0x0001)
	float                                              m_scriptFloat0;                                           // 0x1808(0x0004)
	int                                                m_shouldPlayIdleAnims;                                    // 0x180C(0x0001)
	int                                                m_scriptActivated;                                        // 0x180D(0x0001)
	int                                                m_curReactiveSkinKillCount;                               // 0x180E(0x0001)
	int                                                m_curReactiveSkinKnockdownCount;                          // 0x180F(0x0001)
	struct m_attachmentIndices                         m_attachmentIndices;                                      // 0x1810(0x0000)
	int                                                m_lockedSet;                                              // 0x1814(0x0004)
	int                                                m_isLoadoutPickup;                                        // 0x1818(0x0001)
	int                                                m_utilityEnt;                                             // 0x181C(0x0004)
	int                                                m_weaponNameIndex;                                        // 0x1824(0x0004)
	int                                                m_oaActiveOverride;                                       // 0x1830(0x0004)
	int                                                m_parentTurret;                                           // 0x1834(0x0004)
};

//class RecvTable.DT_TEProjectileTrail
class DT_TEProjectileTrail
{
	struct DT_BaseTempEntity                           DT_TEProjectileTrail;                                     // 0x0000(0x0000)
	int                                                m_owner;                                                  // 0x0028(0x0004)
	struct Vector                                      m_startPos;                                               // 0x002C(0x000C)
	struct Vector                                      m_endPos;                                                 // 0x0038(0x000C)
	int                                                m_weaponClassIndex;                                       // 0x0044(0x0004)
	int                                                m_modBitfield;                                            // 0x0048(0x0004)
	int                                                m_projectileTrailIndex;                                   // 0x004C(0x0004)
	int                                                m_impactEffectTable;                                      // 0x0050(0x0004)
};

//class RecvTable.DT_Projectile
class DT_Projectile
{
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	int                                                m_PredictableID;                                          // 0x07CC(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_weaponDataIsSet;                                        // 0x1640(0x0001)
	int                                                m_forceAdjustToGunBarrelDisabled;                         // 0x1641(0x0001)
	int                                                m_weaponClassIndex;                                       // 0x1644(0x0004)
	float                                              m_destructionDistance;                                    // 0x1648(0x0004)
	int                                                m_passThroughDepthTotal;                                  // 0x164C(0x0004)
	int                                                m_modBitfield;                                            // 0x1650(0x0004)
	int                                                m_overrideMods;                                           // 0x1654(0x0004)
	int                                                m_projectileTrailIndex;                                   // 0x1658(0x0004)
	int                                                m_impactEffectTable;                                      // 0x165C(0x0004)
	int                                                m_reducedEffects;                                         // 0x1660(0x0001)
	struct Time                                        m_projectileCreationTimeServer;                           // 0x1664(0x0004)
	int                                                m_weaponSource;                                           // 0x1668(0x0004)
	int                                                m_passThroughModCount;                                    // 0x166C(0x0004)
	struct m_passThroughPoints                         m_passThroughPoints;                                      // 0x1670(0x0000)
	struct m_preModdedTrailEffectIndices1p             m_preModdedTrailEffectIndices1p;                          // 0x167C(0x0000)
	struct m_preModdedTrailEffectIndices3p             m_preModdedTrailEffectIndices3p;                          // 0x1680(0x0000)
	struct Vector                                      m_launchOrigin;                                           // 0x1684(0x000C)
};

//class RecvTable.DT_Missile
class DT_Missile
{
	struct DT_Projectile                               DT_Missile;                                               // 0x0000(0x0000)
	int                                                m_hSpecificTarget;                                        // 0x2E84(0x0004)
	struct Vector                                      m_targetPosition;                                         // 0x2E94(0x000C)
	int                                                m_useTargetPosition;                                      // 0x2EA0(0x0001)
};

//class RecvTable.DT_CrossbowBolt
class DT_CrossbowBolt
{
	struct DT_Projectile                               DT_CrossbowBolt;                                          // 0x0000(0x0000)
};

//class RecvTable.DT_VortexSphere
class DT_VortexSphere
{
	struct DT_BaseEntity                               DT_VortexSphere;                                          // 0x0000(0x0000)
	int                                                m_spawnflags;                                             // 0x0094(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	int                                                m_enabled;                                                // 0x0A60(0x0001)
	float                                              m_radius;                                                 // 0x0A64(0x0004)
	float                                              m_height;                                                 // 0x0A68(0x0004)
	float                                              m_bulletFov;                                              // 0x0A6C(0x0004)
	int                                                m_bulletAbsorbedCount;                                    // 0x0A70(0x0004)
	int                                                m_projectileAbsorbedCount;                                // 0x0A74(0x0004)
	int                                                m_ownerWeapon;                                            // 0x0A78(0x0004)
	int                                                m_vortexEffect;                                           // 0x0A7C(0x0004)
	struct Vector                                      m_vortexLocalAngles;                                      // 0x0A80(0x000C)
	string                                             m_gunAttachment;                                          // 0x0A90(0x0000)
};

//class RecvTable.DT_OverlayVars
class DT_OverlayVars
{
	struct m_AnimOverlay                               m_AnimOverlay;                                            // 0x1648(0x0000)
	int                                                m_AnimOverlayCount;                                       // 0x1720(0x0004)
};

//class RecvTable.DT_BaseAnimatingOverlay
class DT_BaseAnimatingOverlay
{
	struct DT_BaseAnimating                            DT_BaseAnimatingOverlay;                                  // 0x0000(0x0000)
	struct DT_OverlayVars                              overlay_vars;                                             // 0x0000(0x0000)
	struct m_animOverlayIsActive                       m_animOverlayIsActive;                                    // 0x0008(0x0000)
	struct m_animOverlayStartTime                      m_animOverlayStartTime;                                   // 0x0014(0x0000)
	struct m_animOverlayStartCycle                     m_animOverlayStartCycle;                                  // 0x0038(0x0000)
	struct m_animOverlayPlaybackRate                   m_animOverlayPlaybackRate;                                // 0x005C(0x0000)
	struct m_animOverlayModelIndex                     m_animOverlayModelIndex;                                  // 0x0080(0x0000)
	struct m_animOverlaySequence                       m_animOverlaySequence;                                    // 0x00A4(0x0000)
	struct m_animOverlayWeight                         m_animOverlayWeight;                                      // 0x00B8(0x0000)
	struct m_animOverlayOrder                          m_animOverlayOrder;                                       // 0x00DC(0x0000)
	struct m_animOverlayAnimTime                       m_animOverlayAnimTime;                                    // 0x0100(0x0000)
	struct m_animOverlayFadeInDuration                 m_animOverlayFadeInDuration;                              // 0x0124(0x0000)
	struct m_animOverlayFadeOutDuration                m_animOverlayFadeOutDuration;                             // 0x0148(0x0000)
};

//class RecvTable.DT_Turret
class DT_Turret
{
	struct DT_BaseAnimatingOverlay                     DT_Turret;                                                // 0x0000(0x0000)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	struct m_overlayEventParity                        m_overlayEventParity;                                     // 0x1751(0x0000)
	int                                                m_settingsIndex;                                          // 0x1988(0x0004)
	int                                                m_driver;                                                 // 0x199C(0x0004)
	float                                              m_forceAimPitch;                                          // 0x19C4(0x0004)
	float                                              m_forceAimYaw;                                            // 0x19C8(0x0004)
	float                                              m_driverDetachTime;                                       // 0x19CC(0x0004)
	int                                                m_driverState;                                            // 0x19D0(0x0004)
	int                                                m_turretWeapon;                                           // 0x19D4(0x0004)
	string                                             m_title;                                                  // 0x19E0(0x0000)
};

//class RecvTable.DT_ScriptTraceVolume
class DT_ScriptTraceVolume
{
	struct DT_BaseEntity                               DT_ScriptTraceVolume;                                     // 0x0000(0x0000)
	int                                                m_shapeType;                                              // 0x0A60(0x0004)
	float                                              m_sphereRadius;                                           // 0x0A64(0x0004)
	struct Vector                                      m_boxMins;                                                // 0x0A68(0x000C)
	struct Vector                                      m_boxMaxs;                                                // 0x0A74(0x000C)
	int                                                m_drawDebug;                                              // 0x0A80(0x0001)
};

//class RecvTable.DT_GrappleHook
class DT_GrappleHook
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_grappleZipline;                                         // 0x1640(0x0004)
};

//class RecvTable.DT_FirstPersonProxy
class DT_FirstPersonProxy
{
	struct DT_BaseAnimating                            DT_FirstPersonProxy;                                      // 0x0000(0x0000)
	int                                                m_viewModelOwner;                                         // 0x1670(0x0004)
};

//class RecvTable.DT_PredictedFirstPersonProxy
class DT_PredictedFirstPersonProxy
{
	struct DT_FirstPersonProxy                         DT_PredictedFirstPersonProxy;                             // 0x0000(0x0000)
};

//class RecvTable.DT_BreakableProp
class DT_BreakableProp
{
	struct DT_BaseAnimating                            DT_BreakableProp;                                         // 0x0000(0x0000)
};

//class RecvTable.DT_DynamicProp
class DT_DynamicProp
{
	struct DT_BreakableProp                            DT_DynamicProp;                                           // 0x0000(0x0000)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_lifeState;                                              // 0x0798(0x0001)
	int                                                m_bUseHitboxesForRenderBox;                               // 0x1641(0x0001)
	int                                                m_bAnimateInStaticShadow;                                 // 0x1642(0x0001)
};

//class RecvTable.DT_Titan_Cockpit
class DT_Titan_Cockpit
{
	struct DT_DynamicProp                              DT_Titan_Cockpit;                                         // 0x0000(0x0000)
};

//class RecvTable.DT_PortalPointPush
class DT_PortalPointPush
{
	struct DT_BaseEntity                               DT_PortalPointPush;                                       // 0x0000(0x0000)
	int                                                m_bEnabled;                                               // 0x0A60(0x0001)
	float                                              m_flMagnitude;                                            // 0x0A64(0x0004)
	float                                              m_flRadius;                                               // 0x0A68(0x0004)
	float                                              m_flInnerRadius;                                          // 0x0A6C(0x0004)
	float                                              m_flConeOfInfluence;                                      // 0x0A70(0x0004)
};

//class RecvTable.DT_InfoPlacementHelper
class DT_InfoPlacementHelper
{
	struct Vector                                      m_localOrigin;                                            // 0x0004(0x000C)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
};

//class RecvTable.DT_MinimapBaseEntityData
class DT_MinimapBaseEntityData
{
	struct visibilityDefaultFlag                       visibilityDefaultFlag;                                    // 0x0000(0x0000)
	struct visibilityShowFlag                          visibilityShowFlag;                                       // 0x0020(0x0000)
	int                                                flags;                                                    // 0x0040(0x0004)
	int                                                zOrder;                                                   // 0x0044(0x0004)
	int                                                customState;                                              // 0x0048(0x0004)
	float                                              objectScale;                                              // 0x004C(0x0004)
};

//class RecvTable.DT_HealthKit
class DT_HealthKit
{
	struct DT_BaseAnimating                            DT_HealthKit;                                             // 0x0000(0x0000)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
};

//class RecvTable.DT_BaseParticleEntity
class DT_BaseParticleEntity
{
	struct DT_BaseEntity                               DT_BaseParticleEntity;                                    // 0x0000(0x0000)
};

//class RecvTable.DT_BaseToggle
class DT_BaseToggle
{
	struct DT_BaseEntity                               DT_BaseToggle;                                            // 0x0000(0x0000)
	struct Vector                                      m_vecFinalDest;                                           // 0x0A74(0x000C)
	int                                                m_movementType;                                           // 0x0A80(0x0004)
	struct Time                                        m_flMoveTargetTime;                                       // 0x0A84(0x0004)
};

//class RecvTable.DT_BaseTrigger
class DT_BaseTrigger
{
	struct DT_BaseToggle                               DT_BaseTrigger;                                           // 0x0000(0x0000)
	int                                                m_spawnflags;                                             // 0x0094(0x0004)
	int                                                m_bClientSidePredicted;                                   // 0x0A90(0x0001)
};

//class RecvTable.DT_TriggerSlip
class DT_TriggerSlip
{
	struct DT_BaseTrigger                              DT_TriggerSlip;                                           // 0x0000(0x0000)
	struct Vector                                      m_defaultSlipDirection;                                   // 0x0AA0(0x000C)
	float                                              m_slipSpeed;                                              // 0x0AAC(0x0004)
	float                                              m_slipAcceleration;                                       // 0x0AB0(0x0004)
};

//class RecvTable.DT_TriggerPlayerMovement
class DT_TriggerPlayerMovement
{
	struct DT_BaseTrigger                              DT_TriggerPlayerMovement;                                 // 0x0000(0x0000)
};

//class RecvTable.DT_TriggerPointGravity
class DT_TriggerPointGravity
{
	struct DT_BaseTrigger                              DT_TriggerPointGravity;                                   // 0x0000(0x0000)
	float                                              m_pullOuterRadius;                                        // 0x0AA0(0x0004)
	float                                              m_pullInnerRadius;                                        // 0x0AA4(0x0004)
	float                                              m_reduceSpeedOuterRadius;                                 // 0x0AA8(0x0004)
	float                                              m_reduceSpeedInnerRadius;                                 // 0x0AAC(0x0004)
	float                                              m_pullAccel;                                              // 0x0AB0(0x0004)
	float                                              m_pullSpeed;                                              // 0x0AB4(0x0004)
	int                                                m_constantPullStregnth;                                   // 0x0AB8(0x0001)
};

//class RecvTable.DT_TriggerCylinderHeavy
class DT_TriggerCylinderHeavy
{
	struct DT_BaseTrigger                              DT_TriggerCylinderHeavy;                                  // 0x0000(0x0000)
	struct BitMask                                     m_triggerFilterMask;                                      // 0x0AA0(0x0008)
	float                                              m_radius;                                                 // 0x0AA8(0x0004)
	float                                              m_aboveHeight;                                            // 0x0AAC(0x0004)
	float                                              m_belowHeight;                                            // 0x0AB0(0x0004)
	int                                                m_triggerType;                                            // 0x0AB4(0x0004)
	float                                              m_vertOverride;                                           // 0x0AB8(0x0004)
	float                                              m_launchPower;                                            // 0x0ABC(0x0004)
	float                                              m_punchSoftAmount;                                        // 0x0AC0(0x0004)
	float                                              m_punchHardAmount;                                        // 0x0AC4(0x0004)
	float                                              m_punchRandomBoost;                                       // 0x0AC8(0x0004)
	float                                              m_nextLaunchTime;                                         // 0x0ACC(0x0004)
	int                                                m_gravityCannonLaunched;                                  // 0x0AD0(0x0001)
	float                                              m_launchFlightTime;                                       // 0x0AD4(0x0004)
	float                                              m_launchDelayAmount;                                      // 0x0AD8(0x0004)
	int                                                m_enableDoubleJump;                                       // 0x0ADC(0x0001)
	float                                              m_gravityLiftUpSpeed;                                     // 0x0AE0(0x0004)
	float                                              m_gravityLiftMoveSpeed;                                   // 0x0AE4(0x0004)
	float                                              m_gravityLiftMoveAccel;                                   // 0x0AE8(0x0004)
	float                                              m_gravityLiftToCenterSpeed;                               // 0x0AEC(0x0004)
	float                                              m_gravityLiftToCenterAccel;                               // 0x0AF0(0x0004)
	float                                              m_gravityLiftEjectUpSpeed;                                // 0x0AF4(0x0004)
	float                                              m_gravityLiftEjectForwardSpeed;                           // 0x0AF8(0x0004)
	float                                              m_gravityLiftMaxEjectTime;                                // 0x0AFC(0x0004)
	float                                              m_gravityLiftMaxHoverTime;                                // 0x0B00(0x0004)
	int                                                m_blackholeIsStrongPulling;                               // 0x0B04(0x0001)
	float                                              m_blackholeStrongPullAddlSpeed;                           // 0x0B08(0x0004)
	float                                              m_blackholeOuterPullSpeed;                                // 0x0B0C(0x0004)
	float                                              m_blackholeInnerPullSpeed;                                // 0x0B10(0x0004)
	float                                              m_blackholeOuterMoveSpeed;                                // 0x0B14(0x0004)
	float                                              m_blackholeInnerMoveSpeed;                                // 0x0B18(0x0004)
	float                                              m_blackholeInnerRadius;                                   // 0x0B1C(0x0004)
	int                                                m_teslaTrapFXVisible;                                     // 0x0B20(0x0001)
	float                                              m_teslaTrapBaseHeight;                                    // 0x0B24(0x0004)
	struct Time                                        m_teslaTrapObstructedEndTime;                             // 0x0B2C(0x0004)
	int                                                m_teslaTrapStart;                                         // 0x0B30(0x0004)
	int                                                m_teslaTrapEnd;                                           // 0x0B34(0x0004)
	struct Vector                                      m_teslaTrapUp;                                            // 0x0B38(0x000C)
	struct Vector                                      m_launchDir;                                              // 0x0B44(0x000C)
	int                                                m_mortarRingSegementStart;                                // 0x0B58(0x0004)
	int                                                m_mortarRingSegementEnd;                                  // 0x0B5C(0x0004)
};

//class RecvTable.DT_StatusEffectPlugin
class DT_StatusEffectPlugin
{
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct m_statusEffectsTimedPluginNV                m_statusEffectsTimedPluginNV;                             // 0x0A60(0x0000)
	struct m_statusEffectsEndlessPluginNV              m_statusEffectsEndlessPluginNV;                           // 0x0A78(0x0000)
};

//class RecvTable.DT_ScriptMoverTrainNode
class DT_ScriptMoverTrainNode
{
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	int                                                m_firstChildEntityLink;                                   // 0x0A40(0x0004)
	int                                                m_firstParentEntityLink;                                  // 0x0A44(0x0004)
	int                                                m_numSmoothPoints;                                        // 0x0A60(0x0004)
	int                                                m_trainNodeMakeSmoothPointsParity;                        // 0x0A64(0x0001)
	int                                                m_tangentType;                                            // 0x0A68(0x0004)
	int                                                m_perfectCircularRotation;                                // 0x0A6C(0x0001)
};

//class RecvTable.DT_DoorMover
class DT_DoorMover
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	struct Vector                                      m_vecAngVelocity;                                         // 0x0128(0x000C)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	string                                             m_holdUsePrompt;                                          // 0x0718(0x0000)
	string                                             m_pressUsePrompt;                                         // 0x0720(0x0000)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_usablePriority;                                         // 0x0924(0x0004)
	float                                              m_usableDistanceOverride;                                 // 0x0928(0x0004)
	float                                              m_usableFOV;                                              // 0x092C(0x0004)
	float                                              m_usePromptSize;                                          // 0x0930(0x0004)
	int                                                m_doorFlags;                                              // 0x1870(0x0004)
};

//class RecvTable.DT_ScriptMoverLightweight
class DT_ScriptMoverLightweight
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_moverNetworkCellX;                                      // 0x0048(0x0004)
	int                                                m_moverNetworkCellY;                                      // 0x004C(0x0004)
	int                                                m_moverNetworkCellZ;                                      // 0x0050(0x0004)
	struct Vector                                      m_moverNetworkLocalOrigin;                                // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	struct Vector                                      m_moverNetworkAngularVelocity;                            // 0x0128(0x000C)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	struct Vector                                      m_moverNetworkLinearVelocity;                             // 0x0488(0x000C)
	struct Vector                                      m_moverNetworkLocalAngles;                                // 0x0494(0x000C)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_moveModeNonPhysics;                                     // 0x1764(0x0004)
	int                                                m_moveModeIsLocal;                                        // 0x1768(0x0001)
	struct Vector                                      m_moveToStartPos;                                         // 0x176C(0x000C)
	struct Vector                                      m_moveToEndPos;                                           // 0x1778(0x000C)
	struct Time                                        m_moveToTimeStart;                                        // 0x1784(0x0004)
	struct Time                                        m_moveToTimeEnd;                                          // 0x1788(0x0004)
	float                                              m_moveToTimeEaseIn;                                       // 0x178C(0x0004)
	float                                              m_moveToTimeEaseOut;                                      // 0x1790(0x0004)
	struct Vector                                      m_moveVelocity;                                           // 0x1794(0x000C)
	struct Vector                                      m_moveGravity;                                            // 0x17A0(0x000C)
	struct Time                                        m_trainStartTime;                                         // 0x17AC(0x0004)
	struct Time                                        m_trainStopTime;                                          // 0x17B0(0x0004)
	float                                              m_trainStartDistance;                                     // 0x17B4(0x0004)
	int                                                m_trainCurrentNode;                                       // 0x17B8(0x0004)
	int                                                m_trainStopNode;                                          // 0x17BC(0x0004)
	float                                              m_trainInitialSpeed;                                      // 0x17C0(0x0004)
	float                                              m_trainGoalSpeed;                                         // 0x17C4(0x0004)
	float                                              m_trainAcceleration;                                      // 0x17C8(0x0004)
	int                                                m_trainLastNode;                                          // 0x17CC(0x0004)
	float                                              m_trainLastDistance;                                      // 0x17D0(0x0004)
	float                                              m_trainLastSpeed;                                         // 0x17D4(0x0004)
	int                                                m_trainFollowMover;                                       // 0x17D8(0x0004)
	float                                              m_trainFollowDistance;                                    // 0x17DC(0x0004)
	struct m_trainBreadcrumb                           m_trainBreadcrumb;                                        // 0x17E0(0x0000)
	int                                                m_trainBreadcrumbBegin;                                   // 0x1800(0x0004)
	int                                                m_trainBreadcrumbCount;                                   // 0x1804(0x0004)
	float                                              m_trainAutoRollStrength;                                  // 0x1808(0x0004)
	float                                              m_trainAutoRollLookAheadDistance;                         // 0x180C(0x0004)
	float                                              m_trainAutoRollMax;                                       // 0x1810(0x0004)
	int                                                m_trainSimulateBeforeMeEntity;                            // 0x1814(0x0004)
	int                                                m_rotateModeNonPhysics;                                   // 0x1818(0x0004)
	int                                                m_rotateModeIsLocal;                                      // 0x181C(0x0001)
	struct Vector                                      m_RotateToAnglesStart;                                    // 0x1820(0x000C)
	struct Vector                                      m_RotateToAnglesEnd;                                      // 0x182C(0x000C)
	struct Time                                        m_rotateToTimeStart;                                      // 0x1838(0x0004)
	struct Time                                        m_rotateToTimeEnd;                                        // 0x183C(0x0004)
	float                                              m_rotateToTimeEaseIn;                                     // 0x1840(0x0004)
	float                                              m_rotateToTimeEaseOut;                                    // 0x1844(0x0004)
	struct Vector                                      m_rotateAxis;                                             // 0x1848(0x000C)
	float                                              m_rotateSpeed;                                            // 0x1854(0x0004)
	float                                              m_trainPitchMax;                                          // 0x1858(0x0004)
	int                                                m_useNonPhysicsMoveInterpolation;                         // 0x1874(0x0001)
};

//class RecvTable.DT_ScriptProp
class DT_ScriptProp
{
	struct DT_DynamicProp                              DT_ScriptProp;                                            // 0x0000(0x0000)
	float                                              m_cloakEndTime;                                           // 0x019C(0x0004)
	struct Time                                        m_cloakFadeInEndTime;                                     // 0x01A0(0x0004)
	float                                              m_cloakFadeOutStartTime;                                  // 0x01A4(0x0004)
	float                                              m_cloakFadeInDuration;                                    // 0x01A8(0x0004)
	float                                              m_cloakFlickerAmount;                                     // 0x01AC(0x0004)
	struct Time                                        m_cloakFlickerEndTime;                                    // 0x01B0(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
	int                                                m_nameVisibilityFlags;                                    // 0x09B8(0x0004)
	string                                             m_title;                                                  // 0x16A0(0x0000)
	string                                             m_footstepType;                                           // 0x16C0(0x0000)
	int                                                m_renderColorFriendlyIsValid;                             // 0x1700(0x0001)
	int                                                m_renderColorFriendly;                                    // 0x1701(0x0004)
	int                                                m_armorType;                                              // 0x1708(0x0004)
	int                                                m_scriptPropFlags;                                        // 0x170C(0x0004)
	int                                                m_scriptPropSmartAmmoLockType;                            // 0x1710(0x0004)
};

//class RecvTable.DT_ScriptMover
class DT_ScriptMover
{
	struct DT_ScriptProp                               DT_ScriptMover;                                           // 0x0000(0x0000)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	struct Vector                                      m_vecAngVelocity;                                         // 0x0128(0x000C)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
};

//class RecvTable.DT_ScriptNetData
class DT_ScriptNetData
{
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
};

//class RecvTable.DT_ScriptNetData_SNDC_GLOBAL_NON_REWIND
class DT_ScriptNetData_SNDC_GLOBAL_NON_REWIND
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_GLOBAL_NON_REWIND;                  // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x0012)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0044)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0028)
	struct Array                                       m_times;                                                  // 0x0000(0x0068)
	struct Array                                       m_entities;                                               // 0x0000(0x0048)
};

//class RecvTable.DT_ScriptNetDataGlobalNonRewind
class DT_ScriptNetDataGlobalNonRewind
{
	struct DT_ScriptNetData_SNDC_GLOBAL_NON_REWIND     DT_ScriptNetDataGlobalNonRewind;                          // 0x0000(0x0000)
};

//class RecvTable.DT_ScriptNetData_SNDC_GLOBAL
class DT_ScriptNetData_SNDC_GLOBAL
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_GLOBAL;                             // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x0012)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0044)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0028)
	struct Array                                       m_times;                                                  // 0x0000(0x0068)
	struct Array                                       m_entities;                                               // 0x0000(0x0048)
};

//class RecvTable.DT_ScriptNetDataGlobal
class DT_ScriptNetDataGlobal
{
	struct DT_ScriptNetData_SNDC_GLOBAL                DT_ScriptNetDataGlobal;                                   // 0x0000(0x0000)
};

//class RecvTable.DT_ScriptNetData_SNDC_DEATH_BOX
class DT_ScriptNetData_SNDC_DEATH_BOX
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_DEATH_BOX;                          // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x0004)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0008)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0048)
	struct Array                                       m_times;                                                  // 0x0000(0x000C)
	struct Array                                       m_entities;                                               // 0x0000(0x000C)
};

//class RecvTable.DT_ScriptNetData_SNDC_TITAN_SOUL
class DT_ScriptNetData_SNDC_TITAN_SOUL
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_TITAN_SOUL;                         // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x000A)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0024)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0010)
	struct Array                                       m_times;                                                  // 0x0000(0x0028)
	struct Array                                       m_entities;                                               // 0x0000(0x0018)
};

//class RecvTable.DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE_EXPANDED
class DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE_EXPANDED
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE_EXPANDED;          // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x001A)
	struct Array                                       m_ranges;                                                 // 0x0000(0x00BC)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0018)
	struct Array                                       m_times;                                                  // 0x0000(0x0028)
	struct Array                                       m_entities;                                               // 0x0000(0x0028)
};

//class RecvTable.DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE
class DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_PLAYER_EXCLUSIVE;                   // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x001A)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0044)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0018)
	struct Array                                       m_times;                                                  // 0x0000(0x0028)
	struct Array                                       m_entities;                                               // 0x0000(0x0028)
};

//class RecvTable.DT_ScriptNetData_SNDC_PLAYER_GLOBAL
class DT_ScriptNetData_SNDC_PLAYER_GLOBAL
{
	struct DT_ScriptNetData                            DT_ScriptNetData_SNDC_PLAYER_GLOBAL;                      // 0x0000(0x0000)
	struct Array                                       m_bools;                                                  // 0x0000(0x0012)
	struct Array                                       m_ranges;                                                 // 0x0000(0x0034)
	struct Array                                       m_int32s;                                                 // 0x0000(0x0068)
	struct Array                                       m_times;                                                  // 0x0000(0x0028)
	struct Array                                       m_entities;                                               // 0x0000(0x0018)
};

//class RecvTable.DT_RopeKeyframe
class DT_RopeKeyframe
{
	struct Vector                                      m_localOrigin;                                            // 0x0004(0x000C)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_clrRender;                                              // 0x0050(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	int                                                m_nRenderMode;                                            // 0x04B9(0x0001)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	float                                              m_ropeZiplineAutoDetachDistance;                          // 0x0A60(0x0004)
	int                                                m_ziplineSagEnable;                                       // 0x0A64(0x0001)
	float                                              m_ziplineSagHeight;                                       // 0x0A68(0x0004)
	float                                              m_ziplineMoveSpeedScale;                                  // 0x0B60(0x0004)
	struct Vector                                      m_startOffset;                                            // 0x0B64(0x000C)
	struct Vector                                      m_endOffset;                                              // 0x0B70(0x000C)
	struct Time                                        m_wiggleFadeStartTime;                                    // 0x0B7C(0x0004)
	struct Time                                        m_wiggleEndTime;                                          // 0x0B80(0x0004)
	float                                              m_wiggleMaxLen;                                           // 0x0B84(0x0004)
	float                                              m_wiggleMagnitude;                                        // 0x0B88(0x0004)
	float                                              m_wiggleSpeed;                                            // 0x0B8C(0x0004)
	float                                              m_flScrollSpeed;                                          // 0x0BC4(0x0004)
	int                                                m_RopeFlags;                                              // 0x0BC8(0x0004)
	int                                                m_iRopeMaterialModelIndex;                                // 0x0BCC(0x0004)
	int                                                m_nSegments;                                              // 0x0E50(0x0004)
	int                                                m_hStartPoint;                                            // 0x0E54(0x0004)
	int                                                m_hEndPoint;                                              // 0x0E58(0x0004)
	int                                                m_hPrevPoint;                                             // 0x0E5C(0x0004)
	int                                                m_iStartAttachment;                                       // 0x0E60(0x0001)
	int                                                m_iEndAttachment;                                         // 0x0E61(0x0001)
	int                                                m_subdivStackCount;                                       // 0x0E8C(0x0004)
	int                                                m_subdivSliceCount;                                       // 0x0E90(0x0004)
	int                                                m_ropeLength;                                             // 0x0E94(0x0004)
	int                                                m_constraintIterations;                                   // 0x0E9C(0x0004)
	float                                              m_ropeDampening;                                          // 0x0EA0(0x0004)
	int                                                m_Slack;                                                  // 0x0EA4(0x0004)
	float                                              m_TextureScale;                                           // 0x0EA8(0x0004)
	float                                              m_TextureScale;                                           // 0x0EA8(0x0004)
	int                                                m_fLockedPoints;                                          // 0x0EAC(0x0004)
	int                                                m_lockDirectionCutoffLength;                              // 0x0EB0(0x0004)
	float                                              m_lockDirectionStrength;                                  // 0x0EB4(0x0004)
	int                                                m_nChangeCount;                                           // 0x0EB8(0x0004)
	float                                              m_Width;                                                  // 0x0EBC(0x0004)
	int                                                m_bConstrainBetweenEndpoints;                             // 0x0F50(0x0001)
};

//class RecvTable.DT_PlayerWaypoint
class DT_PlayerWaypoint
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_teamMemberIndex;                                        // 0x0454(0x0004)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_waypointType;                                           // 0x0A60(0x0004)
	int                                                m_waypointBitfield;                                       // 0x0A64(0x0004)
	struct m_waypointEnts                              m_waypointEnts;                                           // 0x0A68(0x0000)
	struct m_waypointVectors                           m_waypointVectors;                                        // 0x0A88(0x0000)
	struct m_waypointGameTimes                         m_waypointGameTimes;                                      // 0x0AE8(0x0000)
	struct m_waypointInts                              m_waypointInts;                                           // 0x0B08(0x0000)
	struct m_waypointFloats                            m_waypointFloats;                                         // 0x0B28(0x0000)
	int                                                m_objectivePackedInt;                                     // 0x0B48(0x0004)
	string                                             m_waypointGroupName;                                      // 0x0B4C(0x0000)
	int                                                m_waypointGroupFlags;                                     // 0x0B6C(0x0004)
	string                                             m_waypointCustomType;                                     // 0x0B70(0x0000)
	string                                             m_waypointStringA;                                        // 0x0B90(0x0000)
	string                                             m_waypointStringB;                                        // 0x0BD0(0x0000)
	string                                             m_waypointAssetA;                                         // 0x0C18(0x0000)
	string                                             m_waypointAssetB;                                         // 0x0C98(0x0000)
};

//class RecvTable.DT_PlayerTasklist
class DT_PlayerTasklist
{
	struct DT_BaseEntity                               DT_PlayerTasklist;                                        // 0x0000(0x0000)
	struct Time                                        m_notifyTime;                                             // 0x0A60(0x0004)
	int                                                m_customInt;                                              // 0x0A64(0x0004)
	struct m_taskStatus                                m_taskStatus;                                             // 0x0A68(0x0000)
	struct m_taskType                                  m_taskType;                                               // 0x0A9C(0x0000)
	struct m_taskCountGoal                             m_taskCountGoal;                                          // 0x0AD0(0x0000)
	struct m_taskCountNow                              m_taskCountNow;                                           // 0x0B04(0x0000)
	struct m_taskFlags                                 m_taskFlags;                                              // 0x0B38(0x0000)
	struct m_taskGameTimes                             m_taskGameTimes;                                          // 0x0B6C(0x0000)
	struct m_taskInts                                  m_taskInts;                                               // 0x0BA0(0x0000)
	struct m_taskFloats                                m_taskFloats;                                             // 0x0BD4(0x0000)
	struct m_taskEnts                                  m_taskEnts;                                               // 0x0C08(0x0000)
	string                                             m_taskStringA;                                            // 0x0C3C(0x0000)
	string                                             m_taskStringB;                                            // 0x0C7C(0x0000)
	string                                             m_taskStringC;                                            // 0x0CBC(0x0000)
	string                                             m_taskStringD;                                            // 0x0CFC(0x0000)
	string                                             m_taskStringE;                                            // 0x0D3C(0x0000)
	string                                             m_taskStringF;                                            // 0x0D7C(0x0000)
	string                                             m_taskStringG;                                            // 0x0DBC(0x0000)
	string                                             m_taskStringH;                                            // 0x0DFC(0x0000)
	string                                             m_taskStringI;                                            // 0x0E3C(0x0000)
	string                                             m_taskStringJ;                                            // 0x0E7C(0x0000)
	string                                             m_taskStringK;                                            // 0x0EBC(0x0000)
	string                                             m_taskStringL;                                            // 0x0EFC(0x0000)
	string                                             m_taskStringM;                                            // 0x0F3C(0x0000)
};

//class RecvTable.DT_EnvDecoy
class DT_EnvDecoy
{
	struct DT_BaseAnimating                            DT_EnvDecoy;                                              // 0x0000(0x0000)
};

//class RecvTable.DT_PlayerDecoy
class DT_PlayerDecoy
{
	struct DT_BaseAnimating                            DT_PlayerDecoy;                                           // 0x0000(0x0000)
	float                                              m_vecViewOffset.x;                                        // 0x0034(0x0004)
	float                                              m_vecViewOffset.y;                                        // 0x0038(0x0004)
	float                                              m_vecViewOffset.z;                                        // 0x003C(0x0004)
	float                                              m_cloakEndTime;                                           // 0x019C(0x0004)
	struct Time                                        m_cloakFadeInEndTime;                                     // 0x01A0(0x0004)
	float                                              m_cloakFadeOutStartTime;                                  // 0x01A4(0x0004)
	float                                              m_cloakFadeInDuration;                                    // 0x01A8(0x0004)
	float                                              m_cloakFlickerAmount;                                     // 0x01AC(0x0004)
	struct Time                                        m_cloakFlickerEndTime;                                    // 0x01B0(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	int                                                m_nameVisibilityFlags;                                    // 0x09B8(0x0004)
	int                                                m_currentState;                                           // 0x1640(0x0004)
	int                                                m_decoyFlags;                                             // 0x1644(0x0004)
	struct Time                                        m_lastPulseTime;                                          // 0x164C(0x0004)
	struct BitMask                                     m_currentClass;                                           // 0x1650(0x0008)
	struct BitMask                                     m_classModsActive;                                        // 0x1658(0x0008)
	struct Vector                                      m_decoyVelocity;                                          // 0x1660(0x000C)
};

//class RecvTable.DT_GlobalNonRewinding
class DT_GlobalNonRewinding
{
	struct m_playerObserver                            m_playerObserver;                                         // 0x0A60(0x0000)
	struct m_playerMiscData                            m_playerMiscData;                                         // 0x0E60(0x0000)
};

//class RecvTable.DT_EntityBlocker
class DT_EntityBlocker
{
	struct DT_BaseEntity                               DT_EntityBlocker;                                         // 0x0000(0x0000)
};

//class RecvTable.DT_TEScriptParticleSystemOnEntity
class DT_TEScriptParticleSystemOnEntity
{
	struct DT_BaseTempEntity                           DT_TEScriptParticleSystemOnEntity;                        // 0x0000(0x0000)
	int                                                m_effectIndex;                                            // 0x0028(0x0004)
	int                                                m_ent;                                                    // 0x002C(0x0004)
	int                                                m_attachType;                                             // 0x0030(0x0004)
	int                                                m_attachType2;                                            // 0x0034(0x0004)
	int                                                m_attachmentId;                                           // 0x0038(0x0001)
	int                                                m_attachmentId2;                                          // 0x0039(0x0001)
};

//class RecvTable.DT_TEScriptParticleSystemOnEntityWithPos
class DT_TEScriptParticleSystemOnEntityWithPos
{
	struct DT_TEScriptParticleSystemOnEntity           DT_TEScriptParticleSystemOnEntityWithPos;                 // 0x0000(0x0000)
	struct Vector                                      m_origin;                                                 // 0x0040(0x000C)
	struct Vector                                      m_angles;                                                 // 0x004C(0x000C)
};

//class RecvTable.DT_TEScriptParticleSystem
class DT_TEScriptParticleSystem
{
	struct DT_BaseTempEntity                           DT_TEScriptParticleSystem;                                // 0x0000(0x0000)
	int                                                m_effectIndex;                                            // 0x0028(0x0004)
	struct Vector                                      m_origin;                                                 // 0x002C(0x000C)
	struct Vector                                      m_angles;                                                 // 0x0038(0x000C)
	struct Vector                                      m_controlPoint1;                                          // 0x0044(0x000C)
};

//class RecvTable.DT_CPropDoor
class DT_CPropDoor
{
	struct DT_HighlightSettings                        HighlightSettings;                                        // 0x0000(0x0000)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	int                                                m_skinMod;                                                // 0x0E58(0x0002)
	float                                              m_closedAngle;                                            // 0x16B0(0x0004)
	float                                              m_angle;                                                  // 0x16B4(0x0004)
	float                                              m_startAngle;                                             // 0x16B8(0x0004)
	float                                              m_startAngleVel;                                          // 0x16BC(0x0004)
	struct Time                                        m_startMoveTime;                                          // 0x16C0(0x0004)
	int                                                m_isLocked;                                               // 0x16C4(0x0001)
	int                                                m_isReinforced;                                           // 0x16C5(0x0001)
	int                                                m_oppositeDoor;                                           // 0x16C8(0x0004)
	int                                                m_interactingPlayer;                                      // 0x1718(0x0004)
	int                                                m_interactingPlayerWantsOpen;                             // 0x171C(0x0001)
};

//class RecvTable.DT_InfoTarget
class DT_InfoTarget
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_bIsSoundCodeControllerValueSet;                         // 0x0480(0x0001)
	float                                              m_flSoundCodeControllerValue;                             // 0x0484(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	string                                             m_iName;                                                  // 0x0589(0x0000)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	int                                                m_instanceNameIndex;                                      // 0x0694(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	int                                                m_firstChildEntityLink;                                   // 0x0A40(0x0004)
	int                                                m_firstParentEntityLink;                                  // 0x0A44(0x0004)
};

//class RecvTable.DT_InfoTargetGravity
class DT_InfoTargetGravity
{
	struct DT_InfoTarget                               DT_InfoTargetGravity;                                     // 0x0000(0x0000)
	int                                                m_gravityDirectionType;                                   // 0x0A60(0x0004)
	int                                                m_gravityPair;                                            // 0x0A68(0x0004)
};

//class RecvTable.DT_InfoTargetMinimap
class DT_InfoTargetMinimap
{
	struct DT_InfoTarget                               DT_InfoTargetMinimap;                                     // 0x0000(0x0000)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
};

//class RecvTable.DT_BaseViewModel
class DT_BaseViewModel
{
	struct DT_OverlayVars                              overlay_vars;                                             // 0x0000(0x0000)
	struct Time                                        m_animStartTime;                                          // 0x0008(0x0004)
	struct m_animOverlayIsActive                       m_animOverlayIsActive;                                    // 0x0008(0x0000)
	float                                              m_animStartCycle;                                         // 0x000C(0x0004)
	float                                              m_animPlaybackRate;                                       // 0x0010(0x0004)
	int                                                m_animModelIndex;                                         // 0x0014(0x0004)
	struct m_animOverlayStartTime                      m_animOverlayStartTime;                                   // 0x0014(0x0000)
	int                                                m_nNewSequenceParity;                                     // 0x0018(0x0004)
	int                                                m_animSequence;                                           // 0x0020(0x0002)
	int                                                m_animFrozen;                                             // 0x0022(0x0001)
	struct m_animOverlayStartCycle                     m_animOverlayStartCycle;                                  // 0x0038(0x0000)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_clrRender;                                              // 0x0050(0x0004)
	struct m_animOverlayPlaybackRate                   m_animOverlayPlaybackRate;                                // 0x005C(0x0000)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	struct m_animOverlayModelIndex                     m_animOverlayModelIndex;                                  // 0x0080(0x0000)
	struct m_animOverlaySequence                       m_animOverlaySequence;                                    // 0x00A4(0x0000)
	struct m_animOverlayWeight                         m_animOverlayWeight;                                      // 0x00B8(0x0000)
	struct m_animOverlayOrder                          m_animOverlayOrder;                                       // 0x00DC(0x0000)
	struct m_animOverlayAnimTime                       m_animOverlayAnimTime;                                    // 0x0100(0x0000)
	struct m_animOverlayFadeInDuration                 m_animOverlayFadeInDuration;                              // 0x0124(0x0000)
	struct m_animOverlayFadeOutDuration                m_animOverlayFadeOutDuration;                             // 0x0148(0x0000)
	int                                                m_nRenderMode;                                            // 0x04B9(0x0001)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	struct Time                                        m_nResetEventsStartTime;                                  // 0x0E68(0x0004)
	int                                                m_nResetEventsParity;                                     // 0x0E6C(0x0004)
	int                                                m_bSequenceFinished;                                      // 0x0EFC(0x0001)
	float                                              m_flModelScale;                                           // 0x0F08(0x0004)
	struct m_overlayEventParity                        m_overlayEventParity;                                     // 0x1751(0x0000)
	int                                                m_viewModelOwner;                                         // 0x19D4(0x0004)
	int                                                m_projectileIsVisible;                                    // 0x19D8(0x0001)
	int                                                m_bBlockEventLayer;                                       // 0x1DD0(0x0001)
	int                                                m_isAdsTransition;                                        // 0x1DD1(0x0001)
	int                                                m_hWeapon;                                                // 0x1DD4(0x0004)
	struct m_tracerAttachments                         m_tracerAttachments;                                      // 0x1DD8(0x0000)
	struct m_tracerAttachmentsScoped                   m_tracerAttachmentsScoped;                                // 0x1DDA(0x0000)
};

//class RecvTable.DT_BaseGrenade
class DT_BaseGrenade
{
	struct DT_Projectile                               DT_BaseGrenade;                                           // 0x0000(0x0000)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_baseTakeDamage;                                         // 0x07BC(0x0001)
	int                                                m_invulnerableToDamageCount;                              // 0x07C0(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	int                                                m_doesExplode;                                            // 0x2E21(0x0001)
	float                                              m_DmgRadius;                                              // 0x2E24(0x0004)
	int                                                m_grenadeStatusFlags;                                     // 0x2E48(0x0004)
	struct Vector                                      m_ziplineGrenadeExpectedEndPosition;                      // 0x2EB8(0x000C)
};

//class RecvTable.DT_World
class DT_World
{
	struct DT_BaseEntity                               DT_World;                                                 // 0x0000(0x0000)
	struct Vector                                      m_WorldMins;                                              // 0x0A60(0x000C)
	struct Vector                                      m_WorldMaxs;                                              // 0x0A6C(0x000C)
	int                                                m_bStartDark;                                             // 0x0A78(0x0001)
	int                                                m_statusEffectsGenerationNV;                              // 0x0A8C(0x0004)
	int                                                m_worldFlags;                                             // 0x0A94(0x0004)
	int                                                m_timeshiftArmDeviceSkin;                                 // 0x0A98(0x0004)
	int                                                m_spTitanLoadoutUnlocks;                                  // 0x0A9C(0x0004)
	struct m_deathFieldIsActive                        m_deathFieldIsActive;                                     // 0x0AA0(0x0000)
	struct m_deathFieldOrigin                          m_deathFieldOrigin;                                       // 0x0AE0(0x0000)
	struct m_deathFieldRadiusStart                     m_deathFieldRadiusStart;                                  // 0x0DE0(0x0000)
	struct m_deathFieldRadiusEnd                       m_deathFieldRadiusEnd;                                    // 0x0EE0(0x0000)
	struct m_deathFieldTimeStart                       m_deathFieldTimeStart;                                    // 0x0FE0(0x0000)
	struct m_deathFieldTimeEnd                         m_deathFieldTimeEnd;                                      // 0x10E0(0x0000)
	int                                                m_teamRelationRulesForPVE;                                // 0x11E0(0x0001)
	struct m_civilTeamsMaskA                           m_civilTeamsMaskA;                                        // 0x11E8(0x0000)
	struct m_civilTeamsMaskB                           m_civilTeamsMaskB;                                        // 0x11F8(0x0000)
	struct m_rabidTeamsMask                            m_rabidTeamsMask;                                         // 0x1210(0x0000)
};

//class RecvTable.DT_EntityLinkPage
class DT_EntityLinkPage
{
	int                                                pageIndex;                                                // 0x0A60(0x0004)
	struct next                                        next;                                                     // 0x0A64(0x0000)
	struct entity                                      entity;                                                   // 0x0E64(0x0000)
};

//class RecvTable.DT_WaterLODControl
class DT_WaterLODControl
{
	struct DT_BaseEntity                               DT_WaterLODControl;                                       // 0x0000(0x0000)
	float                                              m_flCheapWaterStartDistance;                              // 0x0A60(0x0004)
	float                                              m_flCheapWaterEndDistance;                                // 0x0A64(0x0004)
};

//class RecvTable.DT_VGuiScreen
class DT_VGuiScreen
{
	struct DT_BaseEntity                               DT_VGuiScreen;                                            // 0x0000(0x0000)
	float                                              m_flWidth;                                                // 0x0A60(0x0004)
	float                                              m_flHeight;                                               // 0x0A64(0x0004)
	int                                                m_nPanelName;                                             // 0x0A70(0x0004)
	int                                                m_nAttachmentId;                                          // 0x0A8C(0x0001)
	int                                                m_nOverlayMaterial;                                       // 0x0A90(0x0004)
	int                                                m_fScreenFlags;                                           // 0x0A94(0x0004)
	int                                                m_hPlayerOwner;                                           // 0x0AF8(0x0004)
};

//class RecvTable.DT_VehicleDriverExclusive
class DT_VehicleDriverExclusive
{
	struct Array                                       m_hoverVehicleHoverOffsetPrev;                            // 0x0000(0x0010)
	struct VectorXY                                    m_localOrigin;                                            // 0x0004(0x000C)
	float                                              m_localOrigin.z;                                          // 0x000C(0x0004)
	struct Vector                                      m_hoverVehicleSmoothTilt;                                 // 0x1AB8(0x000C)
	struct Vector                                      m_hoverVehicleSmoothTiltVelocity;                         // 0x1AC4(0x000C)
	float                                              m_hoverVehicleSmoothYaw;                                  // 0x1AD0(0x0004)
	float                                              m_hoverVehicleSmoothYawVelocity;                          // 0x1AD4(0x0004)
	struct Vector                                      m_hoverVehicleLookAheadAcceleration;                      // 0x1AD8(0x000C)
	int                                                m_hoverVehicleDebugFlyMode;                               // 0x1AEC(0x0001)
	struct Vector                                      m_hoverVehiclePhysPush;                                   // 0x1B20(0x000C)
	struct m_pushedFixedPointOffset                    m_pushedFixedPointOffset;                                 // 0x1C54(0x0000)
};

//class RecvTable.DT_VehicleNonDriverExclusive
class DT_VehicleNonDriverExclusive
{
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct VectorXY                                    m_localOrigin;                                            // 0x0054(0x000C)
	float                                              m_localOrigin.z;                                          // 0x005C(0x0004)
};

//class RecvTable.DT_PlayerVehicle
class DT_PlayerVehicle
{
	struct DT_BaseAnimatingOverlay                     DT_PlayerVehicle;                                         // 0x0000(0x0000)
	struct DT_VehicleDriverExclusive                   vehicledriverdata;                                        // 0x0000(0x0000)
	struct DT_VehicleNonDriverExclusive                vehiclenondriverdata;                                     // 0x0000(0x0000)
	struct Array                                       m_vehiclePlayers;                                         // 0x0000(0x0010)
	float                                              m_vecViewOffset.x;                                        // 0x0034(0x0004)
	float                                              m_vecViewOffset.y;                                        // 0x0038(0x0004)
	float                                              m_vecViewOffset.z;                                        // 0x003C(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	int                                                m_vehicleDriver;                                          // 0x1984(0x0004)
	struct Time                                        m_driverActivationTime;                                   // 0x198C(0x0004)
	struct Time                                        m_driverDeactivationTime;                                 // 0x1990(0x0004)
	int                                                m_vehiclePlayerCount;                                     // 0x19A4(0x0004)
	int                                                m_vehicleActivated;                                       // 0x19A8(0x0001)
	int                                                m_blockDuckInput;                                         // 0x19A9(0x0001)
	int                                                m_vehicleFlags;                                           // 0x19AC(0x0004)
	int                                                m_vehicleType;                                            // 0x19B0(0x0004)
	float                                              m_vehicleLaunchTime;                                      // 0x19B8(0x0004)
	float                                              m_cameraVehicleMaxDist;                                   // 0x19C0(0x0004)
	float                                              m_cameraVehicleMaxVertDist;                               // 0x19C4(0x0004)
	struct Vector                                      m_vehicleVelocity;                                        // 0x19C8(0x000C)
	int                                                m_vehicleGroundEntity;                                    // 0x19D4(0x0004)
	struct Vector                                      m_vehicleGroundNormal;                                    // 0x19D8(0x000C)
	int                                                m_hoverVehicleIsOnGround;                                 // 0x1A04(0x0001)
	struct Time                                        m_hoverVehicleLastBoostTime;                              // 0x1AE4(0x0004)
	int                                                m_hoverVehicleIsParked;                                   // 0x1AED(0x0001)
	int                                                m_hoverVehicleIsMarkedAsDrivingForward;                   // 0x1AEE(0x0001)
	float                                              m_hoverVehicleStunTimeEnd;                                // 0x1AF0(0x0004)
	float                                              m_hoverVehicleThrottle;                                   // 0x1AF4(0x0004)
	float                                              m_hoverVehicleBanking;                                    // 0x1AFC(0x0004)
	float                                              m_hoverVehicleFrictionLastTime;                           // 0x1B00(0x0004)
	int                                                m_hoverVehicleFrictionSurfPropOther;                      // 0x1B04(0x0004)
	struct Vector                                      m_hoverVehicleFrictionNormal;                             // 0x1B08(0x000C)
	struct Vector                                      m_hoverVehicleFrictionPos;                                // 0x1B14(0x000C)
	struct m_hoverVehicleSeats                         m_hoverVehicleSeats;                                      // 0x1B2C(0x0000)
	struct m_abilityAttachmentEnts                     m_abilityAttachmentEnts;                                  // 0x1B50(0x0000)
	struct m_abilityAttachmentInts                     m_abilityAttachmentInts;                                  // 0x1B58(0x0000)
	struct Vector                                      m_overrideVehicleAngles;                                  // 0x1C38(0x000C)
	int                                                m_overrideVehicleAnglesUntilTick;                         // 0x1C44(0x0004)
	int                                                m_pushingEnt;                                             // 0x1C6C(0x0004)
	int                                                m_materialDualColorMask;                                  // 0x1CFC(0x0004)
};

//class RecvTable.DT_TriggerUpdraft
class DT_TriggerUpdraft
{
	struct DT_BaseTrigger                              DT_TriggerUpdraft;                                        // 0x0000(0x0000)
};

//class RecvTable.DT_TriggerNoObjectPlacement
class DT_TriggerNoObjectPlacement
{
	struct DT_BaseTrigger                              DT_TriggerNoObjectPlacement;                              // 0x0000(0x0000)
};

//class RecvTable.DT_TriggerNoZipline
class DT_TriggerNoZipline
{
	struct DT_BaseTrigger                              DT_TriggerNoZipline;                                      // 0x0000(0x0000)
};

//class RecvTable.DT_TriggerNoGrapple
class DT_TriggerNoGrapple
{
	struct DT_BaseTrigger                              DT_TriggerNoGrapple;                                      // 0x0000(0x0000)
};

//class RecvTable.DT_BaseVPhysicsTrigger
class DT_BaseVPhysicsTrigger
{
	struct DT_BaseEntity                               DT_BaseVPhysicsTrigger;                                   // 0x0000(0x0000)
};

//class RecvTable.DT_TriggerOutOfBounds
class DT_TriggerOutOfBounds
{
	struct DT_BaseTrigger                              DT_TriggerOutOfBounds;                                    // 0x0000(0x0000)
};

//class RecvTable.DT_SoundData
class DT_SoundData
{
	int                                                m_targetEnt;                                              // 0x0000(0x0004)
	struct BitMask                                     m_soundID;                                                // 0x0008(0x0008)
	int                                                m_networkTableID;                                         // 0x0010(0x0004)
	int                                                m_soundIsStart;                                           // 0x0014(0x0001)
	float                                              m_seek;                                                   // 0x0018(0x0004)
};

//class RecvTable.DT_TESoundDispatch
class DT_TESoundDispatch
{
	struct DT_BaseTempEntity                           DT_TESoundDispatch;                                       // 0x0000(0x0000)
	struct DT_SoundData                                m_soundData;                                              // 0x0028(0x0000)
};

//class RecvTable.DT_TEPhysicsProp
class DT_TEPhysicsProp
{
	struct DT_BaseTempEntity                           DT_TEPhysicsProp;                                         // 0x0000(0x0000)
	struct Vector                                      m_vecOrigin;                                              // 0x0028(0x000C)
	float                                              m_angRotation.x;                                          // 0x0034(0x0004)
	float                                              m_angRotation.y;                                          // 0x0038(0x0004)
	float                                              m_angRotation.z;                                          // 0x003C(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0040(0x000C)
	int                                                m_nModelIndex;                                            // 0x004C(0x0004)
	int                                                m_nSkin;                                                  // 0x0050(0x0004)
	int                                                m_nFlags;                                                 // 0x0054(0x0004)
	int                                                m_nEffects;                                               // 0x0058(0x0004)
};

//class RecvTable.DT_TEParticleSystem
class DT_TEParticleSystem
{
	struct DT_BaseTempEntity                           DT_TEParticleSystem;                                      // 0x0000(0x0000)
	float                                              m_vecOrigin.x;                                            // 0x0028(0x0004)
	float                                              m_vecOrigin.y;                                            // 0x002C(0x0004)
	float                                              m_vecOrigin.z;                                            // 0x0030(0x0004)
};

//class RecvTable.DT_TEShatterSurface
class DT_TEShatterSurface
{
	struct DT_BaseTempEntity                           DT_TEShatterSurface;                                      // 0x0000(0x0000)
	struct Vector                                      m_vecOrigin;                                              // 0x0028(0x000C)
	struct Vector                                      m_vecAngles;                                              // 0x0034(0x000C)
	struct Vector                                      m_vecForce;                                               // 0x0040(0x000C)
	struct Vector                                      m_vecForcePos;                                            // 0x004C(0x000C)
	float                                              m_flWidth;                                                // 0x0058(0x0004)
	float                                              m_flHeight;                                               // 0x005C(0x0004)
	float                                              m_flShardSize;                                            // 0x0060(0x0004)
	int                                                m_nSurfaceType;                                           // 0x0064(0x0004)
};

//class RecvTable.DT_TEExplosion
class DT_TEExplosion
{
	struct DT_TEParticleSystem                         DT_TEExplosion;                                           // 0x0000(0x0000)
	float                                              m_fScale;                                                 // 0x0038(0x0004)
	int                                                m_nFrameRate;                                             // 0x003C(0x0004)
	int                                                m_nFlags;                                                 // 0x0040(0x0004)
	struct Vector                                      m_vecNormal;                                              // 0x0044(0x000C)
	int                                                m_chMaterialType;                                         // 0x0050(0x0001)
	int                                                m_nRadius;                                                // 0x0054(0x0004)
	int                                                m_nInnerRadius;                                           // 0x0058(0x0004)
	int                                                m_nMagnitude;                                             // 0x005C(0x0004)
	int                                                m_impactEffectTableIndex;                                 // 0x0060(0x0004)
	int                                                m_surfaceProp;                                            // 0x0064(0x0004)
	int                                                m_owner;                                                  // 0x0068(0x0004)
	int                                                m_victim;                                                 // 0x006C(0x0004)
};

//class RecvTable.DT_EffectData
class DT_EffectData
{
	float                                              m_vOrigin.x;                                              // 0x0000(0x0004)
	float                                              m_vOrigin.y;                                              // 0x0004(0x0004)
	float                                              m_vOrigin.z;                                              // 0x0008(0x0004)
	float                                              m_vStart.x;                                               // 0x000C(0x0004)
	float                                              m_vStart.y;                                               // 0x0010(0x0004)
	float                                              m_vStart.z;                                               // 0x0014(0x0004)
	struct Vector                                      m_vNormal;                                                // 0x0018(0x000C)
	struct Vector                                      m_vAngles;                                                // 0x0024(0x000C)
	int                                                m_effectFlags;                                            // 0x0030(0x0004)
	int                                                m_effectEntHandle;                                        // 0x0050(0x0004)
	int                                                m_otherEntHandle;                                         // 0x0054(0x0004)
	float                                              m_flScale;                                                // 0x0058(0x0004)
	float                                              m_flMagnitude;                                            // 0x005C(0x0004)
	float                                              m_flRadius;                                               // 0x0060(0x0004)
	int                                                m_nAttachmentId;                                          // 0x0064(0x0001)
	int                                                m_attachmentIdForViewmodel;                               // 0x0065(0x0001)
	int                                                m_nSurfaceProp;                                           // 0x0066(0x0001)
	int                                                m_nDamageType;                                            // 0x0068(0x0004)
	int                                                m_nOtherEntIndex;                                         // 0x006C(0x0004)
	int                                                m_sharedInt32_A;                                          // 0x0074(0x0004)
	int                                                m_sharedInt32_B;                                          // 0x0078(0x0004)
	int                                                m_iImpactEffectTableIndex;                                // 0x007C(0x0004)
	int                                                m_nColor;                                                 // 0x0080(0x0001)
	int                                                m_persistentWeaponEffect;                                 // 0x0094(0x0001)
	int                                                m_iEffectName;                                            // 0x0098(0x0004)
};

//class RecvTable.DT_TEEffectDispatch
class DT_TEEffectDispatch
{
	struct DT_BaseTempEntity                           DT_TEEffectDispatch;                                      // 0x0000(0x0000)
	struct DT_EffectData                               m_EffectData;                                             // 0x0028(0x0000)
};

//class RecvTable.DT_TEBreakModel
class DT_TEBreakModel
{
	struct DT_BaseTempEntity                           DT_TEBreakModel;                                          // 0x0000(0x0000)
	struct Vector                                      m_vecOrigin;                                              // 0x0028(0x000C)
	float                                              m_angRotation.x;                                          // 0x0034(0x0004)
	float                                              m_angRotation.y;                                          // 0x0038(0x0004)
	float                                              m_angRotation.z;                                          // 0x003C(0x0004)
	struct Vector                                      m_vecSize;                                                // 0x0040(0x000C)
	struct Vector                                      m_vecVelocity;                                            // 0x004C(0x000C)
	int                                                m_nRandomization;                                         // 0x0058(0x0004)
	int                                                m_nModelIndex;                                            // 0x005C(0x0004)
	int                                                m_nCount;                                                 // 0x0060(0x0004)
	float                                              m_fTime;                                                  // 0x0064(0x0004)
	int                                                m_nFlags;                                                 // 0x0068(0x0004)
};

//class RecvTable.DT_HardPointEntity
class DT_HardPointEntity
{
	struct Vector                                      m_localOrigin;                                            // 0x0004(0x000C)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
	int                                                m_state;                                                  // 0x0A64(0x0004)
	float                                              m_estimatedCaptureTime;                                   // 0x0A68(0x0004)
	float                                              m_progressRefPoint;                                       // 0x0A6C(0x0004)
	int                                                m_teamMilitiaAICount;                                     // 0x0A70(0x0004)
	int                                                m_teamIMCAICount;                                         // 0x0A74(0x0004)
	int                                                m_teamMilitiaPlayerCount;                                 // 0x0A78(0x0004)
	int                                                m_teamIMCPlayerCount;                                     // 0x0A7C(0x0004)
	int                                                m_teamMilitiaPlayerTitanCount;                            // 0x0A80(0x0004)
	int                                                m_teamIMCPlayerTitanCount;                                // 0x0A84(0x0004)
	int                                                m_hardpointID;                                            // 0x0A88(0x0004)
	int                                                m_terminal;                                               // 0x0A90(0x0004)
};

//class RecvTable.DT_HardPointFrontierEntity
class DT_HardPointFrontierEntity
{
	struct DT_HardPointEntity                          DT_HardPointFrontierEntity;                               // 0x0000(0x0000)
};

//class RecvTable.DT_Team
class DT_Team
{
	int                                                player_array_element;                                     // 0x0000(0xFFFFFFFF)
	struct Array                                       "player_array";                                           // 0x0000(0x0000)
	int                                                m_score;                                                  // 0x0A60(0x0004)
	int                                                m_score2;                                                 // 0x0A64(0x0004)
	int                                                m_kills;                                                  // 0x0A68(0x0004)
	int                                                m_deaths;                                                 // 0x0A6C(0x0004)
	int                                                m_iRoundsWon;                                             // 0x0A70(0x0004)
	int                                                m_iTeamTeamNum;                                           // 0x0A74(0x0004)
	string                                             m_szTeamname;                                             // 0x0A98(0x0000)
};

//class RecvTable.DT_ImportantOnEntSound
class DT_ImportantOnEntSound
{
	struct DT_BaseEntity                               DT_ImportantOnEntSound;                                   // 0x0000(0x0000)
	int                                                m_networkTableSoundID;                                    // 0x0A60(0x0004)
	int                                                m_hAttachedToEntity;                                      // 0x0A64(0x0004)
	struct Time                                        m_beginTime;                                              // 0x0A68(0x0004)
	int                                                m_hSuppressedClient;                                      // 0x0A6C(0x0004)
	int                                                m_milesSignal;                                            // 0x0A70(0x0001)
};

//class RecvTable.DT_ShieldProp
class DT_ShieldProp
{
	struct DT_DynamicProp                              DT_ShieldProp;                                            // 0x0000(0x0000)
	int                                                m_impactEffectColorID;                                    // 0x1680(0x0001)
};

//class RecvTable.DT_MaterialHarvester
class DT_MaterialHarvester
{
	struct DT_DynamicProp                              DT_MaterialHarvester;                                     // 0x0000(0x0000)
	struct m_collectedState                            m_collectedState;                                         // 0x1680(0x0000)
};

//class RecvTable.DT_FerroProp
class DT_FerroProp
{
	struct DT_DynamicProp                              DT_FerroProp;                                             // 0x0000(0x0000)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	struct m_highlightFunctionBits                     m_highlightFunctionBits;                                  // 0x02C0(0x0000)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	int                                                m_passThroughFlags;                                       // 0x0468(0x0004)
	int                                                m_passThroughThickness;                                   // 0x046C(0x0004)
	float                                              m_passThroughDirection;                                   // 0x0470(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	string                                             m_iName;                                                  // 0x0589(0x0000)
	int                                                m_scriptNameIndex;                                        // 0x0690(0x0004)
	string                                             m_holdUsePrompt;                                          // 0x0718(0x0000)
	string                                             m_pressUsePrompt;                                         // 0x0720(0x0000)
	int                                                m_lifeState;                                              // 0x0798(0x0001)
	int                                                m_phaseShiftFlags;                                        // 0x07B8(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_usablePriority;                                         // 0x0924(0x0004)
	float                                              m_usableDistanceOverride;                                 // 0x0928(0x0004)
	float                                              m_usableFOV;                                              // 0x092C(0x0004)
	float                                              m_usePromptSize;                                          // 0x0930(0x0004)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
	int                                                m_firstChildEntityLink;                                   // 0x0A40(0x0004)
	int                                                m_firstParentEntityLink;                                  // 0x0A44(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	float                                              m_flModelScale;                                           // 0x0F08(0x0004)
	int                                                m_bUseHitboxesForRenderBox;                               // 0x1641(0x0001)
	int                                                m_bAnimateInStaticShadow;                                 // 0x1642(0x0001)
};

//class RecvTable.DT_LootGrabber
class DT_LootGrabber
{
	struct DT_DynamicProp                              DT_LootGrabber;                                           // 0x0000(0x0000)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
	int                                                m_impactEffectColorID;                                    // 0x1680(0x0001)
	int                                                m_isVendingMachine;                                       // 0x1682(0x0001)
	int                                                m_lootBeingGrabbed;                                       // 0x1688(0x0004)
	float                                              m_lootGrabDist;                                           // 0x168C(0x0004)
};

//class RecvTable.DT_DeathBoxProp
class DT_DeathBoxProp
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	struct m_highlightFunctionBits                     m_highlightFunctionBits;                                  // 0x02C0(0x0000)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	string                                             m_iName;                                                  // 0x0589(0x0000)
	string                                             m_holdUsePrompt;                                          // 0x0718(0x0000)
	string                                             m_pressUsePrompt;                                         // 0x0720(0x0000)
	int                                                m_lifeState;                                              // 0x0798(0x0001)
	int                                                m_scriptNetData;                                          // 0x079C(0x0004)
	int                                                m_phaseShiftFlags;                                        // 0x07B8(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_usablePriority;                                         // 0x0924(0x0004)
	float                                              m_usableDistanceOverride;                                 // 0x0928(0x0004)
	float                                              m_usableFOV;                                              // 0x092C(0x0004)
	float                                              m_usePromptSize;                                          // 0x0930(0x0004)
	int                                                m_firstChildEntityLink;                                   // 0x0A40(0x0004)
	int                                                m_firstParentEntityLink;                                  // 0x0A44(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	int                                                m_bUseHitboxesForRenderBox;                               // 0x1641(0x0001)
	int                                                m_bAnimateInStaticShadow;                                 // 0x1642(0x0001)
	string                                             m_customOwnerName;                                        // 0x1680(0x0000)
};

//class RecvTable.DT_PropSurvival
class DT_PropSurvival
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_usableType;                                             // 0x0044(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	string                                             m_iSignifierName;                                         // 0x0580(0x0000)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	int                                                m_usablePriority;                                         // 0x0924(0x0004)
	float                                              m_usableDistanceOverride;                                 // 0x0928(0x0004)
	float                                              m_usableFOV;                                              // 0x092C(0x0004)
	float                                              m_usePromptSize;                                          // 0x0930(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_itemFlavorGUID;                                         // 0x0E4C(0x0004)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	int                                                m_skinMod;                                                // 0x0E58(0x0002)
	int                                                m_nBody;                                                  // 0x0E5C(0x0004)
	int                                                m_camoIndex;                                              // 0x0E60(0x0004)
	int                                                m_ammoInClip;                                             // 0x1644(0x0004)
	int                                                m_customScriptInt;                                        // 0x1648(0x0004)
	int                                                m_survivalProperty;                                       // 0x164C(0x0004)
	int                                                m_weaponNameIndex;                                        // 0x1654(0x0002)
	int                                                m_modBitField;                                            // 0x1658(0x0004)
	float                                              m_survivalPropFadeDist;                                   // 0x1660(0x0004)
};

//class RecvTable.DT_DynamicPropLightweight
class DT_DynamicPropLightweight
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	float                                              m_fadeDist;                                               // 0x0864(0x0004)
	int                                                m_nSkin;                                                  // 0x0E54(0x0004)
	int                                                m_skinMod;                                                // 0x0E58(0x0002)
};

//class RecvTable.DT_PostProcessController
class DT_PostProcessController
{
	struct DT_BaseEntity                               DT_PostProcessController;                                 // 0x0000(0x0000)
	struct m_flPostProcessParameters                   m_flPostProcessParameters;                                // 0x0A60(0x0000)
	int                                                m_bMaster;                                                // 0x0A78(0x0001)
};

//class RecvTable.DT_PointCamera
class DT_PointCamera
{
	struct DT_BaseEntity                               DT_PointCamera;                                           // 0x0000(0x0000)
	float                                              m_FOV;                                                    // 0x0AC0(0x0004)
	int                                                m_bFogEnable;                                             // 0x0AE8(0x0001)
	int                                                m_bActive;                                                // 0x0AE9(0x0001)
};

//class RecvTable.DT_PhysicsProp
class DT_PhysicsProp
{
	struct DT_BreakableProp                            DT_PhysicsProp;                                           // 0x0000(0x0000)
	int                                                m_spawnflags;                                             // 0x0094(0x0004)
	int                                                m_bAwake;                                                 // 0x1648(0x0001)
	int                                                m_ignoresCollisionWithCombatCharacters;                   // 0x1649(0x0001)
	int                                                m_isRolling;                                              // 0x164A(0x0001)
	int                                                m_networkTableRollSoundId;                                // 0x164C(0x0004)
	int                                                m_iPhysicsMode;                                           // 0x1678(0x0004)
	float                                              m_fMass;                                                  // 0x167C(0x0004)
	struct Vector                                      m_collisionMins;                                          // 0x1680(0x000C)
	struct Vector                                      m_collisionMaxs;                                          // 0x168C(0x000C)
};

//class RecvTable.DT_StatueProp
class DT_StatueProp
{
	struct DT_PhysicsProp                              DT_StatueProp;                                            // 0x0000(0x0000)
	int                                                m_hInitBaseAnimating;                                     // 0x16A0(0x0004)
	int                                                m_bShatter;                                               // 0x16A4(0x0001)
	int                                                m_nShatterFlags;                                          // 0x16A8(0x0004)
	struct Vector                                      m_vShatterPosition;                                       // 0x16AC(0x000C)
	struct Vector                                      m_vShatterForce;                                          // 0x16B8(0x000C)
};

//class RecvTable.DT_LootRoller
class DT_LootRoller
{
	struct DT_PhysicsProp                              DT_LootRoller;                                            // 0x0000(0x0000)
	int                                                m_tier;                                                   // 0x16A0(0x0004)
	int                                                m_hasVaultKey;                                            // 0x16A4(0x0001)
};

//class RecvTable.DT_ParticleSystem
class DT_ParticleSystem
{
	struct Vector                                      m_localOrigin;                                            // 0x0004(0x000C)
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_fEffects;                                               // 0x0040(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	int                                                m_iTeamNum;                                               // 0x044C(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
	struct BitMask                                     m_realmsBitMask;                                          // 0x0A48(0x0008)
	int                                                m_iEffectIndex;                                           // 0x0A60(0x0004)
	int                                                m_nStopType;                                              // 0x0A64(0x0004)
	int                                                m_bActive;                                                // 0x0A69(0x0001)
	int                                                m_bForceRenderAlways;                                     // 0x0A6B(0x0001)
	struct Time                                        m_flStartTime;                                            // 0x0A6C(0x0004)
	int                                                m_bInSkybox;                                              // 0x0A75(0x0001)
	int                                                m_killForReplay;                                          // 0x0A76(0x0001)
	int                                                m_killIfOverLimit;                                        // 0x0A77(0x0001)
	int                                                m_enemyControlPoint;                                      // 0x0A7C(0x0001)
	int                                                m_enemyControlPointOverride;                              // 0x0A7D(0x0001)
	struct m_vServerControlPoints                      m_vServerControlPoints;                                   // 0x0A80(0x0000)
	struct m_hControlPointEnts                         m_hControlPointEnts;                                      // 0x0ABC(0x0000)
	struct m_controlPointAttachTypes                   m_controlPointAttachTypes;                                // 0x0AD0(0x0000)
	int                                                m_controlPoint1AttachmentId;                              // 0x0AE4(0x0001)
	struct m_vServerControlPointColorIds               m_vServerControlPointColorIds;                            // 0x0AE9(0x0000)
	int                                                m_parentAttachType;                                       // 0x0AF0(0x0004)
};

//class RecvTable.DT_BCCLocalPlayerExclusive
class DT_BCCLocalPlayerExclusive
{
	struct Time                                        m_flNextAttack;                                           // 0x1980(0x0004)
};

//class RecvTable.DT_BaseCombatCharacter
class DT_BaseCombatCharacter
{
	struct DT_BaseAnimatingOverlay                     DT_BaseCombatCharacter;                                   // 0x0000(0x0000)
	struct DT_BCCLocalPlayerExclusive                  bcc_localdata;                                            // 0x0000(0x0000)
	struct m_weaponGettingSwitchedOut                  m_weaponGettingSwitchedOut;                               // 0x0008(0x0000)
	struct m_showActiveWeapon3p                        m_showActiveWeapon3p;                                     // 0x0010(0x0000)
	float                                              m_vecViewOffset.x;                                        // 0x0034(0x0004)
	float                                              m_vecViewOffset.y;                                        // 0x0038(0x0004)
	float                                              m_vecViewOffset.z;                                        // 0x003C(0x0004)
	float                                              m_cloakEndTime;                                           // 0x019C(0x0004)
	struct Time                                        m_cloakFadeInEndTime;                                     // 0x01A0(0x0004)
	float                                              m_cloakFadeOutStartTime;                                  // 0x01A4(0x0004)
	float                                              m_cloakFadeInDuration;                                    // 0x01A8(0x0004)
	float                                              m_cloakFlickerAmount;                                     // 0x01AC(0x0004)
	struct Time                                        m_cloakFlickerEndTime;                                    // 0x01B0(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	struct Vector                                      m_deathVelocity;                                          // 0x0474(0x000C)
	struct DT_MinimapBaseEntityData                    m_minimapData;                                            // 0x0968(0x0000)
	int                                                m_nameVisibilityFlags;                                    // 0x09B8(0x0004)
	struct Time                                        m_lastFiredTime;                                          // 0x1984(0x0004)
	int                                                m_lastFiredWeapon;                                        // 0x1988(0x0004)
	struct Time                                        m_raiseFromMeleeEndTime;                                  // 0x198C(0x0004)
	int                                                m_sharedEnergyCount;                                      // 0x1990(0x0004)
	int                                                m_sharedEnergyTotal;                                      // 0x1994(0x0004)
	int                                                m_sharedEnergyLockoutThreshold;                           // 0x1998(0x0004)
	struct Time                                        m_lastSharedEnergyRegenTime;                              // 0x199C(0x0004)
	struct Time                                        m_sharedEnergyRegenRate;                                  // 0x19A0(0x0004)
	float                                              m_sharedEnergyRegenDelay;                                 // 0x19A4(0x0004)
	struct Time                                        m_lastSharedEnergyTakeTime;                               // 0x19A8(0x0004)
	struct m_selectedWeapons                           m_selectedWeapons;                                        // 0x1A10(0x0000)
	struct m_latestPrimaryWeapons                      m_latestPrimaryWeapons;                                   // 0x1A14(0x0000)
	struct m_latestPrimaryWeaponsIndexZeroOrOne        m_latestPrimaryWeaponsIndexZeroOrOne;                     // 0x1A1C(0x0000)
	struct m_latestNonOffhandWeapons                   m_latestNonOffhandWeapons;                                // 0x1A24(0x0000)
	int                                                m_lastCycleSlot;                                          // 0x1A2C(0x0001)
	int                                                m_weaponPermission;                                       // 0x1A34(0x0004)
	struct Time                                        m_weaponDelayEnableTime;                                  // 0x1A38(0x0004)
	int                                                m_weaponDisabledInScript;                                 // 0x1A3C(0x0001)
	int                                                m_weaponDisabledFlags;                                    // 0x1A52(0x0001)
	int                                                m_weaponInventorySlotLockedFlags;                         // 0x1A54(0x0002)
	int                                                m_weaponTypeDisabledFlags;                                // 0x1A58(0x0004)
	struct m_weaponTypeDisabledRefCount                m_weaponTypeDisabledRefCount;                             // 0x1A5C(0x0000)
	int                                                m_weaponAmmoRegenDisabled;                                // 0x1A65(0x0001)
	int                                                m_weaponAmmoRegenDisabledRefCount;                        // 0x1A68(0x0004)
	int                                                m_hudInfo_visibilityTestAlwaysPasses;                     // 0x1A6C(0x0001)
	int                                                m_contextAction;                                          // 0x1A80(0x0004)
	int                                                m_phaseShiftType;                                         // 0x1AAC(0x0004)
	struct Time                                        m_phaseShiftTimeStart;                                    // 0x1AB0(0x0004)
	struct Time                                        m_phaseShiftTimeEnd;                                      // 0x1AB4(0x0004)
	int                                                m_targetInfoPingValue;                                    // 0x1BE0(0x0004)
};

//class RecvTable.DT_WeaponInventoryActiveWeaponOnly
class DT_WeaponInventoryActiveWeaponOnly
{
	struct activeWeapons                               activeWeapons;                                            // 0x0064(0x0000)
};

//class RecvTable.DT_AI_BaseNPC_StatusEffects
class DT_AI_BaseNPC_StatusEffects
{
	struct m_statusEffectsTimedNPCNV                   m_statusEffectsTimedNPCNV;                                // 0x1C58(0x0000)
	struct m_statusEffectsEndlessNPCNV                 m_statusEffectsEndlessNPCNV;                              // 0x1CA0(0x0000)
};

//class RecvTable.DT_AI_BaseNPC
class DT_AI_BaseNPC
{
	struct DT_BaseCombatCharacter                      DT_AI_BaseNPC;                                            // 0x0000(0x0000)
	struct DT_AI_BaseNPC_StatusEffects                 statuseffectsdata_npc;                                    // 0x0000(0x0000)
	struct Vector                                      m_localOrigin;                                            // 0x0004(0x000C)
	int                                                m_hGroundEntity;                                          // 0x0438(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	int                                                m_lifeState;                                              // 0x0798(0x0001)
	struct DT_WeaponInventoryActiveWeaponOnly          m_inventory;                                              // 0x19B0(0x0000)
	int                                                m_fireteamSlotIndex;                                      // 0x1C50(0x0004)
	int                                                m_aiSprinting;                                            // 0x1DBA(0x0001)
	int                                                m_aiNetworkFlags;                                         // 0x1DDC(0x0004)
	int                                                m_isHologram;                                             // 0x1DE0(0x0001)
	string                                             m_title;                                                  // 0x1DE1(0x0000)
	int                                                m_aiSettingsIndex;                                        // 0x1E04(0x0004)
	int                                                m_subclass;                                               // 0x1E08(0x0004)
};

//class RecvTable.DT_NPC_SentryTurret
class DT_NPC_SentryTurret
{
	struct DT_AI_BaseNPC                               DT_NPC_SentryTurret;                                      // 0x0000(0x0000)
	int                                                m_turretState;                                            // 0x1E10(0x0004)
	int                                                m_killCount;                                              // 0x1E14(0x0004)
	int                                                m_titanKillCount;                                         // 0x1E18(0x0004)
	int                                                m_eyeAttach;                                              // 0x1E1C(0x0001)
	int                                                m_controlPanel;                                           // 0x1E20(0x0004)
};

//class RecvTable.DT_WeaponInventory
class DT_WeaponInventory
{
	struct weapons                                     weapons;                                                  // 0x0008(0x0000)
	struct offhandWeapons                              offhandWeapons;                                           // 0x0038(0x0000)
	struct activeWeapons                               activeWeapons;                                            // 0x0064(0x0000)
};

//class RecvTable.DT_GrappleData
class DT_GrappleData
{
	struct Array                                       m_grapplePoints;                                          // 0x0000(0x0030)
	struct Vector                                      m_grappleVel;                                             // 0x0008(0x000C)
	int                                                m_grapplePointCount;                                      // 0x0044(0x0004)
	int                                                m_grappleAttached;                                        // 0x0048(0x0001)
	int                                                m_grapplePulling;                                         // 0x0049(0x0001)
	int                                                m_grappleSwinging;                                        // 0x004A(0x0001)
	int                                                m_grappleRetracting;                                      // 0x004B(0x0001)
	int                                                m_grappleForcedRetracting;                                // 0x004C(0x0001)
	int                                                m_grappleGracePeriodFinished;                             // 0x004D(0x0001)
	float                                              m_grappleUsedPower;                                       // 0x0050(0x0004)
	struct Time                                        m_grappleActivateTime;                                    // 0x0054(0x0004)
	struct Time                                        m_grapplePullTime;                                        // 0x0058(0x0004)
	struct Time                                        m_grappleAttachTime;                                      // 0x005C(0x0004)
	struct Time                                        m_grappleDetachTime;                                      // 0x0060(0x0004)
	int                                                m_grappleMeleeTarget;                                     // 0x0064(0x0004)
	int                                                m_grappleAutoAimTarget;                                   // 0x0068(0x0004)
	int                                                m_grappleHasGoodVelocity;                                 // 0x006C(0x0001)
	struct Time                                        m_grappleLastGoodVelocityTime;                            // 0x0070(0x0004)
	float                                              m_grappleSwingDetachLowSpeed;                             // 0x0074(0x0004)
	struct Time                                        m_grappleSwingHoldTime;                                   // 0x0078(0x0004)
};

//class RecvTable.DT_NPC_Titan
class DT_NPC_Titan
{
	struct DT_AI_BaseNPC                               DT_NPC_Titan;                                             // 0x0000(0x0000)
	int                                                m_decalIndex;                                             // 0x0E64(0x0004)
	struct DT_WeaponInventory                          m_inventory;                                              // 0x19B0(0x0000)
	struct m_selectedOffhands                          m_selectedOffhands;                                       // 0x1A26(0x0000)
	int                                                m_titanSoul;                                              // 0x1AA4(0x0004)
	int                                                m_grappleHook;                                            // 0x1E10(0x0004)
	struct DT_GrappleData                              m_grapple;                                                // 0x1E18(0x0000)
	int                                                m_grappleActive;                                          // 0x1EA8(0x0001)
	int                                                m_canStand;                                               // 0x1EA9(0x0001)
};

//class RecvTable.DT_NPC_Dropship
class DT_NPC_Dropship
{
	struct DT_AI_BaseNPC                               DT_NPC_Dropship;                                          // 0x0000(0x0000)
	int                                                m_titanSoul;                                              // 0x1AA4(0x0004)
	int                                                m_bJetWakeFXEnabled;                                      // 0x1E30(0x0001)
};

//class RecvTable.DT_NPC_Drone
class DT_NPC_Drone
{
	struct DT_AI_BaseNPC                               DT_NPC_Drone;                                             // 0x0000(0x0000)
	int                                                m_bAttackTarget;                                          // 0x1E10(0x0001)
	int                                                m_scanTarget;                                             // 0x1E14(0x0004)
	float                                              m_beamSpread;                                             // 0x1E18(0x0004)
};

//class RecvTable.DT_MovieDisplay
class DT_MovieDisplay
{
	struct DT_BaseEntity                               DT_MovieDisplay;                                          // 0x0000(0x0000)
	int                                                m_bEnabled;                                               // 0x0A60(0x0001)
	int                                                m_bLooping;                                               // 0x0A61(0x0001)
	string                                             m_szMovieFilename;                                        // 0x0A63(0x0000)
	string                                             m_szGroupName;                                            // 0x0AE3(0x0000)
	string                                             m_szExternalAudioFilename;                                // 0x0B63(0x0000)
	int                                                m_bStretchToFill;                                         // 0x0BA3(0x0001)
	int                                                m_bLetterbox;                                             // 0x0BA4(0x0001)
	int                                                m_bPausesWithClient;                                      // 0x0BA5(0x0001)
	int                                                m_bForcedSlave;                                           // 0x0BA6(0x0001)
	int                                                m_bUseCustomUVs;                                          // 0x0BA7(0x0001)
	float                                              m_flUMin;                                                 // 0x0BAC(0x0004)
	float                                              m_flUMax;                                                 // 0x0BB0(0x0004)
	float                                              m_flVMin;                                                 // 0x0BB4(0x0004)
	float                                              m_flVMax;                                                 // 0x0BB8(0x0004)
};

//class RecvTable.DT_TEGibEvent
class DT_TEGibEvent
{
	int                                                m_hVictim;                                                // 0x0028(0x0004)
	struct Vector                                      m_attackDir;                                              // 0x002C(0x000C)
};

//class RecvTable.DT_FuncMoveLinear
class DT_FuncMoveLinear
{
	struct DT_BaseToggle                               DT_FuncMoveLinear;                                        // 0x0000(0x0000)
	int                                                m_fFlags;                                                 // 0x0098(0x0004)
	struct Vector                                      m_vecVelocity;                                            // 0x0488(0x000C)
};

//class RecvTable.DT_FuncBrushLightweight
class DT_FuncBrushLightweight
{
	int                                                moveparent;                                               // 0x001C(0x0004)
	int                                                m_parentAttachment;                                       // 0x0020(0x0001)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_visibilityFlags;                                        // 0x0444(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	int                                                m_parentAttachmentModel;                                  // 0x0858(0x0004)
};

//class RecvTable.DT_FuncBrush
class DT_FuncBrush
{
	struct DT_BaseEntity                               DT_FuncBrush;                                             // 0x0000(0x0000)
};

//class RecvTable.DT_BreakableSurface
class DT_BreakableSurface
{
	struct DT_BaseEntity                               DT_BreakableSurface;                                      // 0x0000(0x0000)
	int                                                m_nNumWide;                                               // 0x0A68(0x0004)
	int                                                m_nNumHigh;                                               // 0x0A6C(0x0004)
	float                                              m_flPanelWidth;                                           // 0x0A70(0x0004)
	float                                              m_flPanelHeight;                                          // 0x0A74(0x0004)
	struct Vector                                      m_vNormal;                                                // 0x0A78(0x000C)
	struct Vector                                      m_vUp;                                                    // 0x0A84(0x000C)
	struct Vector                                      m_vCorner;                                                // 0x0A9C(0x000C)
	int                                                m_bIsBroken;                                              // 0x0AA8(0x0001)
	int                                                m_nSurfaceType;                                           // 0x0AAC(0x0004)
	struct m_RawPanelBitVec                            m_RawPanelBitVec;                                         // 0x0AE8(0x0000)
};

//class RecvTable.DT_CascadeLight
class DT_CascadeLight
{
	struct DT_BaseEntity                               DT_CascadeLight;                                          // 0x0000(0x0000)
	struct Vector                                      m_shadowDirection;                                        // 0x0A60(0x000C)
	struct Vector                                      m_envLightShadowDirection;                                // 0x0A78(0x000C)
	int                                                m_bEnabled;                                               // 0x0A8C(0x0001)
	int                                                m_bEnableShadows;                                         // 0x0A8D(0x0001)
	int                                                m_LightColor;                                             // 0x0A8F(0x0004)
	string                                             m_cloudMaskName;                                          // 0x0A93(0x0000)
	struct Vector                                      m_cloudOffset;                                            // 0x0B98(0x000C)
	float                                              m_cloudScale;                                             // 0x0BA4(0x0004)
};

//class RecvTable.DT_EntityDissolve
class DT_EntityDissolve
{
	struct DT_BaseEntity                               DT_EntityDissolve;                                        // 0x0000(0x0000)
	struct Time                                        m_flStartTime;                                            // 0x0A68(0x0004)
	float                                              m_flFadeStart;                                            // 0x0A6C(0x0004)
	float                                              m_flFadeLength;                                           // 0x0A70(0x0004)
	int                                                m_nDissolveType;                                          // 0x0A74(0x0004)
	int                                                m_isLethal;                                               // 0x0A78(0x0001)
};

//class RecvTable.DT_EnvWindShared
class DT_EnvWindShared
{
	struct Time                                        m_flStartTime;                                            // 0x0008(0x0004)
	int                                                m_iWindSeed;                                              // 0x000C(0x0004)
	int                                                m_iMinWind;                                               // 0x0010(0x0004)
	int                                                m_iMaxWind;                                               // 0x0014(0x0004)
	int                                                m_iMinGust;                                               // 0x001C(0x0004)
	int                                                m_iMaxGust;                                               // 0x0020(0x0004)
	float                                              m_flMinGustDelay;                                         // 0x0024(0x0004)
	float                                              m_flMaxGustDelay;                                         // 0x0028(0x0004)
	float                                              m_flGustDuration;                                         // 0x002C(0x0004)
	int                                                m_iGustDirChange;                                         // 0x0030(0x0004)
	int                                                m_iInitialWindDir;                                        // 0x0070(0x0004)
	float                                              m_flInitialWindSpeed;                                     // 0x0074(0x0004)
};

//class RecvTable.DT_EnvWind
class DT_EnvWind
{
	struct DT_BaseEntity                               DT_EnvWind;                                               // 0x0000(0x0000)
	struct DT_EnvWindShared                            m_EnvWindShared;                                          // 0x0A60(0x0000)
};

//class RecvTable.DT_DynamicLight
class DT_DynamicLight
{
	struct DT_BaseEntity                               DT_DynamicLight;                                          // 0x0000(0x0000)
	int                                                m_Flags;                                                  // 0x0A60(0x0001)
	int                                                m_LightStyle;                                             // 0x0A61(0x0001)
	float                                              m_Radius;                                                 // 0x0A64(0x0004)
	int                                                m_Exponent;                                               // 0x0A68(0x0004)
	float                                              m_InnerAngle;                                             // 0x0A6C(0x0004)
	float                                              m_OuterAngle;                                             // 0x0A70(0x0004)
	float                                              m_SpotRadius;                                             // 0x0A74(0x0004)
};

//class RecvTable.DT_ColorCorrection
class DT_ColorCorrection
{
	struct DT_BaseEntity                               DT_ColorCorrection;                                       // 0x0000(0x0000)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0A60(0x000C)
	float                                              m_MinFalloff;                                             // 0x0A6C(0x0004)
	float                                              m_MaxFalloff;                                             // 0x0A70(0x0004)
	float                                              m_flFadeInDuration;                                       // 0x0A74(0x0004)
	float                                              m_flFadeOutDuration;                                      // 0x0A78(0x0004)
	float                                              m_flMaxWeight;                                            // 0x0A7C(0x0004)
	float                                              m_flCurWeight;                                            // 0x0A80(0x0004)
	string                                             m_netLookupFilename;                                      // 0x0A84(0x0000)
	int                                                m_bEnabled;                                               // 0x0B88(0x0001)
	int                                                m_bMaster;                                                // 0x0B89(0x0001)
	int                                                m_bClientSide;                                            // 0x0B8A(0x0001)
	int                                                m_bExclusive;                                             // 0x0B8B(0x0001)
};

//class RecvTable.DT_BaseButton
class DT_BaseButton
{
	struct DT_BaseToggle                               DT_BaseButton;                                            // 0x0000(0x0000)
	int                                                m_usable;                                                 // 0x0A90(0x0001)
};

//class RecvTable.DT_AmbientGeneric
class DT_AmbientGeneric
{
	struct DT_BaseEntity                               DT_AmbientGeneric;                                        // 0x0000(0x0000)
	float                                              m_radius;                                                 // 0x0A60(0x0004)
	int                                                m_isEnabled;                                              // 0x0A64(0x0001)
	int                                                m_networkTableSoundID;                                    // 0x0A70(0x0004)
	struct Vector                                      m_networkedSegmentEndpointWorldSpace;                     // 0x0A78(0x000C)
	int                                                m_hasPolylineSegments;                                    // 0x0A84(0x0001)
};

//class RecvTable.DT_TitanSoul_StatusEffects
class DT_TitanSoul_StatusEffects
{
	struct m_statusEffectsTimedTitanSoulNV             m_statusEffectsTimedTitanSoulNV;                          // 0x0C28(0x0000)
	struct m_statusEffectsEndlessTitanSoulNV           m_statusEffectsEndlessTitanSoulNV;                        // 0x0D18(0x0000)
};

//class RecvTable.DT_TitanSoul
class DT_TitanSoul
{
	struct DT_TitanSoul_StatusEffects                  statuseffectsdata_soul;                                   // 0x0000(0x0000)
	int                                                m_bossPlayer;                                             // 0x0124(0x0004)
	int                                                m_shieldHealth;                                           // 0x0170(0x0004)
	int                                                m_shieldHealthMax;                                        // 0x0174(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	int                                                m_titan;                                                  // 0x0A60(0x0004)
	int                                                m_titanSoulScriptNetData;                                 // 0x0A68(0x0004)
	struct Time                                        m_lastRodeoHitTime;                                       // 0x0C00(0x0004)
	struct Time                                        m_nextCoreChargeAvailable;                                // 0x0C08(0x0004)
	struct Time                                        m_coreChargeExpireTime;                                   // 0x0C10(0x0004)
	struct Time                                        m_coreChargeStartTime;                                    // 0x0C18(0x0004)
	struct Time                                        m_coreUseDuration;                                        // 0x0C1C(0x0004)
	struct Time                                        m_damageComboLatestUpdateTime;                            // 0x0C20(0x0004)
	int                                                m_damageComboStartHealth;                                 // 0x0C24(0x0004)
	int                                                m_stance;                                                 // 0x0DC8(0x0004)
	int                                                m_doomed;                                                 // 0x0DCC(0x0001)
	struct BitMask                                     m_playerSettingsNum;                                      // 0x0DD0(0x0008)
	int                                                m_invalidHealthBarEnt;                                    // 0x0DD8(0x0001)
	int                                                m_bEjecting;                                              // 0x0DD9(0x0001)
	int                                                m_isValidRodeoTarget;                                     // 0x0DDA(0x0001)
};

//class RecvTable.DT_VFogVolume
class DT_VFogVolume
{
	struct DT_BaseEntity                               DT_VFogVolume;                                            // 0x0000(0x0000)
	struct Vector                                      m_absorption;                                             // 0x0A90(0x000C)
	struct Vector                                      m_scattering;                                             // 0x0A9C(0x000C)
	struct Vector                                      m_emission;                                               // 0x0AA8(0x000C)
	float                                              m_phaseG;                                                 // 0x0AB4(0x0004)
	float                                              m_edgeFade;                                               // 0x0AB8(0x0004)
	int                                                m_shapeType;                                              // 0x0ABC(0x0001)
	float                                              m_sunIntensity;                                           // 0x0AC0(0x0004)
	float                                              m_ambientIntensity;                                       // 0x0AC4(0x0004)
	struct Vector                                      m_ambientProbeOffset;                                     // 0x0AC8(0x000C)
	float                                              m_zNearFadeStart;                                         // 0x0AD4(0x0004)
	float                                              m_zNearFadeEnd;                                           // 0x0AD8(0x0004)
	float                                              m_zFarFadeStart;                                          // 0x0ADC(0x0004)
	float                                              m_zFarFadeEnd;                                            // 0x0AE0(0x0004)
	struct Vector                                      m_noiseVelocity_space;                                    // 0x0AE4(0x000C)
	float                                              m_noiseVelocity_time;                                     // 0x0AF0(0x0004)
	struct Vector                                      m_noiseScale;                                             // 0x0AF4(0x000C)
	float                                              m_noiseAmplitude;                                         // 0x0B00(0x0004)
	float                                              m_noiseCenter;                                            // 0x0B04(0x0004)
	struct Vector                                      m_size;                                                   // 0x0B08(0x000C)
	int                                                m_enabled;                                                // 0x0B14(0x0001)
};

//class RecvTable.DT_Local
class DT_Local
{
	struct Array                                       m_airMoveBlockPlanes;                                     // 0x0000(0x0018)
	int                                                m_iHideHUD;                                               // 0x0014(0x0004)
	int                                                m_superJumpsUsed;                                         // 0x0018(0x0004)
	int                                                m_jumpedOffRodeo;                                         // 0x001C(0x0001)
	struct Time                                        m_jumpPressTime;                                          // 0x0020(0x0004)
	struct Time                                        m_prevJumpPressTime;                                      // 0x0024(0x0004)
	struct Time                                        m_jetpackActivateTime;                                    // 0x0028(0x0004)
	struct Time                                        m_jetpackDeactivateTime;                                  // 0x002C(0x0004)
	float                                              m_flSuitPower;                                            // 0x0030(0x0004)
	float                                              m_flSuitJumpPower;                                        // 0x0034(0x0004)
	float                                              m_flSuitGrapplePower;                                     // 0x0038(0x0004)
	float                                              m_flFallVelocity;                                         // 0x003C(0x0004)
	float                                              m_flStepSize;                                             // 0x0040(0x0004)
	float                                              m_airSlowMoFrac;                                          // 0x0044(0x0004)
	int                                                predictableFlags;                                         // 0x0048(0x0004)
	int                                                m_bitsActiveDevices;                                      // 0x004C(0x0004)
	int                                                m_forceStance;                                            // 0x0050(0x0004)
	int                                                m_forceSlide;                                             // 0x0054(0x0001)
	int                                                m_duckToggleOn;                                           // 0x0055(0x0001)
	int                                                m_bDrawViewmodel;                                         // 0x0056(0x0001)
	int                                                m_bAllowAutoMovement;                                     // 0x0057(0x0001)
	float                                              m_accelScale;                                             // 0x0058(0x0004)
	float                                              m_powerRegenRateScale;                                    // 0x005C(0x0004)
	float                                              m_dodgePowerDelayScale;                                   // 0x0060(0x0004)
	int                                                m_hSkyCamera;                                             // 0x0078(0x0004)
	int                                                m_skybox3d.scale;                                         // 0x007C(0x0004)
	int                                                m_skybox3d.useWorldFog;                                   // 0x0080(0x0001)
	float                                              m_skybox3d.fog.botAlt;                                    // 0x0084(0x0004)
	float                                              m_skybox3d.fog.topAlt;                                    // 0x0088(0x0004)
	float                                              m_skybox3d.fog.halfDistBot;                               // 0x008C(0x0004)
	float                                              m_skybox3d.fog.halfDistTop;                               // 0x0090(0x0004)
	float                                              m_skybox3d.fog.distColorStr;                              // 0x0094(0x0004)
	float                                              m_skybox3d.fog.dirColorStr;                               // 0x0098(0x0004)
	float                                              m_skybox3d.fog.distOffset;                                // 0x009C(0x0004)
	float                                              m_skybox3d.fog.densityScale;                              // 0x00A0(0x0004)
	float                                              m_skybox3d.fog.halfAngleDeg;                              // 0x00A4(0x0004)
	float                                              m_skybox3d.fog.HDRColorScale;                             // 0x00A8(0x0004)
	int                                                m_skybox3d.fog.distColor;                                 // 0x00AC(0x0004)
	int                                                m_skybox3d.fog.dirColor;                                  // 0x00B0(0x0004)
	struct Vector                                      m_skybox3d.fog.direction;                                 // 0x00B4(0x000C)
	int                                                m_skybox3d.fog.enable;                                    // 0x00C5(0x0001)
	int                                                m_audio.soundscapeIndex;                                  // 0x012C(0x0004)
	int                                                m_audio.localBits;                                        // 0x0130(0x0004)
	int                                                m_audio.entIndex;                                         // 0x0134(0x0004)
	float                                              m_animNearZ;                                              // 0x0150(0x0004)
	int                                                lastAttacker;                                             // 0x0154(0x0004)
	int                                                attackedCount;                                            // 0x0158(0x0004)
	struct Time                                        m_airMoveBlockPlaneTime;                                  // 0x019C(0x0004)
	int                                                m_airMoveBlockPlaneCount;                                 // 0x01A0(0x0004)
	struct Time                                        m_queuedMeleePressTime;                                   // 0x01A4(0x0004)
	struct Time                                        m_queuedGrappleMeleeTime;                                 // 0x01A8(0x0004)
	int                                                m_disableMeleeUntilRelease;                               // 0x01AD(0x0001)
	struct Time                                        m_meleePressTime;                                         // 0x01B0(0x0004)
	int                                                m_meleeDisabledCounter;                                   // 0x01B4(0x0004)
	int                                                m_meleeInputIndex;                                        // 0x01B8(0x0004)
	int                                                m_trackedChildProjectileCount;                            // 0x01BC(0x0004)
	int                                                m_oneHandedWeaponUsage;                                   // 0x01C0(0x0001)
	struct Time                                        m_flCockpitEntryTime;                                     // 0x01C4(0x0004)
	struct Time                                        m_ejectStartTime;                                         // 0x01C8(0x0004)
	struct Time                                        m_disembarkStartTime;                                     // 0x01CC(0x0004)
	struct Time                                        m_hotDropImpactTime;                                      // 0x01D0(0x0004)
	struct Time                                        m_outOfBoundsDeadTime;                                    // 0x01D4(0x0004)
	int                                                m_objectiveIndex;                                         // 0x01D8(0x0004)
	int                                                m_objectiveEntity;                                        // 0x01DC(0x0004)
	struct Time                                        m_objectiveEndTime;                                       // 0x01E0(0x0004)
	int                                                m_cinematicEventFlags;                                    // 0x01E4(0x0004)
	int                                                m_forcedDialogueOnly;                                     // 0x01E8(0x0001)
	struct Time                                        m_titanBuildTime;                                         // 0x01EC(0x0004)
	struct Time                                        m_titanBubbleShieldTime;                                  // 0x01F0(0x0004)
	int                                                m_titanEmbarkEnabled;                                     // 0x01F4(0x0001)
	int                                                m_titanDisembarkEnabled;                                  // 0x01F5(0x0001)
	int                                                m_voicePackIndex;                                         // 0x01F8(0x0004)
	float                                              m_playerAnimStationaryGoalFeetYaw;                        // 0x01FC(0x0004)
	int                                                m_playerAnimJumping;                                      // 0x0200(0x0001)
	struct Time                                        m_playerAnimJumpStartTime;                                // 0x0204(0x0004)
	int                                                m_playerAnimFirstJumpFrame;                               // 0x0208(0x0001)
	int                                                m_playerAnimDodging;                                      // 0x0209(0x0001)
	int                                                m_playerAnimJumpActivity;                                 // 0x020A(0x0002)
	int                                                m_playerAnimLanding;                                      // 0x020C(0x0001)
	int                                                m_playerAnimShouldLand;                                   // 0x020D(0x0001)
	struct Time                                        m_playerAnimLandStartTime;                                // 0x0210(0x0004)
	int                                                m_playerAnimInAirWalk;                                    // 0x0214(0x0001)
	float                                              m_playerAnimPrevFrameSequenceMotionYaw;                   // 0x0218(0x0004)
	int                                                m_playerAnimMeleeParity;                                  // 0x021C(0x0004)
	struct Time                                        m_playerAnimMeleeStartTime;                               // 0x0220(0x0004)
	struct Rotation                                    m_playerLocalGravityBlendStartRotation;                   // 0x0254(0x0010)
	struct Rotation                                    m_playerLocalGravityBlendEndRotation;                     // 0x0264(0x0010)
	struct Vector                                      m_playerLocalGravityBlendEndDirection;                    // 0x0274(0x000C)
	struct Time                                        m_playerLocalGravityBlendStartTime;                       // 0x0280(0x0004)
	struct Time                                        m_playerLocalGravityBlendEndTime;                         // 0x0284(0x0004)
	float                                              m_playerLocalGravityBlendStrength;                        // 0x0288(0x0004)
	float                                              m_playerLocalGravityStrength;                             // 0x028C(0x0004)
	int                                                m_playerLocalGravityType;                                 // 0x0290(0x0004)
	struct Vector                                      m_playerLocalGravityPoint;                                // 0x0294(0x000C)
	struct Vector                                      m_playerLocalGravityLineStart;                            // 0x02A0(0x000C)
	struct Vector                                      m_playerLocalGravityLineEnd;                              // 0x02AC(0x000C)
	int                                                m_playerLocalGravityEntity;                               // 0x02B8(0x0004)
	int                                                m_playerLocalGravityLineStartEntity;                      // 0x02BC(0x0004)
	int                                                m_playerLocalGravityLineEndEntity;                        // 0x02C0(0x0004)
	struct Time                                        m_playerFloatLookStartTime;                               // 0x02C4(0x0004)
	struct Time                                        m_playerFloatLookEndTime;                                 // 0x02C8(0x0004)
	float                                              m_wallrunLatestFloorHeight;                               // 0x02CC(0x0004)
	int                                                m_wallrunFromJetpack;                                     // 0x02D0(0x0001)
	struct Vector                                      m_groundNormal;                                           // 0x02D4(0x000C)
	int                                                m_continuousUseBlocked;                                   // 0x02E0(0x0001)
	int                                                m_useEnt;                                                 // 0x02E4(0x0004)
};

//class RecvTable.DT_PlayerZipline
class DT_PlayerZipline
{
	int                                                m_ziplineReenableWeapons;                                 // 0x0008(0x0001)
	float                                              m_mountingZiplineAlpha;                                   // 0x000C(0x0004)
	struct Time                                        m_ziplineStartTime;                                       // 0x0010(0x0004)
	struct Time                                        m_ziplineEndTime;                                         // 0x0014(0x0004)
	struct Vector                                      m_mountingZiplineSourcePosition;                          // 0x0018(0x000C)
	struct Vector                                      m_mountingZiplineSourceVelocity;                          // 0x0024(0x000C)
	struct Vector                                      m_mountingZiplineTargetPosition;                          // 0x0030(0x000C)
	struct Vector                                      m_ziplineUsePosition;                                     // 0x0048(0x000C)
	float                                              m_slidingZiplineAlpha;                                    // 0x0054(0x0004)
	struct Vector                                      m_lastMoveDir2D;                                          // 0x0058(0x000C)
	int                                                m_ziplineReverse;                                         // 0x0064(0x0001)
	struct Vector                                      m_ziplinePathDirection;                                   // 0x0068(0x000C)
};

//class RecvTable.DT_CurrentData_LocalPlayer
class DT_CurrentData_LocalPlayer
{
	struct Vector                                      m_viewConeAngleMin;                                       // 0x0000(0x000C)
	struct Vector                                      m_viewConeAngleMax;                                       // 0x000C(0x000C)
	struct Vector                                      m_stepSmoothingOffset;                                    // 0x0018(0x000C)
	int                                                m_duckTransitionRemainderMsec;                            // 0x0024(0x0004)
	struct Vector                                      m_vecPunchBase_Angle;                                     // 0x0028(0x000C)
	struct Vector                                      m_vecPunchBase_AngleVel;                                  // 0x0034(0x000C)
	struct Vector                                      m_vecPunchWeapon_Angle;                                   // 0x0040(0x000C)
	struct Vector                                      m_vecPunchWeapon_AngleVel;                                // 0x004C(0x000C)
	struct m_shieldChangeAmountPerSource               m_shieldChangeAmountPerSource;                            // 0x0058(0x0000)
	struct m_pushedFixedPointOffset                    m_pushedFixedPointOffset;                                 // 0x0060(0x0000)
	struct m_pushedFixedPointOffsetReplayCompensated   m_pushedFixedPointOffsetReplayCompensated;                // 0x006C(0x0000)
	struct Rotation                                    m_localGravityRotation;                                   // 0x0084(0x0010)
};

//class RecvTable.DT_ThirdPersonView
class DT_ThirdPersonView
{
	float                                              m_thirdPersonEntViewOffset.x;                             // 0x0000(0x0004)
	float                                              m_thirdPersonEntViewOffset.y;                             // 0x0004(0x0004)
	float                                              m_thirdPersonEntViewOffset.z;                             // 0x0008(0x0004)
	int                                                m_thirdPersonEntShouldViewAnglesFollowThirdPersonEnt;     // 0x000C(0x0001)
	int                                                m_thirdPersonEntPitchIsFreelook;                          // 0x000D(0x0001)
	int                                                m_thirdPersonEntYawIsFreelook;                            // 0x000E(0x0001)
	int                                                m_thirdPersonEntUseFixedDist;                             // 0x000F(0x0001)
	int                                                m_thirdPersonEntFixedClientOnly;                          // 0x0010(0x0001)
	int                                                m_thirdPersonEntPushedInByGeo;                            // 0x0011(0x0001)
	int                                                m_thirdPersonEntDrawViewmodel;                            // 0x0012(0x0001)
	int                                                m_thirdPersonEntEnableCameraLag;                          // 0x0013(0x0001)
	int                                                m_thirdPersonEntFreezeLookControls;                       // 0x0014(0x0001)
	float                                              m_thirdPersonEntBlendInTotalDuration;                     // 0x0018(0x0004)
	float                                              m_thirdPersonEntBlendInEaseInDuration;                    // 0x001C(0x0004)
	float                                              m_thirdPersonEntBlendInEaseOutDuration;                   // 0x0020(0x0004)
	float                                              m_thirdPersonEntBlendOutDuration;                         // 0x0024(0x0004)
	float                                              m_thirdPersonEntFixedPitch;                               // 0x0028(0x0004)
	float                                              m_thirdPersonEntFixedYaw;                                 // 0x002C(0x0004)
	float                                              m_thirdPersonEntFixedDist;                                // 0x0030(0x0004)
	float                                              m_thirdPersonEntFixedHeight;                              // 0x0034(0x0004)
	float                                              m_thirdPersonEntFixedRight;                               // 0x0038(0x0004)
	float                                              m_thirdPersonEntVariableDistStart;                        // 0x003C(0x0004)
	float                                              m_thirdPersonEntVariableDistEnd;                          // 0x0040(0x0004)
	float                                              m_thirdPersonEntVariableDistStartTime;                    // 0x0044(0x0004)
	float                                              m_thirdPersonEntVariableDistEndTime;                      // 0x0048(0x0004)
	int                                                m_thirdPersonEntVariableDistLerpType;                     // 0x004C(0x0004)
	int                                                m_thirdPersonEntVariableDistLerpLogGrowthFactor;          // 0x0050(0x0004)
	float                                              m_thirdPersonEntVariableHeightStart;                      // 0x0054(0x0004)
	float                                              m_thirdPersonEntVariableHeightEnd;                        // 0x0058(0x0004)
	float                                              m_thirdPersonEntVariableHeightStartTime;                  // 0x005C(0x0004)
	float                                              m_thirdPersonEntVariableHeightEndTime;                    // 0x0060(0x0004)
	int                                                m_thirdPersonEntVariableHeightLerpType;                   // 0x0064(0x0004)
	int                                                m_thirdPersonEntVariableHeightLerpLogGrowthFactor;        // 0x0068(0x0004)
	float                                              m_thirdPersonEntVariableRightStart;                       // 0x006C(0x0004)
	float                                              m_thirdPersonEntVariableRightEnd;                         // 0x0070(0x0004)
	float                                              m_thirdPersonEntVariableRightStartTime;                   // 0x0074(0x0004)
	float                                              m_thirdPersonEntVariableRightEndTime;                     // 0x0078(0x0004)
	int                                                m_thirdPersonEntVariableRightLerpType;                    // 0x007C(0x0004)
	int                                                m_thirdPersonEntVariableRightLerpLogGrowthFactor;         // 0x0080(0x0004)
	float                                              m_thirdPersonEntMinYaw;                                   // 0x0098(0x0004)
	float                                              m_thirdPersonEntMaxYaw;                                   // 0x009C(0x0004)
	float                                              m_thirdPersonEntMinPitch;                                 // 0x00A0(0x0004)
	float                                              m_thirdPersonEntMaxPitch;                                 // 0x00A4(0x0004)
	float                                              m_thirdPersonEntSpringToCenterRate;                       // 0x00A8(0x0004)
	float                                              m_thirdPersonEntSpringToCenterDelay;                      // 0x00AC(0x0004)
	float                                              m_thirdPersonEntLookaheadLowerEntSpeed;                   // 0x00B0(0x0004)
	float                                              m_thirdPersonEntLookaheadUpperEntSpeed;                   // 0x00B4(0x0004)
	float                                              m_thirdPersonEntLookaheadMaxAngle;                        // 0x00B8(0x0004)
	float                                              m_thirdPersonEntLookaheadLerpAheadRate;                   // 0x00BC(0x0004)
	float                                              m_thirdPersonEntLookaheadLerpToCenterRate;                // 0x00C0(0x0004)
};

//class RecvTable.DT_NearbyPushers
class DT_NearbyPushers
{
	struct m_nearbyPushers                             m_nearbyPushers;                                          // 0x44AC(0x0000)
};

//class RecvTable.DT_LocalPlayerExclusive
class DT_LocalPlayerExclusive
{
	struct DT_NearbyPushers                            NearbyPushers;                                            // 0x0000(0x0000)
	struct VectorXY                                    m_localOrigin;                                            // 0x0004(0x000C)
	float                                              m_localOrigin.z;                                          // 0x000C(0x0004)
	struct Vector                                      m_vecAbsVelocity;                                         // 0x0140(0x000C)
	struct Vector                                      m_vecBaseVelocity;                                        // 0x042C(0x000C)
	float                                              m_vecVelocity.x;                                          // 0x0488(0x0004)
	float                                              m_vecVelocity.y;                                          // 0x048C(0x0004)
	float                                              m_vecVelocity.z;                                          // 0x0490(0x0004)
	float                                              m_flFriction;                                             // 0x04A0(0x0004)
	struct m_tethers                                   m_tethers;                                                // 0x1BE4(0x0000)
	struct Cycle                                       m_lastUCmdSimulationTicks;                                // 0x1CD4(0x0004)
	float                                              m_lastUCmdSimulationRemainderTime;                        // 0x1CD8(0x0004)
	struct DT_Local                                    m_Local;                                                  // 0x1E10(0x0000)
	struct DT_CurrentData_LocalPlayer                  m_currentFrameLocalPlayer;                                // 0x22D0(0x0000)
	struct m_modInventory                              m_modInventory;                                           // 0x2614(0x0000)
	struct m_consumableInventory                       m_consumableInventory;                                    // 0x2694(0x0000)
	float                                              m_fStickySprintMinTime;                                   // 0x29D8(0x0004)
	struct Time                                        m_sprintStartedTime;                                      // 0x2A00(0x0004)
	float                                              m_sprintStartedFrac;                                      // 0x2A04(0x0004)
	struct Time                                        m_sprintEndedTime;                                        // 0x2A08(0x0004)
	float                                              m_sprintEndedFrac;                                        // 0x2A0C(0x0004)
	struct Time                                        m_stickySprintStartTime;                                  // 0x2A10(0x0004)
	struct Vector                                      m_upDirPredicted;                                         // 0x2A80(0x000C)
	struct Vector                                      m_lastWallRunStartPos;                                    // 0x2A8C(0x000C)
	float                                              m_wallrunFrictionScale;                                   // 0x2ABC(0x0004)
	float                                              m_groundFrictionScale;                                    // 0x2AC0(0x0004)
	struct Vector                                      m_traversalBegin;                                         // 0x2B04(0x000C)
	struct Vector                                      m_traversalMid;                                           // 0x2B10(0x000C)
	struct Vector                                      m_traversalEnd;                                           // 0x2B1C(0x000C)
	float                                              m_traversalMidFrac;                                       // 0x2B28(0x0004)
	struct Vector                                      m_traversalForwardDir;                                    // 0x2B2C(0x000C)
	float                                              m_traversalProgress;                                      // 0x2B44(0x0004)
	struct Time                                        m_traversalStartTime;                                     // 0x2B48(0x0004)
	struct Time                                        m_traversalHandAppearTime;                                // 0x2B4C(0x0004)
	struct Time                                        m_traversalReleaseTime;                                   // 0x2B50(0x0004)
	struct Time                                        m_traversalBlendOutStartTime;                             // 0x2B54(0x0004)
	struct Vector                                      m_traversalBlendOutStartOffset;                           // 0x2B58(0x000C)
	struct Time                                        m_wallDangleJumpOffTime;                                  // 0x2B70(0x0004)
	int                                                m_wallDangleMayHangHere;                                  // 0x2B74(0x0001)
	int                                                m_wallDangleForceFallOff;                                 // 0x2B75(0x0001)
	int                                                m_wallDangleLastPushedForward;                            // 0x2B76(0x0001)
	int                                                m_wallDangleDisableWeapon;                                // 0x2B78(0x0004)
	int                                                m_gravityLiftActive;                                      // 0x2B82(0x0001)
	struct Time                                        m_gravityLiftEnterTime;                                   // 0x2B84(0x0004)
	struct Time                                        m_gravityLiftEjectTime;                                   // 0x2B88(0x0004)
	float                                              m_gravityLiftHoverTime;                                   // 0x2B8C(0x0004)
	int                                                m_blackholeActive;                                        // 0x2BA8(0x0001)
	int                                                m_jetDriveWasActive;                                      // 0x2BA9(0x0001)
	int                                                m_jetDriveActive;                                         // 0x2BAA(0x0001)
	struct Vector                                      m_jetDriveTargetPos;                                      // 0x2BAC(0x000C)
	int                                                m_jetDriveTargetEnt;                                      // 0x2BB8(0x0004)
	struct Vector                                      m_jetDriveTargetEntOffset;                                // 0x2BBC(0x000C)
	struct Vector                                      m_jetDriveStartPos;                                       // 0x2BC8(0x000C)
	struct Time                                        m_jetDriveStartTime;                                      // 0x2BD4(0x0004)
	float                                              m_jetDriveSpeed;                                          // 0x2BD8(0x0004)
	float                                              m_jetDriveAccel;                                          // 0x2BDC(0x0004)
	struct Time                                        m_jetDriveDecelWindowTimeOutTime;                         // 0x2BE0(0x0004)
	int                                                m_jetDriveInDecelWindow;                                  // 0x2BE4(0x0001)
	float                                              m_jetDriveTimeout;                                        // 0x2BE8(0x0004)
	struct Vector                                      m_jetDriveDoubleJumpVelocity;                             // 0x2BEC(0x000C)
	int                                                m_slowMoEnabled;                                          // 0x2D24(0x0001)
	int                                                m_sliding;                                                // 0x2D25(0x0001)
	int                                                m_slideLongJumpAllowed;                                   // 0x2D26(0x0001)
	float                                              m_ziprailBankTiltVel;                                     // 0x2D34(0x0004)
	int                                                m_ziprailBankTiltPoseParameter;                           // 0x2D38(0x0002)
	int                                                m_bIsStickySprinting;                                     // 0x2D3A(0x0001)
	float                                              m_prevMoveYaw;                                            // 0x2D3C(0x0004)
	float                                              m_sprintTiltVel;                                          // 0x2D40(0x0004)
	int                                                m_sprintTiltPoseParameter;                                // 0x2D44(0x0002)
	int                                                m_sprintFracPoseParameter;                                // 0x2D46(0x0002)
	int                                                m_ziplineAllowed;                                         // 0x2E94(0x0001)
	int                                                m_lastZipline;                                            // 0x2E9C(0x0004)
	struct Time                                        m_lastZiplineDetachTime;                                  // 0x2EA0(0x0004)
	struct DT_PlayerZipline                            m_zipline;                                                // 0x2EB0(0x0000)
	struct Vector                                      m_ziplineViewOffsetPosition;                              // 0x2F28(0x000C)
	struct Vector                                      m_ziplineViewOffsetVelocity;                              // 0x2F34(0x000C)
	int                                                m_ziplineGrenadeEntity;                                   // 0x2F40(0x0004)
	float                                              m_ziplineReattachCooldownTime;                            // 0x2F50(0x0004)
	int                                                m_ziplineCooldownIndex;                                   // 0x2F54(0x0001)
	int                                                m_highSpeedViewmodelAnims;                                // 0x2F55(0x0001)
	int                                                m_playAnimationType;                                      // 0x2F58(0x0004)
	int                                                m_detachGrappleOnPlayAnimationEnd;                        // 0x2F5C(0x0001)
	struct m_playAnimationNext                         m_playAnimationNext;                                      // 0x2F5E(0x0000)
	int                                                m_playAnimationEntityBlocker;                             // 0x2F64(0x0004)
	int                                                m_playAnimationEntityBlockerDucking;                      // 0x2F68(0x0001)
	int                                                m_boosting;                                               // 0x2F70(0x0001)
	int                                                m_activateBoost;                                          // 0x2F71(0x0001)
	int                                                m_repeatedBoost;                                          // 0x2F72(0x0001)
	float                                              m_boostMeter;                                             // 0x2F74(0x0004)
	int                                                m_jetpack;                                                // 0x2F78(0x0001)
	int                                                m_activateJetpack;                                        // 0x2F79(0x0001)
	int                                                m_jetpackAfterburner;                                     // 0x2F7A(0x0001)
	int                                                m_gliding;                                                // 0x2F7B(0x0001)
	float                                              m_glideMeter;                                             // 0x2F7C(0x0004)
	float                                              m_glideRechargeDelayAccumulator;                          // 0x2F80(0x0004)
	int                                                m_hovering;                                               // 0x2F84(0x0001)
	float                                              m_lastJumpHeight;                                         // 0x2F88(0x0004)
	struct m_touchingUpdraftTriggers                   m_touchingUpdraftTriggers;                                // 0x2F8C(0x0000)
	int                                                m_touchingUpdraftTriggersCount;                           // 0x2FCC(0x0004)
	struct m_touchingSlipTriggers                      m_touchingSlipTriggers;                                   // 0x2FD0(0x0000)
	int                                                m_touchingSlipTriggersCount;                              // 0x3010(0x0004)
	struct Vector                                      m_slipAirRestrictDirection;                               // 0x3014(0x000C)
	struct Time                                        m_slipAirRestrictTime;                                    // 0x3020(0x0004)
	struct m_replayImportantSounds_networkTableSoundID m_replayImportantSounds_networkTableSoundID;              // 0x3160(0x0000)
	struct m_replayImportantSounds_beginTime           m_replayImportantSounds_beginTime;                        // 0x3170(0x0000)
	int                                                m_viewConeActive;                                         // 0x31AD(0x0001)
	int                                                m_viewConeParented;                                       // 0x31AE(0x0001)
	int                                                m_viewConeParity;                                         // 0x31B0(0x0004)
	int                                                m_hConstraintEntity;                                      // 0x3464(0x0004)
	struct Vector                                      m_vecConstraintCenter;                                    // 0x3468(0x000C)
	float                                              m_flConstraintRadius;                                     // 0x3474(0x0004)
	float                                              m_flConstraintWidth;                                      // 0x3478(0x0004)
	float                                              m_flConstraintSpeedFactor;                                // 0x347C(0x0004)
	int                                                m_bConstraintPastRadius;                                  // 0x3480(0x0001)
	int                                                m_iObserverMode;                                          // 0x34D4(0x0004)
	int                                                m_hObserverTarget;                                        // 0x34E0(0x0004)
	struct Vector                                      m_observerModeStaticPosition;                             // 0x34F0(0x000C)
	struct Vector                                      m_observerModeStaticAngles;                               // 0x34FC(0x000C)
	float                                              m_observerModeStaticFOVOverride;                          // 0x3508(0x0004)
	struct Time                                        m_lastKillTime;                                           // 0x3574(0x0004)
	struct Time                                        m_wallRunStartTime;                                       // 0x359C(0x0004)
	struct Time                                        m_wallRunClearTime;                                       // 0x35A0(0x0004)
	int                                                m_dodging;                                                // 0x35B4(0x0001)
	int                                                m_dodgingInAir;                                           // 0x3622(0x0001)
	float                                              m_airSpeed;                                               // 0x363C(0x0004)
	float                                              m_airAcceleration;                                        // 0x3640(0x0004)
	float                                              m_timeShouldTryGivePlayerDoubleJump;                      // 0x3660(0x0004)
	int                                                m_firstPersonProxy;                                       // 0x3670(0x0004)
	int                                                m_predictedFirstPersonProxy;                              // 0x3674(0x0004)
	int                                                m_hardpointEntity;                                        // 0x3684(0x0004)
	int                                                m_petTitanMode;                                           // 0x36BC(0x0004)
	int                                                m_hThirdPersonEnt;                                        // 0x36C4(0x0004)
	int                                                m_thirdPersonShoulderView;                                // 0x36C8(0x0001)
	struct DT_ThirdPersonView                          m_thirdPerson;                                            // 0x372C(0x0000)
	int                                                m_playerLookTargetEntity;                                 // 0x383C(0x0004)
	struct Vector                                      m_playerLookTargetOffset;                                 // 0x3840(0x000C)
	float                                              m_viewConeLerpTime;                                       // 0x3890(0x0004)
	float                                              m_flLaggedMovementValue;                                  // 0x3AEC(0x0004)
	struct Time                                        m_lastMoveInputTime;                                      // 0x3AF0(0x0004)
	int                                                m_ignoreEntityForMovementUntilNotTouching;                // 0x3AF4(0x0004)
	int                                                m_lungeTargetEntity;                                      // 0x403C(0x0004)
	int                                                m_isLungingToPosition;                                    // 0x4040(0x0001)
	struct Vector                                      m_lungeTargetPosition;                                    // 0x4044(0x000C)
	struct Vector                                      m_lungeStartPositionOffset;                               // 0x4050(0x000C)
	struct Vector                                      m_lungeEndPositionOffset;                                 // 0x405C(0x000C)
	struct Time                                        m_lungeStartTime;                                         // 0x4068(0x0004)
	struct Time                                        m_lungeEndTime;                                           // 0x406C(0x0004)
	int                                                m_lungeCanFly;                                            // 0x4070(0x0001)
	int                                                m_lungeLockPitch;                                         // 0x4071(0x0001)
	float                                              m_lungeStartPitch;                                        // 0x4074(0x0004)
	float                                              m_lungeSmoothTime;                                        // 0x4078(0x0004)
	float                                              m_lungeMaxTime;                                           // 0x407C(0x0004)
	float                                              m_lungeMaxEndSpeed;                                       // 0x4080(0x0004)
	int                                                m_nearbyPusherCount;                                      // 0x45FC(0x0004)
	int                                                m_prepClimbPusher;                                        // 0x460C(0x0004)
	struct Vector                                      m_pushAwayFromTopAcceleration;                            // 0x4610(0x000C)
	float                                              m_minimapTargetZoomScale;                                 // 0x4620(0x0004)
	struct Time                                        m_minimapTargetLerpTime;                                  // 0x4624(0x0004)
	int                                                m_playerScriptNetDataExclusive;                           // 0x462C(0x0004)
	float                                              m_pingOffset;                                             // 0x4638(0x0004)
	float                                              m_skydiveForwardPoseValueVelocity;                        // 0x4654(0x0004)
	float                                              m_skydiveForwardPoseValueCurrent;                         // 0x465C(0x0004)
	float                                              m_skydiveSidePoseValueVelocity;                           // 0x4660(0x0004)
	float                                              m_skydiveSidePoseValueCurrent;                            // 0x4668(0x0004)
	float                                              m_skydiveYawVelocity;                                     // 0x466C(0x0004)
	int                                                m_skydiveIsNearDisableSkydiveEndEntity;                   // 0x4670(0x0001)
	struct Time                                        m_skydiveStartTime;                                       // 0x4690(0x0004)
	struct Time                                        m_skydiveEndTime;                                         // 0x4694(0x0004)
	struct Time                                        m_skydiveAnticipateStartTime;                             // 0x4698(0x0004)
	struct Time                                        m_skydiveAnticipateEndTime;                               // 0x469C(0x0004)
	float                                              m_skydiveDistanceToLand;                                  // 0x46A0(0x0004)
	int                                                m_skydiveFreelookEnabled;                                 // 0x46B4(0x0001)
	struct Vector                                      m_skydiveFreelookLockedAngle;                             // 0x46B8(0x000C)
	int                                                m_skydiveFollowing;                                       // 0x46CC(0x0001)
	struct Vector                                      m_skydiveUnfollowVelocity;                                // 0x46D0(0x000C)
	struct Vector                                      m_skydiveDisableSkydiveEndEntityHitPosition;              // 0x46E0(0x000C)
	struct Vector                                      m_skydiveDisableSkydiveEndEntityHitNormal;                // 0x46EC(0x000C)
	struct Vector                                      m_skydiveSlipVelocity;                                    // 0x46F8(0x000C)
	int                                                m_skydiveFromUpdraft;                                     // 0x4704(0x0001)
	struct Vector                                      m_skywardDeployStartPos;                                  // 0x4710(0x000C)
	float                                              m_skywardDeployEndTime;                                   // 0x4728(0x0004)
	float                                              m_skywardDeploySpeed;                                     // 0x4730(0x0004)
	float                                              m_skywardOffsetSpeed;                                     // 0x4748(0x0004)
	struct BitMask                                     m_twitchRewardBits;                                       // 0x47F8(0x0008)
	int                                                m_twitchDropsInitialized;                                 // 0x4800(0x0001)
	struct BitMask                                     m_twitchDropsBits;                                        // 0x4808(0x0008)
	struct m_playerKnockBacks                          m_playerKnockBacks;                                       // 0x4818(0x0000)
	int                                                m_updraftCount;                                           // 0x4898(0x0004)
	int                                                m_updraftStage;                                           // 0x489C(0x0004)
	struct Time                                        m_updraftEnterTime;                                       // 0x48A0(0x0004)
	struct Time                                        m_updraftLeaveTime;                                       // 0x48A4(0x0004)
	float                                              m_updraftMinShakeActivationHeight;                        // 0x48A8(0x0004)
	float                                              m_updraftMaxShakeActivationHeight;                        // 0x48AC(0x0004)
	float                                              m_updraftLiftActivationHeight;                            // 0x48B0(0x0004)
	float                                              m_updraftLiftSpeed;                                       // 0x48B4(0x0004)
	float                                              m_updraftLiftAcceleration;                                // 0x48B8(0x0004)
	float                                              m_updraftLiftExitDuration;                                // 0x48BC(0x0004)
	struct Time                                        m_updraftSlowTime;                                        // 0x48C0(0x0004)
	int                                                m_armsModelIndex;                                         // 0x48C4(0x0004)
	int                                                m_deathFieldIndex;                                        // 0x48C8(0x0004)
};

//class RecvTable.DT_PlayerTeamShared
class DT_PlayerTeamShared
{
	int                                                m_healResources_healthTarget;                             // 0x25AC(0x0004)
	struct Time                                        m_lastTimeDamagedByOtherPlayer;                           // 0x3024(0x0004)
	struct Time                                        m_lastTimeDamagedByNPC;                                   // 0x3028(0x0004)
	struct Time                                        m_lastTimeDidDamageToOtherPlayer;                         // 0x302C(0x0004)
	struct Time                                        m_lastTimeDidDamageToNPC;                                 // 0x3030(0x0004)
};

//class RecvTable.DT_PlayerState
class DT_PlayerState
{
	struct BitMask                                     currentClass;                                             // 0x0010(0x0008)
	struct BitMask                                     requestedClass;                                           // 0x0018(0x0008)
	struct BitMask                                     onDeathClass;                                             // 0x0020(0x0008)
	int                                                deadflag;                                                 // 0x006C(0x0001)
};

//class RecvTable.DT_PlayerMelee_PlayerData
class DT_PlayerMelee_PlayerData
{
	int                                                meleeAttackParity;                                        // 0x0008(0x0004)
	int                                                attackActive;                                             // 0x000C(0x0001)
	int                                                attackRecoveryShouldBeQuick;                              // 0x000D(0x0001)
	int                                                isSprintAttack;                                           // 0x000E(0x0001)
	struct Time                                        attackStartTime;                                          // 0x0010(0x0004)
	struct Time                                        attackLastStartTime;                                      // 0x0014(0x0004)
	int                                                attackHitEntity;                                          // 0x0018(0x0004)
	struct Time                                        attackHitEntityTime;                                      // 0x001C(0x0004)
	struct Time                                        attackLastHitNonWorldEntity;                              // 0x0020(0x0004)
	int                                                scriptedState;                                            // 0x0024(0x0004)
	int                                                pendingMeleePress;                                        // 0x0028(0x0001)
	struct Vector                                      lungeBoost;                                               // 0x002C(0x000C)
	int                                                previousMainOffhand;                                      // 0x0038(0x0004)
};

//class RecvTable.DT_ConnectionQualityIndex
class DT_ConnectionQualityIndex
{
	int                                                m_connectionQualityIndex;                                 // 0x25B2(0x0001)
};

//class RecvTable.DT_PortalNonLocalPlayerExclusive
class DT_PortalNonLocalPlayerExclusive
{
	int                                                m_pusher;                                                 // 0x0024(0x0004)
	struct Vector                                      m_originRelativeToPusher;                                 // 0x0028(0x000C)
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct VectorXY                                    m_localOrigin;                                            // 0x0054(0x000C)
	float                                              m_localOrigin.z;                                          // 0x005C(0x0004)
	int                                                m_sliding;                                                // 0x2D25(0x0001)
};

//class RecvTable.DT_Player_ViewOffsetEntityData
class DT_Player_ViewOffsetEntityData
{
	int                                                viewOffsetEntityHandle;                                   // 0x0008(0x0004)
	float                                              lerpInDuration;                                           // 0x000C(0x0004)
	float                                              lerpOutDuration;                                          // 0x0010(0x0004)
	int                                                stabilizePlayerEyeAngles;                                 // 0x0014(0x0001)
};

//class RecvTable.DT_Player_AnimViewEntityData
class DT_Player_AnimViewEntityData
{
	int                                                animViewEntityHandle;                                     // 0x0000(0x0004)
	float                                              animViewEntityAngleLerpInDuration;                        // 0x0004(0x0004)
	float                                              animViewEntityOriginLerpInDuration;                       // 0x0008(0x0004)
	float                                              animViewEntityLerpOutDuration;                            // 0x000C(0x0004)
	int                                                animViewEntityStabilizePlayerEyeAngles;                   // 0x0010(0x0001)
	int                                                animViewEntityThirdPersonCameraParity;                    // 0x0014(0x0004)
	struct animViewEntityThirdPersonCameraAttachment   animViewEntityThirdPersonCameraAttachment;                // 0x0018(0x0000)
	int                                                animViewEntityNumThirdPersonCameraAttachments;            // 0x0020(0x0004)
	int                                                animViewEntityThirdPersonCameraVisibilityChecks;          // 0x0024(0x0001)
	int                                                animViewEntityDrawPlayer;                                 // 0x0025(0x0001)
	float                                              fovTarget;                                                // 0x0028(0x0004)
	float                                              fovSmoothTime;                                            // 0x002C(0x0004)
	int                                                animViewEntityParity;                                     // 0x0038(0x0004)
};

//class RecvTable.DT_CurrentData_Player
class DT_CurrentData_Player
{
	float                                              m_flHullHeight;                                           // 0x0014(0x0004)
	float                                              m_angEyeAngles.x;                                         // 0x0018(0x0004)
	float                                              m_angEyeAngles.y;                                         // 0x001C(0x0004)
	float                                              m_traversalAnimProgress;                                  // 0x0024(0x0004)
	float                                              m_sprintTiltFrac;                                         // 0x0028(0x0004)
	float                                              m_ziprailBankTiltFrac;                                    // 0x002C(0x0004)
	struct m_ammoPoolCount                             m_ammoPoolCount;                                          // 0x0030(0x0000)
};

//class RecvTable.DT_PlayerShared
class DT_PlayerShared
{
	int                                                m_nPlayerCond;                                            // 0x0008(0x0004)
};

//class RecvTable.DT_Player
class DT_Player
{
	struct DT_BaseCombatCharacter                      DT_Player;                                                // 0x0000(0x0000)
	struct DT_LocalPlayerExclusive                     localdata;                                                // 0x0000(0x0000)
	struct DT_PlayerTeamShared                         teamshareddata;                                           // 0x0000(0x0000)
	struct DT_PortalNonLocalPlayerExclusive            portalnonlocaldata;                                       // 0x0000(0x0000)
	struct Array                                       m_passives;                                               // 0x0000(0x0010)
	struct DT_ConnectionQualityIndex                   connectionQualityIndex;                                   // 0x0000(0x0000)
	struct Vector                                      m_vecAbsOrigin;                                           // 0x0004(0x000C)
	int                                                isLocalOriginLocal;                                       // 0x0010(0x0001)
	int                                                m_fFlags;                                                 // 0x0098(0x0004)
	int                                                m_hGroundEntity;                                          // 0x0438(0x0004)
	int                                                m_iHealth;                                                // 0x043C(0x0004)
	float                                              m_flMaxspeed;                                             // 0x0440(0x0004)
	struct Time                                        m_jumpPadDebounceExpireTime;                              // 0x0464(0x0004)
	int                                                m_iMaxHealth;                                             // 0x0578(0x0004)
	int                                                m_lifeState;                                              // 0x0798(0x0001)
	int                                                m_decalIndex;                                             // 0x0E64(0x0004)
	struct m_overlayEventParity                        m_overlayEventParity;                                     // 0x1751(0x0000)
	struct DT_WeaponInventory                          m_inventory;                                              // 0x19B0(0x0000)
	struct m_selectedOffhands                          m_selectedOffhands;                                       // 0x1A26(0x0000)
	struct m_selectedOffhandsPendingHybridAction       m_selectedOffhandsPendingHybridAction;                    // 0x1A29(0x0000)
	int                                                m_titanSoul;                                              // 0x1AA4(0x0004)
	int                                                m_bZooming;                                               // 0x1C51(0x0001)
	struct Time                                        m_zoomToggleOnStartTime;                                  // 0x1C54(0x0004)
	float                                              m_zoomBaseFrac;                                           // 0x1C58(0x0004)
	struct Time                                        m_zoomBaseTime;                                           // 0x1C5C(0x0004)
	struct Time                                        m_zoomFullStartTime;                                      // 0x1C60(0x0004)
	struct DT_CurrentData_Player                       m_currentFramePlayer;                                     // 0x20F8(0x0000)
	struct DT_PlayerState                              pl;                                                       // 0x2520(0x0000)
	int                                                m_ammoPoolCapacity;                                       // 0x25A4(0x0004)
	int                                                m_hasBadReputation;                                       // 0x25A8(0x0001)
	int                                                m_hardware;                                               // 0x25B0(0x0001)
	int                                                m_unspoofedHardware;                                      // 0x25B1(0x0001)
	struct BitMask                                     m_platformUserId;                                         // 0x25B8(0x0008)
	struct BitMask                                     m_unSpoofedPlatformUserId;                                // 0x25C0(0x0008)
	struct BitMask                                     m_EadpUserId;                                             // 0x25C8(0x0008)
	int                                                m_crossPlayChat;                                          // 0x25D0(0x0001)
	int                                                m_crossPlayChatFriends;                                   // 0x25D1(0x0001)
	int                                                m_laserSightColorCustomized;                              // 0x25D2(0x0001)
	struct Vector                                      m_laserSightColor;                                        // 0x25D4(0x000C)
	struct BitMask                                     m_classModsActive;                                        // 0x25E0(0x0008)
	int                                                m_bleedoutState;                                          // 0x2738(0x0004)
	float                                              m_bleedoutStartTime;                                      // 0x273C(0x0004)
	struct m_statusEffectsTimedPlayerNV                m_statusEffectsTimedPlayerNV;                             // 0x2740(0x0000)
	struct m_statusEffectsEndlessPlayerNV              m_statusEffectsEndlessPlayerNV;                           // 0x2830(0x0000)
	struct Time                                        m_damageComboLatestUpdateTime;                            // 0x28E4(0x0004)
	int                                                m_damageComboStartHealth;                                 // 0x28E8(0x0004)
	struct m_gestureSequences                          m_gestureSequences;                                       // 0x28EC(0x0000)
	struct m_gestureStartTimes                         m_gestureStartTimes;                                      // 0x28FC(0x0000)
	struct m_gestureBlendInDuration                    m_gestureBlendInDuration;                                 // 0x291C(0x0000)
	struct m_gestureBlendOutDuration                   m_gestureBlendOutDuration;                                // 0x293C(0x0000)
	struct m_gestureFadeOutStartTime                   m_gestureFadeOutStartTime;                                // 0x295C(0x0000)
	struct m_gestureFadeOutDuration                    m_gestureFadeOutDuration;                                 // 0x297C(0x0000)
	int                                                m_gestureAutoKillBitfield;                                // 0x299C(0x0004)
	int                                                m_autoSprintForced;                                       // 0x29E0(0x0004)
	int                                                m_fIsSprinting;                                           // 0x29E4(0x0001)
	int                                                m_playerSettingForStickySprintForward;                    // 0x29F2(0x0001)
	struct Time                                        m_lastSprintPressTime;                                    // 0x29F4(0x0004)
	struct Time                                        m_stickySprintForwardEnableTime;                          // 0x29F8(0x0004)
	struct Time                                        m_stickySprintForwardDisableTime;                         // 0x29FC(0x0004)
	struct Time                                        m_damageImpulseNoDecelEndTime;                            // 0x2A14(0x0004)
	struct m_playerVehicles                            m_playerVehicles;                                         // 0x2A20(0x0000)
	int                                                m_playerVehicleCount;                                     // 0x2A28(0x0004)
	int                                                m_playerVehicleDriven;                                    // 0x2A2C(0x0004)
	struct Time                                        m_playerVehicleUseTime;                                   // 0x2A30(0x0004)
	int                                                m_duckState;                                              // 0x2A34(0x0004)
	int                                                m_leanState;                                              // 0x2A38(0x0004)
	int                                                m_canStand;                                               // 0x2A3D(0x0001)
	struct Vector                                      m_StandHullMin;                                           // 0x2A40(0x000C)
	struct Vector                                      m_StandHullMax;                                           // 0x2A4C(0x000C)
	struct Vector                                      m_DuckHullMin;                                            // 0x2A58(0x000C)
	struct Vector                                      m_DuckHullMax;                                            // 0x2A64(0x000C)
	int                                                m_entitySyncingWithMe;                                    // 0x2A70(0x0004)
	struct Vector                                      m_upDir;                                                  // 0x2A74(0x000C)
	int                                                m_traversalState;                                         // 0x2AFC(0x0004)
	int                                                m_traversalType;                                          // 0x2B00(0x0004)
	struct Vector                                      m_traversalForwardDir;                                    // 0x2B2C(0x000C)
	struct Vector                                      m_traversalRefPos;                                        // 0x2B38(0x000C)
	float                                              m_traversalYawDelta;                                      // 0x2B64(0x0004)
	int                                                m_traversalYawPoseParameter;                              // 0x2B68(0x0002)
	int                                                m_wallClimbSetUp;                                         // 0x2B80(0x0001)
	int                                                m_wallHanging;                                            // 0x2B81(0x0001)
	struct DT_GrappleData                              m_grapple;                                                // 0x2C80(0x0000)
	int                                                m_grappleActive;                                          // 0x2D10(0x0001)
	int                                                m_turret;                                                 // 0x2D54(0x0004)
	struct m_hViewModels                               m_hViewModels;                                            // 0x2D58(0x0000)
	struct DT_Player_ViewOffsetEntityData              m_viewOffsetEntity;                                       // 0x2D68(0x0000)
	struct DT_Player_AnimViewEntityData                m_animViewEntity;                                         // 0x2DA8(0x0000)
	int                                                m_activeZipline;                                          // 0x2E98(0x0004)
	int                                                m_ziplineValid3pWeaponLayerAnim;                          // 0x2EA4(0x0001)
	int                                                m_ziplineState;                                           // 0x2EA8(0x0004)
	int                                                m_ziplineGrenadeBeginStationEntity;                       // 0x2F44(0x0004)
	int                                                m_ziplineGrenadeBeginStationAttachmentId;                 // 0x2F48(0x0001)
	int                                                m_isPerformingBoostAction;                                // 0x2F85(0x0001)
	int                                                m_lastJumpPadTouched;                                     // 0x3080(0x0004)
	int                                                m_launchCount;                                            // 0x3088(0x0004)
	struct DT_PlayerMelee_PlayerData                   m_melee;                                                  // 0x31B8(0x0000)
	int                                                m_useCredit;                                              // 0x31F8(0x0001)
	int                                                m_playerFlags;                                            // 0x3208(0x0004)
	int                                                m_hasMic;                                                 // 0x3210(0x0001)
	int                                                m_inPartyChat;                                            // 0x3211(0x0001)
	int                                                m_communicationsAutoBlocked;                              // 0x3212(0x0001)
	float                                              m_playerMoveSpeedScale;                                   // 0x3214(0x0004)
	int                                                m_bShouldDrawPlayerWhileUsingViewEntity;                  // 0x3460(0x0001)
	int                                                m_iSpawnParity;                                           // 0x34CC(0x0001)
	struct Time                                        m_flDeathTime;                                            // 0x3578(0x0004)
	struct Time                                        m_lastDodgeTime;                                          // 0x35B8(0x0004)
	struct Time                                        m_timeJetpackHeightActivateCheckPassed;                   // 0x35E0(0x0004)
	int                                                m_grappleHook;                                            // 0x3678(0x0004)
	int                                                m_petTitan;                                               // 0x367C(0x0004)
	int                                                m_xp;                                                     // 0x36A4(0x0004)
	float                                              m_skill_mu;                                               // 0x36AC(0x0004)
	int                                                m_bHasMatchAdminRole;                                     // 0x36B0(0x0001)
	int                                                m_ubEFNoInterpParity;                                     // 0x3FF0(0x0001)
	int                                                m_hColorCorrectionCtrl;                                   // 0x3FF4(0x0004)
	string                                             m_title;                                                  // 0x4018(0x0000)
	struct DT_PlayerShared                             m_Shared;                                                 // 0x4348(0x0000)
	int                                                m_pilotClassIndex;                                        // 0x439C(0x0004)
	int                                                m_pilotClassActivityModifier;                             // 0x43A0(0x0002)
	int                                                m_playerScriptNetDataGlobal;                              // 0x4628(0x0004)
	int                                                m_helmetType;                                             // 0x4630(0x0004)
	int                                                m_armorType;                                              // 0x4634(0x0004)
	int                                                m_controllerModeActive;                                   // 0x463C(0x0001)
	float                                              m_skydiveForwardPoseValueTarget;                          // 0x4658(0x0004)
	float                                              m_skydiveSidePoseValueTarget;                             // 0x4664(0x0004)
	int                                                m_skydiveState;                                           // 0x468C(0x0004)
	float                                              m_skydiveDiveAngle;                                       // 0x46A4(0x0004)
	int                                                m_skydiveIsDiving;                                        // 0x46A8(0x0001)
	float                                              m_skydiveSpeed;                                           // 0x46AC(0x0004)
	float                                              m_skydiveStrafeAngle;                                     // 0x46B0(0x0004)
	float                                              m_skydivePlayerPitch;                                     // 0x46C4(0x0004)
	float                                              m_skydivePlayerYaw;                                       // 0x46C8(0x0004)
	int                                                m_skydiveFromSkywardLaunch;                               // 0x4705(0x0001)
	int                                                m_skywardLaunchState;                                     // 0x4708(0x0004)
	float                                              m_skywardLaunchSlowStartTime;                             // 0x471C(0x0004)
	float                                              m_skywardLaunchSlowEndTime;                               // 0x4720(0x0004)
	float                                              m_skywardLaunchFastEndTime;                               // 0x4724(0x0004)
	float                                              m_skywardLaunchEndTime;                                   // 0x472C(0x0004)
	float                                              m_skywardLaunchSlowSpeed;                                 // 0x4734(0x0004)
	float                                              m_skywardLaunchFastSpeed;                                 // 0x4738(0x0004)
	struct Vector                                      m_skywardOffset;                                          // 0x473C(0x000C)
	int                                                m_skywardLaunchInterrupted;                               // 0x474C(0x0001)
	int                                                m_skywardLaunchFollowing;                                 // 0x474D(0x0001)
	struct Vector                                      m_armoredLeapAirPos;                                      // 0x4754(0x000C)
	struct Vector                                      m_armoredLeapEndPos;                                      // 0x4760(0x000C)
	int                                                m_armoredLeapType;                                        // 0x476C(0x0004)
	int                                                m_armoredLeapPhase;                                       // 0x4770(0x0004)
	struct Time                                        m_armoredLeapStartTime;                                   // 0x4774(0x0004)
	int                                                m_dragReviveState;                                        // 0x47E0(0x0004)
	float                                              m_dragReviveOutroStartTime;                               // 0x47E4(0x0004)
	int                                                m_reviveTarget;                                           // 0x47E8(0x0004)
	int                                                m_duelTarget;                                             // 0x47F0(0x0004)
};

//class RecvTable.DT_BoneFollower
class DT_BoneFollower
{
	int                                                m_cellX;                                                  // 0x0048(0x0004)
	int                                                m_cellY;                                                  // 0x004C(0x0004)
	int                                                m_cellZ;                                                  // 0x0050(0x0004)
	struct Vector                                      m_localOrigin;                                            // 0x0054(0x000C)
	int                                                m_nModelIndex;                                            // 0x0060(0x0004)
	int                                                m_networkedFlags;                                         // 0x03F0(0x0004)
	struct Vector                                      m_localAngles;                                            // 0x0494(0x000C)
	int                                                m_hOwnerEntity;                                           // 0x04A8(0x0004)
	struct DT_CollisionProperty                        m_Collision;                                              // 0x04C0(0x0000)
	int                                                m_CollisionGroup;                                         // 0x0540(0x0004)
	int                                                m_modelIndex;                                             // 0x0A60(0x0004)
	int                                                m_boneIndex;                                              // 0x0A64(0x0002)
};

class ConVars
{
	struct RawConVar                                   studiobonecache_unlimited;                                // 0x1352B10(0x0080)
	struct RawConVar                                   BlendBonesMode;                                           // 0x1352BB0(0x0080)
	struct RawConVar                                   coll_use_bolt_size;                                       // 0x1352C50(0x0080)
	struct RawConVar                                   net_skipUnnecessaryDeltas;                                // 0x1354550(0x0080)
	struct RawConVar                                   dtwatchencode;                                            // 0x1354790(0x0080)
	struct RawConVar                                   server_concommands_allways_network;                       // 0x1354830(0x0080)
	struct RawConVar                                   budget_weaponEntities;                                    // 0x1354940(0x0080)
	struct RawConVar                                   cl_mute_toggle_to_default;                                // 0x13549E0(0x0080)
	struct RawConVar                                   debug_debug_overlay;                                      // 0x1354A80(0x0080)
	struct RawConVar                                   budget_animationOverlayEntities;                          // 0x1354BC0(0x0080)
	struct RawConVar                                   dtwatchvar;                                               // 0x1354C60(0x0080)
	struct RawConVar                                   net_showUndoDeltas;                                       // 0x1354DA0(0x0080)
	struct RawConVar                                   dtwatchclass;                                             // 0x1354E40(0x0080)
	struct RawConVar                                   cl_clock_correction_behind_correct_interval;              // 0x1354EE0(0x0080)
	struct RawConVar                                   brushmodel_colors;                                        // 0x1354F80(0x0080)
	struct RawConVar                                   r_visambient;                                             // 0x1355020(0x0080)
	struct RawConVar                                   dlight_default_falloff;                                   // 0x13550F0(0x0080)
	struct RawConVar                                   buildcubemaps_pvs_start_early;                            // 0x1355190(0x0080)
	struct RawConVar                                   r_drawlight_ztest;                                        // 0x1355420(0x0080)
	struct RawConVar                                   reconnect_timeout;                                        // 0x13554C0(0x0080)
	struct RawConVar                                   r_drawdlights;                                            // 0x1355640(0x0080)
	struct RawConVar                                   sv_compressTimeValEpsilon;                                // 0x1355750(0x0080)
	struct RawConVar                                   net_sendFloatDeltas;                                      // 0x13557F0(0x0080)
	struct RawConVar                                   sv_compressTimeVals;                                      // 0x13558C0(0x0080)
	struct RawConVar                                   mat_colcorrection_editor;                                 // 0x1355970(0x0080)
	struct RawConVar                                   mat_dynamic_tonemapping;                                  // 0x1355A10(0x0080)
	struct RawConVar                                   enable_debug_overlays;                                    // 0x1355AB0(0x0080)
	struct RawConVar                                   sort_opaque_meshes;                                       // 0x1355B50(0x0080)
	struct RawConVar                                   net_printUnnecessaryDeltas;                               // 0x1355BF0(0x0080)
	struct RawConVar                                   net_forceUnnecessaryUndoDeltas;                           // 0x1355E50(0x0080)
	struct RawConVar                                   net_recv_watchField1;                                     // 0x1355EF0(0x0080)
	struct RawConVar                                   mat_colorcorrection;                                      // 0x1356000(0x0080)
	struct RawConVar                                   budget_combatCharEntities;                                // 0x1356110(0x0080)
	struct RawConVar                                   cl_clock_correction_ahead_correct_interval;               // 0x13561B0(0x0080)
	struct RawConVar                                   ui_loadingscreen_fadeout_time;                            // 0x13562F0(0x0080)
	struct RawConVar                                   mat_envmap_capture_res;                                   // 0x1356420(0x0080)
	struct RawConVar                                   usercmd_frametime_min_lobby;                              // 0x13565A0(0x0080)
	struct RawConVar                                   net_recv_dumpNetworkedChangesOnEntCreate;                 // 0x1356640(0x0080)
	struct RawConVar                                   budget_ziplineEntities;                                   // 0x13566E0(0x0080)
	struct RawConVar                                   building_cubemaps;                                        // 0x1356780(0x0080)
	struct RawConVar                                   usercmd_frametime_min;                                    // 0x1356820(0x0080)
	struct RawConVar                                   slowconsolelog_old_logic;                                 // 0x13568C0(0x0080)
	struct RawConVar                                   mat_envmap_output_res;                                    // 0x1356960(0x0080)
	struct RawConVar                                   r_decal_drawclipped;                                      // 0x1356A00(0x0080)
	struct RawConVar                                   cl_clock_correction_force_server_tick;                    // 0x1356AA0(0x0080)
	struct RawConVar                                   net_recv_watchEnt;                                        // 0x1356B40(0x0080)
	struct RawConVar                                   r_drawlight_simple;                                       // 0x1356BE0(0x0080)
	struct RawConVar                                   con_timestamp;                                            // 0x1356C80(0x0080)
	struct RawConVar                                   r_drawlightinfo;                                          // 0x1356D20(0x0080)
	struct RawConVar                                   clock_bias_mp;                                            // 0x1356DC0(0x0080)
	struct RawConVar                                   r_visambient_orig;                                        // 0x1356E60(0x0080)
	struct RawConVar                                   net_createUndoDeltas;                                     // 0x1356F00(0x0080)
	struct RawConVar                                   budget_animatingEntities;                                 // 0x1356FA0(0x0080)
	struct RawConVar                                   debug_map_crc;                                            // 0x1357040(0x0080)
	struct RawConVar                                   dlight_early_clear;                                       // 0x1357150(0x0080)
	struct RawConVar                                   mat_colcorrection_disableentities;                        // 0x1357230(0x0080)
	struct RawConVar                                   net_dumpChangesPrecise;                                   // 0x13572D0(0x0080)
	struct RawConVar                                   clock_showcorrections;                                    // 0x1357370(0x0080)
	struct RawConVar                                   r_visambient_point;                                       // 0x1357410(0x0080)
	struct RawConVar                                   r_drawstaticlight;                                        // 0x13574B0(0x0080)
	struct RawConVar                                   buildcubemaps_index;                                      // 0x1357580(0x0080)
	struct RawConVar                                   r_drawlightdist;                                          // 0x1357620(0x0080)
	struct RawConVar                                   r_decal_cull_stretch_limit;                               // 0x13576C0(0x0080)
	struct RawConVar                                   net_recv_watchField2;                                     // 0x13577D0(0x0080)
	struct RawConVar                                   buildcubemaps_single_step;                                // 0x1357870(0x0080)
	struct RawConVar                                   timeout;                                                  // 0x1357A20(0x0080)
	struct RawConVar                                   usercmd_frametime_max;                                    // 0x1357AC0(0x0080)
	struct RawConVar                                   timeout_during_load;                                      // 0x1357B60(0x0080)
	struct RawConVar                                   clock_showdebuginfo;                                      // 0x1357C00(0x0080)
	struct RawConVar                                   clock_bias_sp;                                            // 0x1357CA0(0x0080)
	struct RawConVar                                   buildcubemaps_async;                                      // 0x1357E40(0x0080)
	struct RawConVar                                   cl_clock_correction;                                      // 0x1357EE0(0x0080)
	struct RawConVar                                   dtwatchent;                                               // 0x1357FF0(0x0080)
	struct RawConVar                                   r_vissun_transitions;                                     // 0x1358090(0x0080)
	struct RawConVar                                   dtwatchdecode;                                            // 0x13581A0(0x0080)
	struct RawConVar                                   net_encrypt_debug;                                        // 0x1358360(0x0080)
	struct RawConVar                                   net_queuedPackets_PrintOversleeps;                        // 0x1358470(0x0080)
	struct RawConVar                                   sv_loadMapModelEarly;                                     // 0x1358510(0x0080)
	struct RawConVar                                   net_tamperPackets;                                        // 0x1358620(0x0080)
	struct RawConVar                                   eadpUM_hostname;                                          // 0x13586C0(0x0080)
	struct RawConVar                                   match_pingWaveInterval;                                   // 0x13587F0(0x0080)
	struct RawConVar                                   net_showudp_oob;                                          // 0x1358890(0x0080)
	struct RawConVar                                   r_dynamic;                                                // 0x1358930(0x0080)
	struct RawConVar                                   net_portTryMax;                                           // 0x13589D0(0x0080)
	struct RawConVar                                   mat_norendering;                                          // 0x1358AE0(0x0080)
	struct RawConVar                                   net_showchokeInterval;                                    // 0x1358B80(0x0080)
	struct RawConVar                                   net_maxAccumulatedClearTimeBalance;                       // 0x1358C20(0x0080)
	struct RawConVar                                   match_emptyUpdateRate;                                    // 0x1358CC0(0x0080)
	struct RawConVar                                   net_showfragments;                                        // 0x1358D60(0x0080)
	struct RawConVar                                   match_fakeS2SPort;                                        // 0x1358E00(0x0080)
	struct RawConVar                                   net_maxroutable;                                          // 0x1358EA0(0x0080)
	struct RawConVar                                   match_partySub;                                           // 0x1358F40(0x0080)
	struct RawConVar                                   host_map;                                                 // 0x1358FE0(0x0080)
	struct RawConVar                                   net_blockmsg;                                             // 0x13590F0(0x0080)
	struct RawConVar                                   match_connect;                                            // 0x1359270(0x0080)
	struct RawConVar                                   net_minConnectionTimeForSpam;                             // 0x1359310(0x0080)
	struct RawConVar                                   rspn_motd;                                                // 0x13593B0(0x0080)
	struct RawConVar                                   net_datablock_debugReceiver;                              // 0x13594B0(0x0080)
	struct RawConVar                                   net_warnAboutSocketReadGaps;                              // 0x1359550(0x0080)
	struct RawConVar                                   mp_allowed;                                               // 0x13595F0(0x0080)
	struct RawConVar                                   match_partySize;                                          // 0x1359770(0x0080)
	struct RawConVar                                   net_timeoutUsesLastReadTime;                              // 0x1359810(0x0080)
	struct RawConVar                                   net_queuedPackets_emptyQueueSleep;                        // 0x1359920(0x0080)
	struct RawConVar                                   match_myTeam;                                             // 0x13599C0(0x0080)
	struct RawConVar                                   net_datablock_fastRate;                                   // 0x1359A60(0x0080)
	struct RawConVar                                   net_maxcleartime;                                         // 0x1359B00(0x0080)
	struct RawConVar                                   eadpGroups_hostname;                                      // 0x1359BA0(0x0080)
	struct RawConVar                                   net_minimumPacketLossDC;                                  // 0x1359C40(0x0080)
	struct RawConVar                                   light_maxcone;                                            // 0x1359CE0(0x0080)
	struct RawConVar                                   net_maxRecvPacket;                                        // 0x1359D80(0x0080)
	struct RawConVar                                   r_aspectratio;                                            // 0x1359E20(0x0080)
	struct RawConVar                                   net_processSocketStats_trigger;                           // 0x1359EC0(0x0080)
	struct RawConVar                                   match_backingOutMaxTimeToWait;                            // 0x1359FD0(0x0080)
	struct RawConVar                                   net_recvBufferSizeOverride;                               // 0x135A070(0x0080)
	struct RawConVar                                   match_rankedSwitchETA;                                    // 0x1369810(0x0080)
	struct RawConVar                                   net_datablock_qos_budgetRollover;                         // 0x1369B90(0x0080)
	struct RawConVar                                   shadow_capable;                                           // 0x1369C30(0x0080)
	struct RawConVar                                   netchan_stats_window_time;                                // 0x1369CD0(0x0080)
	struct RawConVar                                   match_precachemap;                                        // 0x1369D70(0x0080)
	struct RawConVar                                   r_norefresh;                                              // 0x1369E10(0x0080)
	struct RawConVar                                   net_compresspackets_minsize;                              // 0x1369EB0(0x0080)
	struct RawConVar                                   users_hostname;                                           // 0x136A030(0x0080)
	struct RawConVar                                   sv_dumpstringtables;                                      // 0x136A0D0(0x0080)
	struct RawConVar                                   mat_shadowstate;                                          // 0x136A170(0x0080)
	struct RawConVar                                   net_encrypt_copyCtx;                                      // 0x136A210(0x0080)
	struct RawConVar                                   r_drawentities;                                           // 0x136A2B0(0x0080)
	struct RawConVar                                   net_queuedPackets_force;                                  // 0x136A350(0x0080)
	struct RawConVar                                   voice_xsend_debug;                                        // 0x136A3F0(0x0080)
	struct RawConVar                                   net_datablock_resendRateForSlowSpeed;                     // 0x136A490(0x0080)
	struct RawConVar                                   net_showpeaks;                                            // 0x136A530(0x0080)
	struct RawConVar                                   net_showsplits;                                           // 0x136A5D0(0x0080)
	struct RawConVar                                   mat_maxframelatency;                                      // 0x136A670(0x0080)
	struct RawConVar                                   net_trackEnt_bandwidthFrame;                              // 0x136A710(0x0080)
	struct RawConVar                                   voice_inputfromfile;                                      // 0x136A970(0x0080)
	struct RawConVar                                   single_frame_shutdown_for_reload;                         // 0x136AA10(0x0080)
	struct RawConVar                                   match_fakePort;                                           // 0x136AAB0(0x0080)
	struct RawConVar                                   skill_hostname;                                           // 0x136AB50(0x0080)
	struct RawConVar                                   match_defaultMap_party;                                   // 0x136ABF0(0x0080)
	struct RawConVar                                   net_printCompression;                                     // 0x1371E00(0x0080)
	struct RawConVar                                   match_privateMatchListWithStryder;                        // 0x1372430(0x0080)
	struct RawConVar                                   multiplay_serverid;                                       // 0x13724D0(0x0080)
	struct RawConVar                                   net_splitrateDefaultSP;                                   // 0x1372730(0x0080)
	struct RawConVar                                   match_visiblePlaylists;                                   // 0x13727D0(0x0080)
	struct RawConVar                                   net_compressAlgorithmOptim;                               // 0x1372870(0x0080)
	struct RawConVar                                   match_dumpSearchResults;                                  // 0x1373CC0(0x0080)
	struct RawConVar                                   match_trackMMR;                                           // 0x1373DD0(0x0080)
	struct RawConVar                                   net_showsendrecv;                                         // 0x13740C0(0x0080)
	struct RawConVar                                   net_recentNetworkGapWindow;                               // 0x1374200(0x0080)
	struct RawConVar                                   staticfile_hostname;                                      // 0x1374340(0x0080)
	struct RawConVar                                   ping_minSentForChoice;                                    // 0x13743E0(0x0080)
	struct RawConVar                                   match_rankedMaxPing;                                      // 0x1374480(0x0080)
	struct RawConVar                                   net_encrypt_multiKey;                                     // 0x1374520(0x0080)
	struct RawConVar                                   net_showudp;                                              // 0x13745C0(0x0080)
	struct RawConVar                                   mat_surfaceid;                                            // 0x1374660(0x0080)
	struct RawConVar                                   net_showdrop;                                             // 0x1374700(0x0080)
	struct RawConVar                                   match_searchInterval;                                     // 0x13747A0(0x0080)
	struct RawConVar                                   net_compresspackets;                                      // 0x1374840(0x0080)
	struct RawConVar                                   hostname;                                                 // 0x13748E0(0x0080)
	struct RawConVar                                   net_datablock_longSendTime;                               // 0x1374A20(0x0080)
	struct RawConVar                                   net_queuedPackets_printThreshold;                         // 0x1374AC0(0x0080)
	struct RawConVar                                   speechtotexttoken_hostname;                               // 0x1374B60(0x0080)
	struct RawConVar                                   voice_recordtofile;                                       // 0x1374C00(0x0080)
	struct RawConVar                                   match_skipRedundantServerResets;                          // 0x1374CA0(0x0080)
	struct RawConVar                                   match_allowMapRotationPreloading;                         // 0x1374D40(0x0080)
	struct RawConVar                                   clientport;                                               // 0x1374DE0(0x0080)
	struct RawConVar                                   net_datablock_qos_rateMin;                                // 0x1374E80(0x0080)
	struct RawConVar                                   mat_skipid;                                               // 0x1374F20(0x0080)
	struct RawConVar                                   match_precachemapOnMismatch;                              // 0x1374FC0(0x0080)
	struct RawConVar                                   r_cullshadowworldmeshes;                                  // 0x1375060(0x0080)
	struct RawConVar                                   net_queuedPackets_SkipSmallSleeps;                        // 0x1375100(0x0080)
	struct RawConVar                                   net_clearReliableDataOnReset;                             // 0x1375240(0x0080)
	struct RawConVar                                   matchmaking_hostname;                                     // 0x13752E0(0x0080)
	struct RawConVar                                   net_autoUnthrottle;                                       // 0x1375380(0x0080)
	struct RawConVar                                   mat_surfacefilter;                                        // 0x1375420(0x0080)
	struct RawConVar                                   match_jip;                                                // 0x1375600(0x0080)
	struct RawConVar                                   eadpAuth_hostname;                                        // 0x13756A0(0x0080)
	struct RawConVar                                   match_goodReputation;                                     // 0x1375740(0x0080)
	struct RawConVar                                   sv_maxroutable;                                           // 0x13757E0(0x0080)
	struct RawConVar                                   multiplay_ip;                                             // 0x1375A60(0x0080)
	struct RawConVar                                   match_useMatchmaking;                                     // 0x1375B00(0x0080)
	struct RawConVar                                   stats_hostname;                                           // 0x1375BA0(0x0080)
	struct RawConVar                                   net_recentNetworkGapsNeeded;                              // 0x1375CE0(0x0080)
	struct RawConVar                                   net_compressAlgorithm;                                    // 0x1375D80(0x0080)
	struct RawConVar                                   net_showmsg;                                              // 0x1375E20(0x0080)
	struct RawConVar                                   clampHostFrameTimeToOneTick_enable;                       // 0x1375EC0(0x0080)
	struct RawConVar                                   r_decals;                                                 // 0x1375F60(0x0080)
	struct RawConVar                                   ping_qos_units;                                           // 0x1376000(0x0080)
	struct RawConVar                                   eadpSearch_hostname;                                      // 0x13760A0(0x0080)
	struct RawConVar                                   match_maxPingsSent;                                       // 0x1376140(0x0080)
	struct RawConVar                                   net_datablock_networkLossForSlowSpeed;                    // 0x13762C0(0x0080)
	struct RawConVar                                   stringtable_compress;                                     // 0x1376360(0x0080)
	struct RawConVar                                   mat_fullbright;                                           // 0x1376400(0x0080)
	struct RawConVar                                   match_teamNoFill;                                         // 0x13764A0(0x0080)
	struct RawConVar                                   net_recentWindowTime;                                     // 0x1376540(0x0080)
	struct RawConVar                                   eadpFriends_hostname;                                     // 0x13768F0(0x0080)
	struct RawConVar                                   in_forceuser;                                             // 0x1376990(0x0080)
	struct RawConVar                                   net_splitrateDefaultMP;                                   // 0x1376AD0(0x0080)
	struct RawConVar                                   net_async_sendto;                                         // 0x1376B70(0x0080)
	struct RawConVar                                   r_lod;                                                    // 0x1376C10(0x0080)
	struct RawConVar                                   net_sendtoInJob;                                          // 0x1376CB0(0x0080)
	struct RawConVar                                   net_datablock_qos_rateMax;                                // 0x1377050(0x0080)
	struct RawConVar                                   net_trackerWarningInterval;                               // 0x13770F0(0x0080)
	struct RawConVar                                   match_updateNotableRate;                                  // 0x1377210(0x0080)
	struct RawConVar                                   match_partyChangeNum;                                     // 0x13772B0(0x0080)
	struct RawConVar                                   match_updateRate;                                         // 0x1377350(0x0080)
	struct RawConVar                                   match_backoutslow;                                        // 0x1377530(0x0080)
	struct RawConVar                                   net_resourcePrintMinimum;                                 // 0x13775D0(0x0080)
	struct RawConVar                                   match_roleToken;                                          // 0x1377670(0x0080)
	struct RawConVar                                   ip;                                                       // 0x1377710(0x0080)
	struct RawConVar                                   net_maxRecvCall;                                          // 0x13777B0(0x0080)
	struct RawConVar                                   eadpRtm_hostname;                                         // 0x13779D0(0x0080)
	struct RawConVar                                   net_splitrate;                                            // 0x1377A70(0x0080)
	struct RawConVar                                   mat_fastspecular;                                         // 0x1377BB0(0x0080)
	struct RawConVar                                   mat_surfacemat;                                           // 0x1377C50(0x0080)
	struct RawConVar                                   match_myDatacenter;                                       // 0x1377CF0(0x0080)
	struct RawConVar                                   match_myBestDatacenter;                                   // 0x1377D90(0x0080)
	struct RawConVar                                   match_dir;                                                // 0x1377ED0(0x0080)
	struct RawConVar                                   match_myRankedDatacenter;                                 // 0x1377FF0(0x0080)
	struct RawConVar                                   net_verifyEncryption;                                     // 0x1378090(0x0080)
	struct RawConVar                                   shader_lod_world_mesh_scaled_dist;                        // 0x1378130(0x0080)
	struct RawConVar                                   shadow_enable;                                            // 0x13781D0(0x0080)
	struct RawConVar                                   sv_lobbyType;                                             // 0x1378270(0x0080)
	struct RawConVar                                   mp_permission_rerequestInterval;                          // 0x1378310(0x0080)
	struct RawConVar                                   match_verbosePrintsInterval;                              // 0x1378430(0x0080)
	struct RawConVar                                   match_resetPlaylistBetweenMatches;                        // 0x13784D0(0x0080)
	struct RawConVar                                   r_drawworld;                                              // 0x1378570(0x0080)
	struct RawConVar                                   host_hasIrreversibleShutdown;                             // 0x1378660(0x0080)
	struct RawConVar                                   net_forcetimeout;                                         // 0x1378700(0x0080)
	struct RawConVar                                   eadpCodeRedemption_hostname;                              // 0x13787A0(0x0080)
	struct RawConVar                                   net_warnGapTime;                                          // 0x1378840(0x0080)
	struct RawConVar                                   r_lightprobe_force_trans_dist;                            // 0x13788E0(0x0080)
	struct RawConVar                                   match_playlist;                                           // 0x1378980(0x0080)
	struct RawConVar                                   match_enabled;                                            // 0x1378A20(0x0080)
	struct RawConVar                                   net_datablock_slowRate;                                   // 0x1378AC0(0x0080)
	struct RawConVar                                   vgui_simulate_during_bone_setup;                          // 0x1378B60(0x0080)
	struct RawConVar                                   mp_accountLink_requestInterval;                           // 0x1378C80(0x0080)
	struct RawConVar                                   r_lightmap;                                               // 0x1378D20(0x0080)
	struct RawConVar                                   match_searching;                                          // 0x1378DC0(0x0080)
	struct RawConVar                                   sv_writePersistenceOnShutdown;                            // 0x1378E60(0x0080)
	struct RawConVar                                   r_lightstyle;                                             // 0x1378F00(0x0080)
	struct RawConVar                                   net_queuedPackets_debug;                                  // 0x1378FA0(0x0080)
	struct RawConVar                                   net_datablock_minResendInterval;                          // 0x1379150(0x0080)
	struct RawConVar                                   net_usesocketsforloopback;                                // 0x13791F0(0x0080)
	struct RawConVar                                   r_rootlod;                                                // 0x1379290(0x0080)
	struct RawConVar                                   persistence_hostname;                                     // 0x1379330(0x0080)
	struct RawConVar                                   net_bindToSpecificAddress;                                // 0x13793D0(0x0080)
	struct RawConVar                                   net_wifi;                                                 // 0x1379470(0x0080)
	struct RawConVar                                   net_datablock_printSummaries;                             // 0x1379620(0x0080)
	struct RawConVar                                   customMatchPub_hostname;                                  // 0x1379760(0x0080)
	struct RawConVar                                   mp_permission_requestInterval;                            // 0x1379800(0x0080)
	struct RawConVar                                   ping_usePacketLoss;                                       // 0x13798A0(0x0080)
	struct RawConVar                                   serverFilter;                                             // 0x1379A50(0x0080)
	struct RawConVar                                   match_forceVerboseSearches;                               // 0x1379AF0(0x0080)
	struct RawConVar                                   net_showFailedAuth;                                       // 0x1379B90(0x0080)
	struct RawConVar                                   r_drawbrushmodels;                                        // 0x1379CD0(0x0080)
	struct RawConVar                                   net_datablock_dumpBlocks;                                 // 0x1379D70(0x0080)
	struct RawConVar                                   cl_loadStaticPropsInJob;                                  // 0x1379E10(0x0080)
	struct RawConVar                                   net_showchoke;                                            // 0x1379EB0(0x0080)
	struct RawConVar                                   net_chokeloop;                                            // 0x1379F50(0x0080)
	struct RawConVar                                   persistenceDef_hostname;                                  // 0x137A090(0x0080)
	struct RawConVar                                   stringtable_alwaysrebuilddictionaries;                    // 0x137A130(0x0080)
	struct RawConVar                                   net_datablock_debugSender;                                // 0x137A310(0x0080)
	struct RawConVar                                   net_datablock_qos_enabled;                                // 0x137A450(0x0080)
	struct RawConVar                                   net_compressDataBlock;                                    // 0x137A530(0x0080)
	struct RawConVar                                   net_showudp_remoteonly;                                   // 0x137A670(0x0080)
	struct RawConVar                                   net_bandwidthPrintThreshold;                              // 0x137A710(0x0080)
	struct RawConVar                                   sv_watchdogTimer;                                         // 0x137A7B0(0x0080)
	struct RawConVar                                   cl_loadPostProcessShadersEarly;                           // 0x137A850(0x0080)
	struct RawConVar                                   joy_requireFocus;                                         // 0x137A8F0(0x0080)
	struct RawConVar                                   send_pin_on_error;                                        // 0x137A990(0x0080)
	struct RawConVar                                   r_lod_shift;                                              // 0x137AAD0(0x0080)
	struct RawConVar                                   sp_not_focus_pause;                                       // 0x137AB70(0x0080)
	struct RawConVar                                   gameui_xbox;                                              // 0x137AC10(0x0080)
	struct RawConVar                                   playlist_debug_getvar;                                    // 0x137ACB0(0x0080)
	struct RawConVar                                   pin_telemetry_debug_payload;                              // 0x137AD50(0x0080)
	struct RawConVar                                   pin_telemetry_actually_send;                              // 0x137AFA0(0x0080)
	struct RawConVar                                   pin_telemetry_dont_send_events;                           // 0x137B0E0(0x0080)
	struct RawConVar                                   pertrianglecollision;                                     // 0x137B180(0x0080)
	struct RawConVar                                   staticProp_earlyDepthPrepass;                             // 0x137B2A0(0x0080)
	struct RawConVar                                   rui_standardTextHeight;                                   // 0x1381140(0x0080)
	struct RawConVar                                   sleep_when_meeting_framerate;                             // 0x13811E0(0x0080)
	struct RawConVar                                   vgui_drawfocus;                                           // 0x1381280(0x0080)
	struct RawConVar                                   voice_debugfeedback;                                      // 0x1381320(0x0080)
	struct RawConVar                                   staticProp_budget;                                        // 0x1381420(0x0080)
	struct RawConVar                                   staticProp_max_scaled_dist;                               // 0x13814C0(0x0080)
	struct RawConVar                                   not_focus_sleep;                                          // 0x1381560(0x0080)
	struct RawConVar                                   model_defaultFadeDistScale;                               // 0x1381660(0x0080)
	struct RawConVar                                   r_vismodellighting_offset_y;                              // 0x13817A0(0x0080)
	struct RawConVar                                   cl_showsounds;                                            // 0x1381840(0x0080)
	struct RawConVar                                   r_decal_draw_basis;                                       // 0x1381980(0x0080)
	struct RawConVar                                   cl_serverQuery_version;                                   // 0x1381A20(0x0080)
	struct RawConVar                                   mat_drawMenuGrid;                                         // 0x1381AC0(0x0080)
	struct RawConVar                                   shader_lods_enable;                                       // 0x1381B60(0x0080)
	struct RawConVar                                   static_prop_dist_debug_draw;                              // 0x1381C00(0x0080)
	struct RawConVar                                   r_decal_test_scale;                                       // 0x1381CA0(0x0080)
	struct RawConVar                                   depth_prepass_dist_cutouts;                               // 0x1381D40(0x0080)
	struct RawConVar                                   pin_telemetry_inactivity_send_time;                       // 0x1381DE0(0x0080)
	struct RawConVar                                   async_serialize;                                          // 0x1381E80(0x0080)
	struct RawConVar                                   staticPropSkipEarlyDepthOnlyTranslucent;                  // 0x1381F20(0x0080)
	struct RawConVar                                   cl_serverQueryResponse_dumpBin;                           // 0x1381FC0(0x0080)
	struct RawConVar                                   pin_telemetry_throttling_warnings;                        // 0x1382060(0x0080)
	struct RawConVar                                   r_drawvgui;                                               // 0x1382100(0x0080)
	struct RawConVar                                   pin_telemetry_max_payload_size;                           // 0x13821A0(0x0080)
	struct RawConVar                                   old_gather_props;                                         // 0x1382260(0x0080)
	struct RawConVar                                   playlist_debug_localization;                              // 0x13823A0(0x0080)
	struct RawConVar                                   pin_telemetry_hostname;                                   // 0x1382440(0x0080)
	struct RawConVar                                   cl_failremoteconnections;                                 // 0x1382580(0x0080)
	struct RawConVar                                   skill_dediOnly;                                           // 0x1382620(0x0080)
	struct RawConVar                                   depth_prepass_include_opaques;                            // 0x13826C0(0x0080)
	struct RawConVar                                   playlistquery_enabled;                                    // 0x1382760(0x0080)
	struct RawConVar                                   staticPropUseDepthEarlySortBulkGrab;                      // 0x1382800(0x0080)
	struct RawConVar                                   shader_lods_static_prop_scaled_dist;                      // 0x13828A0(0x0080)
	struct RawConVar                                   replay_prediction_smooth;                                 // 0x13829C0(0x0080)
	struct RawConVar                                   nucleus_id;                                               // 0x1382A60(0x0080)
	struct RawConVar                                   startButtonCommand;                                       // 0x1382B00(0x0080)
	struct RawConVar                                   skill_arena;                                              // 0x1382BC0(0x0080)
	struct RawConVar                                   staticProp_debug_draw;                                    // 0x1382C60(0x0080)
	struct RawConVar                                   r_vismodellighting_offset_z;                              // 0x1382D00(0x0080)
	struct RawConVar                                   playlist_debug;                                           // 0x1382DA0(0x0080)
	struct RawConVar                                   fps_max_use_refresh;                                      // 0x1382E40(0x0080)
	struct RawConVar                                   r_brush_queue_mode;                                       // 0x1382EE0(0x0080)
	struct RawConVar                                   system_alt_f4_closes_window;                              // 0x1383020(0x0080)
	struct RawConVar                                   r_vismodellighting_offset_x;                              // 0x13830C0(0x0080)
	struct RawConVar                                   r_lod;                                                    // 0x1383160(0x0080)
	struct RawConVar                                   nucleus_persona_id;                                       // 0x1383200(0x0080)
	struct RawConVar                                   playlist_dump;                                            // 0x13832A0(0x0080)
	struct RawConVar                                   vgui_drawkeyfocus;                                        // 0x13833E0(0x0080)
	struct RawConVar                                   staticPropUseDepthSortBulkGrab;                           // 0x13834A0(0x0080)
	struct RawConVar                                   pin_telemetry_debug_http_requests;                        // 0x1383540(0x0080)
	struct RawConVar                                   fps_max_vsync;                                            // 0x1383680(0x0080)
	struct RawConVar                                   pin_telemetry_send_debug;                                 // 0x1383720(0x0080)
	struct RawConVar                                   r_drawdecals;                                             // 0x13837C0(0x0080)
	struct RawConVar                                   cl_loadBspFromServerInfo;                                 // 0x1383860(0x0080)
	struct RawConVar                                   r_decal_overlap_count;                                    // 0x1383900(0x0080)
	struct RawConVar                                   r_createmodeldecals;                                      // 0x13839A0(0x0080)
	struct RawConVar                                   in_syncRT;                                                // 0x1383A40(0x0080)
	struct RawConVar                                   skill_enabled;                                            // 0x1383AE0(0x0080)
	struct RawConVar                                   depth_prepass_dist_opaques;                               // 0x1383B80(0x0080)
	struct RawConVar                                   enable_KVFileOverrides;                                   // 0x1383CC0(0x0080)
	struct RawConVar                                   playlist_allowGameDediToPatch;                            // 0x1383D60(0x0080)
	struct RawConVar                                   playlist_changeGamemodeAutomatically;                     // 0x1383E00(0x0080)
	struct RawConVar                                   old_culling;                                              // 0x1383EA0(0x0080)
	struct RawConVar                                   staticProp_gather_size_weight;                            // 0x1383F40(0x0080)
	struct RawConVar                                   r_decal_cover_count;                                      // 0x1383FE0(0x0080)
	struct RawConVar                                   r_vismodellighting_lightpos;                              // 0x1384120(0x0080)
	struct RawConVar                                   cl_serverQueryResponse_print;                             // 0x13841C0(0x0080)
	struct RawConVar                                   pin_opt_in;                                               // 0x1384260(0x0080)
	struct RawConVar                                   sleep_when_meeting_framerate_headroom_ms;                 // 0x1384300(0x0080)
	struct RawConVar                                   playlist_mapRotationIgnoreFakeTime;                       // 0x13843A0(0x0080)
	struct RawConVar                                   fps_max;                                                  // 0x1384440(0x0080)
	struct RawConVar                                   fps_absolute_max;                                         // 0x13844E0(0x0080)
	struct RawConVar                                   mat_drawTitleSafe;                                        // 0x1384580(0x0080)
	struct RawConVar                                   pin_sid;                                                  // 0x1384620(0x0080)
	struct RawConVar                                   r_decal_overlap_area;                                     // 0x13846C0(0x0080)
	struct RawConVar                                   ignore_fatal_errors;                                      // 0x1384760(0x0080)
	struct RawConVar                                   staticProp_no_fade_scalar;                                // 0x1384800(0x0080)
	struct RawConVar                                   playlist_debug_validateQueryVersusKV;                     // 0x13848A0(0x0080)
	struct RawConVar                                   pin_telemetry_debug_code;                                 // 0x1384940(0x0080)
	struct RawConVar                                   playlist_debug_varByName;                                 // 0x1384AD0(0x0080)
	struct RawConVar                                   pin_telemetry_throttling_enabled;                         // 0x1384B70(0x0080)
	struct RawConVar                                   cl_isUnderAge;                                            // 0x1384C90(0x0080)
	struct RawConVar                                   model_defaultFadeDistMin;                                 // 0x1384D30(0x0080)
	struct RawConVar                                   perTriangleCollisionForced;                               // 0x1384DD0(0x0080)
	struct RawConVar                                   replay_enable;                                            // 0x1385040(0x0080)
	struct RawConVar                                   voice_turn_off_new_filters;                               // 0x13850E0(0x0080)
	struct RawConVar                                   use_valve_auto_gain;                                      // 0x1385180(0x0080)
	struct RawConVar                                   StreamMicDisabled;                                        // 0x1385220(0x0080)
	struct RawConVar                                   voice_input_device;                                       // 0x13852C0(0x0080)
	struct RawConVar                                   voice_writevoices;                                        // 0x1385360(0x0080)
	struct RawConVar                                   speex_audio_value;                                        // 0x1385400(0x0080)
	struct RawConVar                                   voice_showincoming;                                       // 0x13854A0(0x0080)
	struct RawConVar                                   voice_threshold_delay;                                    // 0x1385540(0x0080)
	struct RawConVar                                   speex_quiet_threshold;                                    // 0x13855E0(0x0080)
	struct RawConVar                                   voice_avggain;                                            // 0x1385680(0x0080)
	struct RawConVar                                   speex_quiet_window;                                       // 0x1385720(0x0080)
	struct RawConVar                                   voice_scale;                                              // 0x13857C0(0x0080)
	struct RawConVar                                   voice_zeroCrossingThreshold;                              // 0x1385860(0x0080)
	struct RawConVar                                   VoiceNeedsReset;                                          // 0x1385900(0x0080)
	struct RawConVar                                   voice_triggerRate;                                        // 0x13859A0(0x0080)
	struct RawConVar                                   voice_debugAddSecondTalker;                               // 0x1385A40(0x0080)
	struct RawConVar                                   TalkIsStream;                                             // 0x1385AE0(0x0080)
	struct RawConVar                                   voice_energyPerZeroThreshold;                             // 0x1385B80(0x0080)
	struct RawConVar                                   chatroom_console_ptt;                                     // 0x1385C20(0x0080)
	struct RawConVar                                   voice_minEnergyPerZeroThreshold;                          // 0x1385CC0(0x0080)
	struct RawConVar                                   voice_showchannels;                                       // 0x1385E00(0x0080)
	struct RawConVar                                   voice_enabled;                                            // 0x1385EA0(0x0080)
	struct RawConVar                                   voice_forcemicrecord;                                     // 0x1385F40(0x0080)
	struct RawConVar                                   voice_energyThreshold;                                    // 0x1385FE0(0x0080)
	struct RawConVar                                   voice_debugThresholds;                                    // 0x1386080(0x0080)
	struct RawConVar                                   speex_audio_recording;                                    // 0x1386120(0x0080)
	struct RawConVar                                   voice_triggerCrossingRate;                                // 0x13861C0(0x0080)
	struct RawConVar                                   voice_loopback;                                           // 0x1386260(0x0080)
	struct RawConVar                                   voice_profile;                                            // 0x1386380(0x0080)
	struct RawConVar                                   speechtotext_audioenabled;                                // 0x1386420(0x0080)
	struct RawConVar                                   voice_maxgain;                                            // 0x13864C0(0x0080)
	struct RawConVar                                   voice_absTriggerAmount;                                   // 0x1386560(0x0080)
	struct RawConVar                                   voice_vox;                                                // 0x1386600(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_min_gain;                           // 0x13866A0(0x0080)
	struct RawConVar                                   cl_voicein_normalize_attenuate_on_clip;                   // 0x1386740(0x0080)
	struct RawConVar                                   cl_voicein_normalize_db_decrease_per_sec;                 // 0x13867E0(0x0080)
	struct RawConVar                                   cl_voicein_normalize_attack;                              // 0x1386880(0x0080)
	struct RawConVar                                   cl_voice_lvl_samples_per_block;                           // 0x1386920(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_max_boost;                          // 0x13869C0(0x0080)
	struct RawConVar                                   cl_voicein_normalize;                                     // 0x1386A60(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_attenuate_on_clip;                  // 0x1386B00(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_db_increase_per_sec;                // 0x1386BA0(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_attack;                             // 0x1386C40(0x0080)
	struct RawConVar                                   cl_voiceout_normalize;                                    // 0x1386CE0(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_target;                             // 0x1386D80(0x0080)
	struct RawConVar                                   cl_voicein_normalize_max_boost;                           // 0x1386E20(0x0080)
	struct RawConVar                                   cl_voicein_normalize_min_gain;                            // 0x1386EC0(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_rms_tweak;                          // 0x1386F60(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_db_decrease_per_sec;                // 0x1387000(0x0080)
	struct RawConVar                                   cl_voicein_normalize_rms_tweak;                           // 0x13870A0(0x0080)
	struct RawConVar                                   cl_voicein_normalize_target;                              // 0x1387140(0x0080)
	struct RawConVar                                   cl_voicein_normalize_db_increase_per_sec;                 // 0x13871E0(0x0080)
	struct RawConVar                                   cl_voicein_normalize_release;                             // 0x1387280(0x0080)
	struct RawConVar                                   cl_voice_lvl_blocks;                                      // 0x1387320(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_release;                            // 0x13873C0(0x0080)
	struct RawConVar                                   cl_voicein_normalize_min_boost;                           // 0x1387460(0x0080)
	struct RawConVar                                   cl_voiceout_normalize_min_boost;                          // 0x1387500(0x0080)
	struct RawConVar                                   voice_mixer_boost;                                        // 0x13875A0(0x0080)
	struct RawConVar                                   voice_mixer_mute;                                         // 0x1387640(0x0080)
	struct RawConVar                                   voice_mixer_volume;                                       // 0x13876E0(0x0080)
	struct RawConVar                                   miles_server_sounds_debug;                                // 0x1387780(0x0080)
	struct RawConVar                                   miles_server_sounds_print;                                // 0x1387820(0x0080)
	struct RawConVar                                   VoiceDataFromCommunityOnlyInLobby;                        // 0x13878C0(0x0080)
	struct RawConVar                                   customMatch_channel;                                      // 0x13879A0(0x0080)
	struct RawConVar                                   customMatch_hasMultiplePlayers;                           // 0x1387AE0(0x0080)
	struct RawConVar                                   customMatch_forceHiddenPlaylistAccess;                    // 0x1387D00(0x0080)
	struct RawConVar                                   customMatch_enabled;                                      // 0x1387DE0(0x0080)
	struct RawConVar                                   customMatch_startMatchmakingDelay;                        // 0x1387EE0(0x0080)
	struct RawConVar                                   customMatch_playerToken;                                  // 0x1387F80(0x0080)
	struct RawConVar                                   customMatchChannel_hostname;                              // 0x1388040(0x0080)
	struct RawConVar                                   customMatch_forceSpecialAccess;                           // 0x13881D0(0x0080)
	struct RawConVar                                   customMatch_public_enabled;                               // 0x1388420(0x0080)
	struct RawConVar                                   mtx_giftingLimit;                                         // 0x1388520(0x0080)
	struct RawConVar                                   mtx_giftingMinFriendshipInDays;                           // 0x13885C0(0x0080)
	struct RawConVar                                   mtx_giftingForce2FA;                                      // 0x1388660(0x0080)
	struct RawConVar                                   mtx_svEdition;                                            // 0x1388700(0x0080)
	struct RawConVar                                   mtx_giftingMinAccountLevel;                               // 0x13887A0(0x0080)
	struct RawConVar                                   mtx_giftingEnabled;                                       // 0x1388840(0x0080)
	struct RawConVar                                   grx_hasUnknownItems;                                      // 0x13889B0(0x0080)
	struct RawConVar                                   bink_materials_enabled;                                   // 0x1388AC0(0x0080)
	struct RawConVar                                   chroma_enable;                                            // 0x1388BE0(0x0080)
	struct RawConVar                                   cl_doRecreateEnts;                                        // 0x1388DC0(0x0080)
	struct RawConVar                                   cl_disconnectOnTooManySnapshotFrames;                     // 0x1388E60(0x0080)
	struct RawConVar                                   net_showServerStruggle;                                   // 0x1388F00(0x0080)
	struct RawConVar                                   net_debugLerping;                                         // 0x1388FA0(0x0080)
	struct RawConVar                                   cl_flushentitypacket;                                     // 0x1389040(0x0080)
	struct RawConVar                                   cl_postSnapshotTransitionBlockCount;                      // 0x13890E0(0x0080)
	struct RawConVar                                   net_lerpFields;                                           // 0x1389180(0x0080)
	struct RawConVar                                   net_recv_dumpNetworkedChangesOnNoDelta;                   // 0x1389220(0x0080)
	struct RawConVar                                   cl_entCreateDeleteDebug;                                  // 0x13892C0(0x0080)
	struct RawConVar                                   net_pretendSnapshotArrayFull;                             // 0x1389360(0x0080)
	struct RawConVar                                   recalculateOrigin_threaded_chunksize;                     // 0x1389400(0x0080)
	struct RawConVar                                   net_recv_dumpChanges;                                     // 0x13894A0(0x0080)
	struct RawConVar                                   net_ignoreAllSnapshots;                                   // 0x14495F0(0x0080)
	struct RawConVar                                   twitch_check_interval;                                    // 0x1449690(0x0080)
	struct RawConVar                                   net_highPacketLossThreshold;                              // 0x14498F0(0x0080)
	struct RawConVar                                   cl_noTimeoutLocalHost;                                    // 0x1449990(0x0080)
	struct RawConVar                                   twitch_shouldQuery;                                       // 0x1449B40(0x0080)
	struct RawConVar                                   dlight_overlay;                                           // 0x1449BE0(0x0080)
	struct RawConVar                                   net_showUserWarnings;                                     // 0x1449C80(0x0080)
	struct RawConVar                                   cl_checkForFrametimeHitch;                                // 0x1449DA0(0x0080)
	struct RawConVar                                   jpeg_quality;                                             // 0x1449E40(0x0080)
	struct RawConVar                                   usercmd_byte_threshold;                                   // 0x1449EE0(0x0080)
	struct RawConVar                                   cl_checkForFrametimeHitch_thresh;                         // 0x144A020(0x0080)
	struct RawConVar                                   cl_retire_low_priority_lights;                            // 0x144A380(0x0080)
	struct RawConVar                                   net_netGraph2;                                            // 0x144A560(0x0080)
	struct RawConVar                                   twitch_drops_simulate_failure;                            // 0x144A6A0(0x0080)
	struct RawConVar                                   cl_cmdbackup;                                             // 0x144A7C0(0x0080)
	struct RawConVar                                   cl_screenshotname;                                        // 0x144A900(0x0080)
	struct RawConVar                                   twitch_prime_rewards;                                     // 0x144AA40(0x0080)
	struct RawConVar                                   host_syncfps;                                             // 0x144AAE0(0x0080)
	struct RawConVar                                   net_highPacketLatencyThreshold;                           // 0x144AC00(0x0080)
	struct RawConVar                                   cl_ignorepackets;                                         // 0x144AD20(0x0080)
	struct RawConVar                                   twitch_drops;                                             // 0x144AE30(0x0080)
	struct RawConVar                                   cl_is_softened_locale;                                    // 0x144AF70(0x0080)
	struct RawConVar                                   dlight_enable;                                            // 0x144B100(0x0080)
	struct RawConVar                                   cl_predict;                                               // 0x144B210(0x0080)
	struct RawConVar                                   twitch_drops_initialized;                                 // 0x144B2B0(0x0080)
	struct RawConVar                                   cl_playback_screenshots;                                  // 0x144B4D0(0x0080)
	struct RawConVar                                   cl_cmdFrametimes_print;                                   // 0x144B5E0(0x0080)
	struct RawConVar                                   sound_printloaderrors;                                    // 0x144B790(0x0080)
	struct RawConVar                                   locationInfo_nucleus;                                     // 0x144B920(0x0080)
	struct RawConVar                                   locationInfo;                                             // 0x144B9C0(0x0080)
	struct RawConVar                                   cl_language;                                              // 0x144BAC0(0x0080)
	struct RawConVar                                   cl_updaterate_mp;                                         // 0x144BB60(0x0080)
	struct RawConVar                                   cl_useFutureSnapForEvents;                                // 0x144BC00(0x0080)
	struct RawConVar                                   cl_overrideEventTimes;                                    // 0x144BCA0(0x0080)
	struct RawConVar                                   deltaBuf_dump_includeFields;                              // 0x1490820(0x0080)
	struct RawConVar                                   deltaBuf_fullUpdateOnOverflow;                            // 0x14908C0(0x0080)
	struct RawConVar                                   deltaBuf_forceOverflow;                                   // 0x1490960(0x0080)
	struct RawConVar                                   deltaBuf_restrictSizePercent;                             // 0x1490A00(0x0080)
	struct RawConVar                                   entity_useNetworkFieldBuffer;                             // 0x1490AA0(0x0080)
	struct RawConVar                                   cl_keepPersistentDataOnDisconnect;                        // 0x1490BC0(0x0080)
	struct RawConVar                                   net_worldHitchSlopTime;                                   // 0x1490C60(0x0080)
	struct RawConVar                                   net_recreateScriptInstanceOnReplayTransition;             // 0x1490D00(0x0080)
	struct RawConVar                                   cl_interpolate;                                           // 0x1490DA0(0x0080)
	struct RawConVar                                   net_threadedEntityDeltas;                                 // 0x1490E40(0x0080)
	struct RawConVar                                   cl_forceAdjustTime;                                       // 0x1490EE0(0x0080)
	struct RawConVar                                   net_predictionDebug;                                      // 0x1490F80(0x0080)
	struct RawConVar                                   cl_ranked_reconnect_timeout;                              // 0x1491020(0x0080)
	struct RawConVar                                   net_dataRateCL;                                           // 0x1491130(0x0080)
	struct RawConVar                                   net_largeSnapshotThreshold;                               // 0x14911D0(0x0080)
	struct RawConVar                                   hasPartialInstall;                                        // 0x1491270(0x0080)
	struct RawConVar                                   hasAnyAssetsWithDiscardedStreamableData;                  // 0x1491310(0x0080)
	struct RawConVar                                   skipIntroVideos;                                          // 0x14913B0(0x0080)
	struct RawConVar                                   net_connectPacketWarningThreshhold;                       // 0x1491450(0x0080)
	struct RawConVar                                   net_showLargeSnapshot;                                    // 0x14914F0(0x0080)
	struct RawConVar                                   demo_autoRecordName;                                      // 0x1491590(0x0080)
	struct RawConVar                                   cl_useLobbyTypeForChatroom;                               // 0x1491630(0x0080)
	struct RawConVar                                   net_predictedEntsUseFirstAvailableSnapshot;               // 0x14916D0(0x0080)
	struct RawConVar                                   cl_resend;                                                // 0x1491770(0x0080)
	struct RawConVar                                   net_printOutOfSnapshots;                                  // 0x1491810(0x0080)
	struct RawConVar                                   mp_countRRNobodyAsLobby;                                  // 0x14918B0(0x0080)
	struct RawConVar                                   demo_autoRecord;                                          // 0x1491950(0x0080)
	struct RawConVar                                   cl_replayDelayTolerance;                                  // 0x1491A60(0x0080)
	struct RawConVar                                   net_transmission_events_enabled;                          // 0x1491B00(0x0080)
	struct RawConVar                                   persistent_warningRate;                                   // 0x1491BA0(0x0080)
	struct RawConVar                                   cl_resend_timeout;                                        // 0x1491CB0(0x0080)
	struct RawConVar                                   hasMic;                                                   // 0x1491DD0(0x0080)
	struct RawConVar                                   cl_matchmaking_timeout;                                   // 0x1491E70(0x0080)
	struct RawConVar                                   inPartyChat;                                              // 0x1491F10(0x0080)
	struct RawConVar                                   autoConnect;                                              // 0x1491FB0(0x0080)
	struct RawConVar                                   net_deltaFieldEntityBlockSize;                            // 0x1492050(0x0080)
	struct RawConVar                                   cl_adjustTimeEntsPerJob;                                  // 0x14920F0(0x0080)
	struct RawConVar                                   net_noPostDataForDeletedEnts;                             // 0x1492190(0x0080)
	struct RawConVar                                   net_threadedProcessPacket;                                // 0x1492230(0x0080)
	struct RawConVar                                   cl_ipgeo_country;                                         // 0x14922D0(0x0080)
	struct RawConVar                                   pin_plat_id;                                              // 0x1492370(0x0080)
	struct RawConVar                                   name;                                                     // 0x1492410(0x0080)
	struct RawConVar                                   platform_user_id;                                         // 0x14924B0(0x0080)
	struct RawConVar                                   comms_dedivoice;                                          // 0x1492550(0x0080)
	struct RawConVar                                   comms_udp_minactivity;                                    // 0x14925F0(0x0080)
	struct RawConVar                                   comms_reconnect;                                          // 0x1492690(0x0080)
	struct RawConVar                                   comms_udpestablish_early;                                 // 0x1492730(0x0080)
	struct RawConVar                                   comms_udp_keepalive;                                      // 0x14927D0(0x0080)
	struct RawConVar                                   comms_udpestablish;                                       // 0x14928F0(0x0080)
	struct RawConVar                                   comms_connect_delay;                                      // 0x1492A90(0x0080)
	struct RawConVar                                   comms_keepalive;                                          // 0x1492B30(0x0080)
	struct RawConVar                                   comms_deditext;                                           // 0x1492BD0(0x0080)
	struct RawConVar                                   comms_newchatserver;                                      // 0x1492C70(0x0080)
	struct RawConVar                                   comms_lobbytext;                                          // 0x1492D10(0x0080)
	struct RawConVar                                   discord_smallImage;                                       // 0x1492DB0(0x0080)
	struct RawConVar                                   discord_largeImage;                                       // 0x1492E50(0x0080)
	struct RawConVar                                   discord_updatePresence;                                   // 0x1492EF0(0x0080)
	struct RawConVar                                   mat_colcorrection_disableentities;                        // 0x1492F90(0x0080)
	struct RawConVar                                   mat_hdrcolcorrection_editor;                              // 0x1493030(0x0080)
	struct RawConVar                                   tencent_restricted;                                       // 0x14930D0(0x0080)
	struct RawConVar                                   cl_liveapi_dir;                                           // 0x1493170(0x0080)
	struct RawConVar                                   cl_liveapi_enabled;                                       // 0x1493210(0x0080)
	struct RawConVar                                   cl_liveapi_ws_timeout;                                    // 0x14932B0(0x0080)
	struct RawConVar                                   cl_liveapi_config_file;                                   // 0x14933F0(0x0080)
	struct RawConVar                                   cl_liveapi_ws_keepalive;                                  // 0x1493490(0x0080)
	struct RawConVar                                   cl_liveapi_use_protobuf;                                  // 0x1493530(0x0080)
	struct RawConVar                                   cl_liveapi_ws_servers;                                    // 0x14935D0(0x0080)
	struct RawConVar                                   cl_liveapi_allow_requests;                                // 0x1493670(0x0080)
	struct RawConVar                                   cl_liveapi_pretty_print_log;                              // 0x1493710(0x0080)
	struct RawConVar                                   cl_liveapi_use_websocket;                                 // 0x14937B0(0x0080)
	struct RawConVar                                   cl_liveapi_ws_retry_time;                                 // 0x1493850(0x0080)
	struct RawConVar                                   cl_liveapi_ws_retry_count;                                // 0x14938F0(0x0080)
	struct RawConVar                                   cl_liveapi_use_v2;                                        // 0x1493990(0x0080)
	struct RawConVar                                   StryderEaIdFetchEnabled;                                  // 0x1493A30(0x0080)
	struct RawConVar                                   coll_spatial_entry_limit_client;                          // 0x1493AD0(0x0080)
	struct RawConVar                                   coll_spatial_optimize_prefetch;                           // 0x1493B70(0x0080)
	struct RawConVar                                   rui_safeAreaFrac;                                         // 0x1493C10(0x0080)
	struct RawConVar                                   ui_brightness;                                            // 0x1493CB0(0x0080)
	struct RawConVar                                   rui_useWidgetDraws;                                       // 0x1493D50(0x0080)
	struct RawConVar                                   rui_padDist;                                              // 0x1493DF0(0x0080)
	struct RawConVar                                   sv_stats;                                                 // 0x1493E90(0x0080)
	struct RawConVar                                   sv_showSnapshots;                                         // 0x1493F30(0x0080)
	struct RawConVar                                   sv_playerNameAppendCheater;                               // 0x1493FD0(0x0080)
	struct RawConVar                                   sv_tempents_send_from_last_sent;                          // 0x1494070(0x0080)
	struct RawConVar                                   sv_showUserCmds;                                          // 0x1494110(0x0080)
	struct RawConVar                                   sv_max_snapshots_multiplayer;                             // 0x14941B0(0x0080)
	struct RawConVar                                   sv_showLargeSnapshotSize;                                 // 0x1494250(0x0080)
	struct RawConVar                                   sv_gracefulDisconnectOnScriptError;                       // 0x1494370(0x0080)
	struct RawConVar                                   killReplay_lagCompensate;                                 // 0x1494410(0x0080)
	struct RawConVar                                   sv_skipSendingUnnecessaryPersistence;                     // 0x14944B0(0x0080)
	struct RawConVar                                   sv_runSpatialOptimizeInJob;                               // 0x1494550(0x0080)
	struct RawConVar                                   sv_rejectConnections;                                     // 0x14945F0(0x0080)
	struct RawConVar                                   net_dataRateDev_enabled;                                  // 0x1494690(0x0080)
	struct RawConVar                                   hud_setting_anonymousMode;                                // 0x1494730(0x0080)
	struct RawConVar                                   svperf_query_slow_frametime_msec;                         // 0x1494850(0x0080)
	struct RawConVar                                   sv_updaterate_mp;                                         // 0x14948F0(0x0080)
	struct RawConVar                                   sv_pausable;                                              // 0x1494990(0x0080)
	struct RawConVar                                   svperf_query_packetchoke_threshold;                       // 0x1494A30(0x0080)
	struct RawConVar                                   sv_rprofDumpDuringLoad;                                   // 0x1494AD0(0x0080)
	struct RawConVar                                   sv_showClientTickCmds;                                    // 0x1494B70(0x0080)
	struct RawConVar                                   bot_lagOut;                                               // 0x1494C10(0x0080)
	struct RawConVar                                   net_datablock_dumpMsg;                                    // 0x1494CB0(0x0080)
	struct RawConVar                                   svperf_query_packetloss_threshold;                        // 0x1494D50(0x0080)
	struct RawConVar                                   sv_parallel_sendsnapshot;                                 // 0x1494DF0(0x0080)
	struct RawConVar                                   sv_struggleSpam;                                          // 0x1494E90(0x0080)
	struct RawConVar                                   sv_allowSendTableTransmitToClients;                       // 0x1494F30(0x0080)
	struct RawConVar                                   sv_unreliableSnapMaxSize;                                 // 0x1494FD0(0x0080)
	struct RawConVar                                   sv_max_props_singleplayer;                                // 0x1495070(0x0080)
	struct RawConVar                                   sv_useReputation;                                         // 0x1495110(0x0080)
	struct RawConVar                                   sv_connectingClientDelay;                                 // 0x14951B0(0x0080)
	struct RawConVar                                   sv_max_props_multiplayer;                                 // 0x1495250(0x0080)
	struct RawConVar                                   net_dataRate;                                             // 0x14952F0(0x0080)
	struct RawConVar                                   sv_max_prop_data_dwords_singleplayer;                     // 0x1495390(0x0080)
	struct RawConVar                                   svperf_query_player_subset_size;                          // 0x1495430(0x0080)
	struct RawConVar                                   sv_requireOriginToken;                                    // 0x14954D0(0x0080)
	struct RawConVar                                   host_flush_threshold;                                     // 0x1495570(0x0080)
	struct RawConVar                                   sv_warnAboutCmdNumJumps;                                  // 0x1495610(0x0080)
	struct RawConVar                                   sv_max_prop_data_dwords_lobby;                            // 0x14956B0(0x0080)
	struct RawConVar                                   sv_sendReplayNetMessagesOnNoDeltaSnaps;                   // 0x1495750(0x0080)
	struct RawConVar                                   sv_max_props_lobby;                                       // 0x14957F0(0x0080)
	struct RawConVar                                   sv_compressPlaylists;                                     // 0x1495890(0x0080)
	struct RawConVar                                   sv_ignoreDuplicateConnectionRequests;                     // 0x14959B0(0x0080)
	struct RawConVar                                   sv_maxclientframes;                                       // 0x1495A50(0x0080)
	struct RawConVar                                   sv_rejectInvalidStryderSecurityToken;                     // 0x1495B70(0x0080)
	struct RawConVar                                   sv_debug_prop_send;                                       // 0x1495C10(0x0080)
	struct RawConVar                                   net_optimize_persistent_data;                             // 0x1495CB0(0x0080)
	struct RawConVar                                   sv_minupdaterate;                                         // 0x1495D50(0x0080)
	struct RawConVar                                   sv_connectEnforceServerFilter;                            // 0x1495DF0(0x0080)
	struct RawConVar                                   sv_asyncSendSnapshot;                                     // 0x1495E90(0x0080)
	struct RawConVar                                   sv_max_prop_data_dwords_multiplayer;                      // 0x1495F30(0x0080)
	struct RawConVar                                   sv_tempents_send_from_delta;                              // 0x1495FD0(0x0080)
	struct RawConVar                                   ss_voice_hearpartner;                                     // 0x1496070(0x0080)
	struct RawConVar                                   sv_balanceTeams;                                          // 0x1496110(0x0080)
	struct RawConVar                                   sv_partyDediOnlyMaxClients;                               // 0x14961B0(0x0080)
	struct RawConVar                                   svperf_query_slow_frametime_threshold;                    // 0x1496250(0x0080)
	struct RawConVar                                   sv_unnecessaryConnectDelay;                               // 0x1496370(0x0080)
	struct RawConVar                                   sv_rejectClientConnects;                                  // 0x1496410(0x0080)
	struct RawConVar                                   sv_resendSignonData;                                      // 0x14964B0(0x0080)
	struct RawConVar                                   sv_separate_freq_change_prop_send;                        // 0x1496550(0x0080)
	struct RawConVar                                   sv_snapshot_uniform_interval;                             // 0x14969E0(0x0080)
	struct RawConVar                                   sv_maxupdaterate;                                         // 0x1496A80(0x0080)
	struct RawConVar                                   sv_scarySnapDeltaPrints;                                  // 0x1496B20(0x0080)
	struct RawConVar                                   sv_allowSpectatorClients;                                 // 0x1496BC0(0x0080)
	struct RawConVar                                   sv_max_snapshots_lobby;                                   // 0x1496C60(0x0080)
	struct RawConVar                                   sv_updaterate_sp;                                         // 0x1496D00(0x0080)
	struct RawConVar                                   net_datablock_dumpOnlyRealClients;                        // 0x1496DA0(0x0080)
	struct RawConVar                                   sv_instancebaselines;                                     // 0x1496E40(0x0080)
	struct RawConVar                                   sv_printHighWaterMark;                                    // 0x1496EE0(0x0080)
	struct RawConVar                                   sv_ignoreAllNewConnections;                               // 0x1497000(0x0080)
	struct RawConVar                                   crossPlay_Enabled;                                        // 0x14970A0(0x0080)
	struct RawConVar                                   sv_fakeClientBaseId;                                      // 0x1497140(0x0080)
	struct RawConVar                                   net_sendProfileTotals;                                    // 0x14971E0(0x0080)
	struct RawConVar                                   CrossPlay_user_optin;                                     // 0x1497280(0x0080)
	struct RawConVar                                   sv_extra_client_connect_time;                             // 0x1497320(0x0080)
	struct RawConVar                                   sv_voiceenable;                                           // 0x14973C0(0x0080)
	struct RawConVar                                   sv_struggleSpamInterval;                                  // 0x1497460(0x0080)
	struct RawConVar                                   sv_single_core_dedi;                                      // 0x1497500(0x0080)
	struct RawConVar                                   sv_transmitToAllPlayersMask_print;                        // 0x14975A0(0x0080)
	struct RawConVar                                   Invite_Flyout_Off;                                        // 0x1497640(0x0080)
	struct RawConVar                                   sv_disconnectOnScriptError;                               // 0x14976E0(0x0080)
	struct RawConVar                                   sv_transmitToAllPlayersMask_allBitsSet;                   // 0x1497780(0x0080)
	struct RawConVar                                   sv_stressbots;                                            // 0x1497820(0x0080)
	struct RawConVar                                   sv_sendEarlyServerInfo;                                   // 0x14978C0(0x0080)
	struct RawConVar                                   bot_num_exclusive_teams;                                  // 0x1497960(0x0080)
	struct RawConVar                                   sv_voiceEcho;                                             // 0x1497A00(0x0080)
	struct RawConVar                                   voice_noxplat;                                            // 0x1497AA0(0x0080)
	struct RawConVar                                   sv_debugmanualmode;                                       // 0x1497B40(0x0080)
	struct RawConVar                                   sv_struggleCheck;                                         // 0x1497BE0(0x0080)
	struct RawConVar                                   svperf_query_hitch_frametime_msec;                        // 0x1497C80(0x0080)
	struct RawConVar                                   net_dataRateDev;                                          // 0x1497D20(0x0080)
	struct RawConVar                                   sv_earlyPersistenceRead;                                  // 0x1497DC0(0x0080)
	struct RawConVar                                   save_enable;                                              // 0x1497E60(0x0080)
	struct RawConVar                                   net_optimize_playlists;                                   // 0x1497F00(0x0080)
	struct RawConVar                                   sv_max_snapshots_singleplayer;                            // 0x1497FA0(0x0080)
	struct RawConVar                                   baselines_print;                                          // 0x1498040(0x0080)
	struct RawConVar                                   reconnect_debug;                                          // 0x14980E0(0x0080)
	struct RawConVar                                   sv_maxSetClientEntitlements;                              // 0x1498180(0x0080)
	struct RawConVar                                   net_data_block_enabled;                                   // 0x1498220(0x0080)
	struct RawConVar                                   sv_cheats;                                                // 0x1498370(0x0080)
	struct RawConVar                                   assetdownloads_hostname;                                  // 0x1498410(0x0080)
	struct RawConVar                                   assetdownloads_desiredState;                              // 0x14984B0(0x0080)
	struct RawConVar                                   assetdownloads_enabled;                                   // 0x1498550(0x0080)
	struct RawConVar                                   assetdownloads_forceError;                                // 0x14985F0(0x0080)
	struct RawConVar                                   chat_rules_MuteIsMute;                                    // 0x1498690(0x0080)
	struct RawConVar                                   chat_rules_log_details;                                   // 0x1498730(0x0080)
	struct RawConVar                                   PURGE_PLAYER_DISPLAYS_AMOUNT;                             // 0x14987D0(0x0080)
	struct RawConVar                                   clubs_allow_text_to_speech;                               // 0x1498870(0x0080)
	struct RawConVar                                   clubs_batch_querry_size;                                  // 0x1498910(0x0080)
	struct RawConVar                                   check_PSN_ByName_BlockList;                               // 0x14989B0(0x0080)
	struct RawConVar                                   tracehull_height_error_check;                             // 0x1498A50(0x0080)
	struct RawConVar                                   communicationBlock_warning_fade;                          // 0x1498AF0(0x0080)
	struct RawConVar                                   communicationBlock_report_self;                           // 0x1498B90(0x0080)
	struct RawConVar                                   communicationBlock_warning_sustain;                       // 0x1498C90(0x0080)
	struct RawConVar                                   communicationBlock_report_threshold;                      // 0x1498D30(0x0080)
	struct RawConVar                                   communicationBlock_time_to_unblock;                       // 0x1498DD0(0x0080)
	struct RawConVar                                   communicationBlock_warning_num;                           // 0x1498E70(0x0080)
	struct RawConVar                                   communicationBlock_warning_threshold;                     // 0x1498F10(0x0080)
	struct RawConVar                                   communicationBlock_block_threshold;                       // 0x1498FB0(0x0080)
	struct RawConVar                                   communicationBlock_enabled;                               // 0x1499050(0x0080)
	struct RawConVar                                   communicationBlock_block_num;                             // 0x14990F0(0x0080)
	struct RawConVar                                   communicationBlock_server_authoritative;                  // 0x1499190(0x0080)
	struct RawConVar                                   Communities_TextUseLocalName;                             // 0x1499230(0x0080)
	struct RawConVar                                   party_userinfo_allowstale;                                // 0x14992D0(0x0080)
	struct RawConVar                                   party_relyOnPartyForMemberUserInfo;                       // 0x1499370(0x0080)
	struct RawConVar                                   community;                                                // 0x1499410(0x0080)
	struct RawConVar                                   debug_force_ugcRestriction;                               // 0x14994B0(0x0080)
	struct RawConVar                                   steam_spoofPCInGetUserInfo;                               // 0x1499550(0x0080)
	struct RawConVar                                   community_abortCommunitySettingsTime;                     // 0x14995F0(0x0080)
	struct RawConVar                                   community_staleUserInfoTime;                              // 0x1499690(0x0080)
	struct RawConVar                                   infoblock_requestInterval;                                // 0x1499730(0x0080)
	struct RawConVar                                   chatroom_onlyWhenActive;                                  // 0x14997D0(0x0080)
	struct RawConVar                                   community_send_server_voice;                              // 0x1499870(0x0080)
	struct RawConVar                                   community_abortUserInfoTime;                              // 0x1499910(0x0080)
	struct RawConVar                                   debug_force_voiceRestriction;                             // 0x14999B0(0x0080)
	struct RawConVar                                   force_EAAccess;                                           // 0x1499A50(0x0080)
	struct RawConVar                                   debug_force_textRestriction;                              // 0x1499AF0(0x0080)
	struct RawConVar                                   community_frame_run;                                      // 0x1499B90(0x0080)
	struct RawConVar                                   communities_enabled;                                      // 0x1499C30(0x0080)
	struct RawConVar                                   community_staleCommunitySettingsTime;                     // 0x1499CD0(0x0080)
	struct RawConVar                                   notification_displayTime;                                 // 0x1499D70(0x0080)
	struct RawConVar                                   community_spam;                                           // 0x14C1BE0(0x0080)
	struct RawConVar                                   comunities_ChatMsgUselongName;                            // 0x14C1C80(0x0080)
	struct RawConVar                                   party_keepAliveTime;                                      // 0x14C1D20(0x0080)
	struct RawConVar                                   party_forceMapLoadedCorrection;                           // 0x14C1DC0(0x0080)
	struct RawConVar                                   party_leaveMatchOnJoin;                                   // 0x14C1E60(0x0080)
	struct RawConVar                                   serverReports_hostname;                                   // 0x14C1F00(0x0080)
	struct RawConVar                                   subscription_hostname;                                    // 0x14C1FA0(0x0080)
	struct RawConVar                                   party_hostname;                                           // 0x14C2040(0x0080)
	struct RawConVar                                   publication_hostname;                                     // 0x14C20E0(0x0080)
	struct RawConVar                                   communities_hostname;                                     // 0x14C2180(0x0080)
	struct RawConVar                                   stryder_security;                                         // 0x14C2220(0x0080)
	struct RawConVar                                   ea_qvt_ident;                                             // 0x14C22C0(0x0080)
	struct RawConVar                                   vtx_hostname;                                             // 0x14C2360(0x0080)
	struct RawConVar                                   EADP_code_redemption_hostname;                            // 0x14C2400(0x0080)
	struct RawConVar                                   EADP_code_redemption_enabled;                             // 0x14C24A0(0x0080)
	struct RawConVar                                   eadp_persistence;                                         // 0x14C2540(0x0080)
	struct RawConVar                                   eadp_friend_use_ctid;                                     // 0x14C25E0(0x0080)
	struct RawConVar                                   eadp_ctId;                                                // 0x14C2880(0x0080)
	struct RawConVar                                   EADP_friends_invite_has_platform;                         // 0x14C2920(0x0080)
	struct RawConVar                                   EADP_http_inbound_friend_invite_can_use_commentforname;   // 0x14C29C0(0x0080)
	struct RawConVar                                   clubs_showEdits;                                          // 0x14C2A60(0x0080)
	struct RawConVar                                   eadpGroups_queryDisplayBatchUsePost;                      // 0x14C2B80(0x0080)
	struct RawConVar                                   eadpGroups_lastActive_min_difference;                     // 0x14C2C20(0x0080)
	struct RawConVar                                   eadpGroups_tagBadlistLocation;                            // 0x14C2CC0(0x0080)
	struct RawConVar                                   Clubs_oldJoinFlow;                                        // 0x14C2D60(0x0080)
	struct RawConVar                                   eadpGroups_Enabled;                                       // 0x14C2E00(0x0080)
	struct RawConVar                                   Clubs_QueryPrefersFriend;                                 // 0x14C2EA0(0x0080)
	struct RawConVar                                   eadp_do_pidinfo_fetch;                                    // 0x14C2F70(0x0080)
	struct RawConVar                                   eadp_force_nxNameDiscoverable;                            // 0x14C3010(0x0080)
	struct RawConVar                                   EADP_SEARCH_Enabled;                                      // 0x14C3130(0x0080)
	struct RawConVar                                   EADP_search_accountname_count;                            // 0x14C31D0(0x0080)
	struct RawConVar                                   EADP_search_use_starts_with;                              // 0x14C3270(0x0080)
	struct RawConVar                                   EADP_optin_crossplay_old_flow;                            // 0x14C3310(0x0080)
	struct RawConVar                                   EADP_optin_datachange_throttle;                           // 0x14C33B0(0x0080)
	struct RawConVar                                   EADP_um_forceError;                                       // 0x14C3450(0x0080)
	struct RawConVar                                   EADP_um_debug;                                            // 0x14C34F0(0x0080)
	struct RawConVar                                   EADP_um_promo_id;                                         // 0x14C3590(0x0080)
	struct RawConVar                                   EADP_um_dev_persistence_domain;                           // 0x14C3630(0x0080)
	struct RawConVar                                   EADP_um_enabled;                                          // 0x14C36D0(0x0080)
	struct RawConVar                                   EADP_um_path;                                             // 0x14C3770(0x0080)
	struct RawConVar                                   test_fakeTimeDays;                                        // 0x14C3950(0x0080)
	struct RawConVar                                   rprof_dump_with_compression;                              // 0x14C39F0(0x0080)
	struct RawConVar                                   telemetryevent_client_enable;                             // 0x14C3A90(0x0080)
	struct RawConVar                                   script_slopTimeBeforeBudgetEnforcement;                   // 0x14C3BB0(0x0080)
	struct RawConVar                                   host_sleep;                                               // 0x14C3C50(0x0080)
	struct RawConVar                                   violence_ablood;                                          // 0x14C4F70(0x0080)
	struct RawConVar                                   mem_test_quiet;                                           // 0x14C5010(0x0080)
	struct RawConVar                                   mem_incremental_compact_rate;                             // 0x14C50B0(0x0080)
	struct RawConVar                                   host_speeds;                                              // 0x14C51D0(0x0080)
	struct RawConVar                                   telemetry_client_enable;                                  // 0x14C52F0(0x0080)
	struct RawConVar                                   host_threaded_sound;                                      // 0x14C5390(0x0080)
	struct RawConVar                                   autohitch;                                                // 0x14C54B0(0x0080)
	struct RawConVar                                   cl_configversion_dummy;                                   // 0x14C5550(0x0080)
	struct RawConVar                                   host_thread_join_fast;                                    // 0x14C55F0(0x0080)
	struct RawConVar                                   violence_agibs;                                           // 0x14C5690(0x0080)
	struct RawConVar                                   host_profile;                                             // 0x14C5830(0x0080)
	struct RawConVar                                   vprof_server_thread;                                      // 0x14C59D0(0x0080)
	struct RawConVar                                   sv_allTicksFinal;                                         // 0x14C5A70(0x0080)
	struct RawConVar                                   mem_test_each_frame;                                      // 0x14C5B10(0x0080)
	struct RawConVar                                   cl_configversion;                                         // 0x14C5BB0(0x0080)
	struct RawConVar                                   violence_hgibs;                                           // 0x14C5C50(0x0080)
	struct RawConVar                                   host_forceTakeHomeBuild;                                  // 0x14C5DF0(0x0080)
	struct RawConVar                                   host_server_thread_min_ticks;                             // 0x14C5E90(0x0080)
	struct RawConVar                                   mem_test_every_n_seconds;                                 // 0x14C5F30(0x0080)
	struct RawConVar                                   test_fakeTimeStampShouldAddTimePassed;                    // 0x14C5FD0(0x0080)
	struct RawConVar                                   next;                                                     // 0x14C6070(0x0080)
	struct RawConVar                                   telemetry_client_sendInterval;                            // 0x14C6110(0x0080)
	struct RawConVar                                   sv_everyThirdTick;                                        // 0x14C61B0(0x0080)
	struct RawConVar                                   host_runframe_input_parcelremainder;                      // 0x14C62D0(0x0080)
	struct RawConVar                                   liveapi_session;                                          // 0x14C6370(0x0080)
	struct RawConVar                                   load_during_video;                                        // 0x14C6410(0x0080)
	struct RawConVar                                   host_ShowIPCCallCount;                                    // 0x14C64B0(0x0080)
	struct RawConVar                                   test_fakeTimeStamp;                                       // 0x14C6700(0x0080)
	struct RawConVar                                   singlestep;                                               // 0x14C6820(0x0080)
	struct RawConVar                                   telemetry_client_debug;                                   // 0x14C6AC0(0x0080)
	struct RawConVar                                   host_thread_mode;                                         // 0x14C6B60(0x0080)
	struct RawConVar                                   host_RunFrameServerAlways;                                // 0x14C6C00(0x0080)
	struct RawConVar                                   violence_hblood;                                          // 0x14C6CA0(0x0080)
	struct RawConVar                                   host_print_frame_times;                                   // 0x14C6D40(0x0080)
	struct RawConVar                                   vprof_server_spike_threshold;                             // 0x14C6DE0(0x0080)
	struct RawConVar                                   mem_dumpstats;                                            // 0x14C6F00(0x0080)
	struct RawConVar                                   host_limitlocal;                                          // 0x14C6FA0(0x0080)
	struct RawConVar                                   paused;                                                   // 0x14C7040(0x0080)
	struct RawConVar                                   host_framerate;                                           // 0x14C70E0(0x0080)
	struct RawConVar                                   developer;                                                // 0x14C7180(0x0080)
	struct RawConVar                                   server_build_datenum;                                     // 0x14C7220(0x0080)
	struct RawConVar                                   host_timescale;                                           // 0x14C72C0(0x0080)
	struct RawConVar                                   move_one_cmd_per_client_frame;                            // 0x14C7380(0x0080)
	struct RawConVar                                   announcement;                                             // 0x14C7420(0x0080)
	struct RawConVar                                   http_debug;                                               // 0x14C74C0(0x0080)
	struct RawConVar                                   http_expoBackoff_Factor;                                  // 0x14C7560(0x0080)
	struct RawConVar                                   http_failuresAsErrors;                                    // 0x14C7600(0x0080)
	struct RawConVar                                   EADP_server_environment;                                  // 0x14C76A0(0x0080)
	struct RawConVar                                   ps5_activities_env;                                       // 0x14C7740(0x0080)
	struct RawConVar                                   http_expoBackoff_LongScale;                               // 0x14C77E0(0x0080)
	struct RawConVar                                   http_expoBackoff_ScaleFactor;                             // 0x14C7880(0x0080)
	struct RawConVar                                   announcementVersion;                                      // 0x14C7920(0x0080)
	struct RawConVar                                   http_showQueries;                                         // 0x14C79C0(0x0080)
	struct RawConVar                                   http_debug_forceFailStatus;                               // 0x14C7A60(0x0080)
	struct RawConVar                                   http_expoBackoff_FirstDelay;                              // 0x14C7B00(0x0080)
	struct RawConVar                                   http_sandbox;                                             // 0x14C7BA0(0x0080)
	struct RawConVar                                   http_maxAllocateAttempts;                                 // 0x14C7C40(0x0080)
	struct RawConVar                                   http_expoBackoff_Enabled;                                 // 0x14C7CE0(0x0080)
	struct RawConVar                                   http_debug_forceFailRate;                                 // 0x14C7D80(0x0080)
	struct RawConVar                                   announcementImage;                                        // 0x14C7E20(0x0080)
	struct RawConVar                                   http_expoBackoff_MaxFailureWait;                          // 0x14C7EC0(0x0080)
	struct RawConVar                                   http_StryderKey;                                          // 0x14C7F60(0x0080)
	struct RawConVar                                   user_tracking_enabled;                                    // 0x14C8000(0x0080)
	struct RawConVar                                   plat_environment;                                         // 0x14C80A0(0x0080)
	struct RawConVar                                   curl_allowHTTPS;                                          // 0x14C8140(0x0080)
	struct RawConVar                                   http_recv_fail_realloc;                                   // 0x14C81E0(0x0080)
	struct RawConVar                                   curl_spamAllQueryStates;                                  // 0x14C8280(0x0080)
	struct RawConVar                                   ssl_verify_peer;                                          // 0x14C8320(0x0080)
	struct RawConVar                                   curl_preloadDlls;                                         // 0x14C83C0(0x0080)
	struct RawConVar                                   origin_igo_mutes_sound_enabled;                           // 0x14C8460(0x0080)
	struct RawConVar                                   OriginRebootClientAuthTokens_Retryinterval;               // 0x14C8500(0x0080)
	struct RawConVar                                   origin_keepOldPresence;                                   // 0x14C8620(0x0080)
	struct RawConVar                                   origin_useGamePresence;                                   // 0x14C86C0(0x0080)
	struct RawConVar                                   origin_disconnectWhenOffline;                             // 0x14C8760(0x0080)
	struct RawConVar                                   origin_ignoreInvitesOnLoadScreen;                         // 0x14C8800(0x0080)
	struct RawConVar                                   origin_autoRefreshTokenClient;                            // 0x14C88A0(0x0080)
	struct RawConVar                                   Allow_auto_Party;                                         // 0x14C8940(0x0080)
	struct RawConVar                                   stryder_forceOriginUsersInvisible;                        // 0x14C89E0(0x0080)
	struct RawConVar                                   origin_debug;                                             // 0x14C8C20(0x0080)
	struct RawConVar                                   origin_presense_updateRate;                               // 0x14C8CC0(0x0080)
	struct RawConVar                                   origin_Errorlevel_OldBehaviour;                           // 0x14C8DE0(0x0080)
	struct RawConVar                                   OriginAllowRebootClientAuthTokens;                        // 0x14C8E80(0x0080)
	struct RawConVar                                   origin_autoRefreshTokenServer;                            // 0x14C8F20(0x0080)
	struct RawConVar                                   origin_tokenFailureMaxBackoffSeconds;                     // 0x14C8FC0(0x0080)
	struct RawConVar                                   origin_authCodeFailureMaxBackoffSeconds;                  // 0x14C9060(0x0080)
	struct RawConVar                                   origin_Errorlevel_Telementry;                             // 0x14C9100(0x0080)
	struct RawConVar                                   chatroom_debug;                                           // 0x14C9220(0x0080)
	struct RawConVar                                   party_autoCreatePartyAlways;                              // 0x14C92C0(0x0080)
	struct RawConVar                                   migrate_attempt_max_retries;                              // 0x14C9360(0x0080)
	struct RawConVar                                   party_migrateFromMatch;                                   // 0x14C9400(0x0080)
	struct RawConVar                                   party_httpHandleTimeout;                                  // 0x14C94A0(0x0080)
	struct RawConVar                                   migrate_attempt_interval;                                 // 0x14C9540(0x0080)
	struct RawConVar                                   server_query_interval;                                    // 0x14C95E0(0x0080)
	struct RawConVar                                   party_minSize;                                            // 0x14C9680(0x0080)
	struct RawConVar                                   party_leaderReadyOnly;                                    // 0x14C9720(0x0080)
	struct RawConVar                                   Stryder3PToken_debug;                                     // 0x14C9840(0x0080)
	struct RawConVar                                   party_keepAliveTime;                                      // 0x14C98E0(0x0080)
	struct RawConVar                                   client_boostCount;                                        // 0x14C9980(0x0080)
	struct RawConVar                                   openinvite_duration_default;                              // 0x14C9A20(0x0080)
	struct RawConVar                                   parties_alwaysReadSubs;                                   // 0x14C9AC0(0x0080)
	struct RawConVar                                   community_queryServerWhenOrphaned;                        // 0x14C9B60(0x0080)
	struct RawConVar                                   party_nofill_selected;                                    // 0x14C9C80(0x0080)
	struct RawConVar                                   party_privacy;                                            // 0x14C9D20(0x0080)
	struct RawConVar                                   party_noSlotsUsedTimeout;                                 // 0x14C9DC0(0x0080)
	struct RawConVar                                   friends_joinUsePresence;                                  // 0x14C9E60(0x0080)
	struct RawConVar                                   party_autoCreatePartyDelay;                               // 0x14C9F00(0x0080)
	struct RawConVar                                   party_readyToSearch;                                      // 0x14C9FA0(0x0080)
	struct RawConVar                                   party_requireConsensusForSearch;                          // 0x14CA040(0x0080)
	struct RawConVar                                   presence_teamscores_percentage_step;                      // 0x14CA1D0(0x0080)
	struct RawConVar                                   reconnect_party_enabled;                                  // 0x14CA2F0(0x0080)
	struct RawConVar                                   reconnect_check_platform_id;                              // 0x14CA390(0x0080)
	struct RawConVar                                   reconnect_cache_delete;                                   // 0x14CA430(0x0080)
	struct RawConVar                                   reconnect_available_timespan;                             // 0x14CA4D0(0x0080)
	struct RawConVar                                   reconnect_delay;                                          // 0x14CA570(0x0080)
	struct RawConVar                                   reconnect_enabled;                                        // 0x14CA610(0x0080)
	struct RawConVar                                   snapshot_tlc_sorted_props_enabled;                        // 0x14CAC20(0x0080)
	struct RawConVar                                   snapshot_local_client_player_delete_assert;               // 0x14CACC0(0x0080)
	struct RawConVar                                   snapshot_force_local_client_player_transmit;              // 0x14CAD60(0x0080)
	struct RawConVar                                   snapshot_recipient_code_affects_tick_last_changed;        // 0x14CAE00(0x0080)
	struct RawConVar                                   speechtotext_path;                                        // 0x14CAEA0(0x0080)
	struct RawConVar                                   speechtotext_forcedisabled;                               // 0x14CAF40(0x0080)
	struct RawConVar                                   speechtotext_stats_errorspermin;                          // 0x14CB710(0x0080)
	struct RawConVar                                   speechtotext_stats_sendrequests;                          // 0x14CB7B0(0x0080)
	struct RawConVar                                   speechtotext_stats_senderrors;                            // 0x14CB850(0x0080)
	struct RawConVar                                   speechtotext_enabled;                                     // 0x14CB8F0(0x0080)
	struct RawConVar                                   speechtotext_stats_sendsuccess;                           // 0x14CB990(0x0080)
	struct RawConVar                                   speechtotext_hostname;                                    // 0x14CBA30(0x0080)
	struct RawConVar                                   speechtotext_stats_interval;                              // 0x14CBAD0(0x0080)
	struct RawConVar                                   speechtotext_msg_droptimeout;                             // 0x14CBB70(0x0080)
	struct RawConVar                                   speechtotext_quiettime;                                   // 0x14CBC10(0x0080)
	struct RawConVar                                   steam_id;                                                 // 0x14CBD30(0x0080)
	struct RawConVar                                   steam_name;                                               // 0x14CBED0(0x0080)
	struct RawConVar                                   friends_onlineUpdateInterval;                             // 0x14CBF70(0x0080)
	struct RawConVar                                   steamlink_hostname;                                       // 0x14CC010(0x0080)
	struct RawConVar                                   mp_linkingAccountWindow;                                  // 0x14CC0B0(0x0080)
	struct RawConVar                                   mp_linkingAccountTime;                                    // 0x14CC150(0x0080)
	struct RawConVar                                   origin_igo_mutes_sound_enabled;                           // 0x14CC1F0(0x0080)
	struct RawConVar                                   steam_presence_player_group_issession;                    // 0x14CC290(0x0080)
	struct RawConVar                                   steam_presence_updateRate;                                // 0x14CC3B0(0x0080)
	struct RawConVar                                   steam_debug;                                              // 0x14CC450(0x0080)
	struct RawConVar                                   steam_environment;                                        // 0x14CC4F0(0x0080)
	struct RawConVar                                   con_logfile;                                              // 0x14CCBD0(0x0080)
	struct RawConVar                                   clubs_useClientTagFilter;                                 // 0x14CD170(0x0080)
	struct RawConVar                                   cl_comms_filter;                                          // 0x14CD210(0x0080)
	struct RawConVar                                   chatroom_sendServerMutes;                                 // 0x14CD330(0x0080)
	struct RawConVar                                   allow_comms_filter;                                       // 0x14CD3D0(0x0080)
	struct RawConVar                                   cl_mute_override_default;                                 // 0x14CD470(0x0080)
	struct RawConVar                                   chatroom_voiceMode;                                       // 0x14CD510(0x0080)
	struct RawConVar                                   net_voiceEchoFromChatServer;                              // 0x14CD650(0x0080)
	struct RawConVar                                   chatroom_use_deprecated_isfriends;                        // 0x14CD6F0(0x0080)
	struct RawConVar                                   net_chatThroughChatserver;                                // 0x14CD790(0x0080)
	struct RawConVar                                   chatroom_min_status_send_interval;                        // 0x14CD830(0x0080)
	struct RawConVar                                   eadp_rtm_spam_log;                                        // 0x14CDAD0(0x0080)
	struct RawConVar                                   EADP_RTM_Enabled;                                         // 0x14CDB90(0x0080)
	struct RawConVar                                   EADP_RTM_Productid;                                       // 0x14CDC30(0x0080)
	struct RawConVar                                   DigiCertGlobalRoot_usable;                                // 0x14CDCD0(0x0080)
	struct RawConVar                                   TLS_trust_cert;                                           // 0x14CDD70(0x0080)
	struct RawConVar                                   EADP_RTM_DELAY_QUERRY_SECONDS;                            // 0x14CDE50(0x0080)
	struct RawConVar                                   AutoRejectInviteToPlay;                                   // 0x14CDF10(0x0080)
	struct RawConVar                                   AutoRejectNewRules;                                       // 0x14CDFB0(0x0080)
	struct RawConVar                                   eadp_presence_encode_presence_state;                      // 0x14CE170(0x0080)
	struct RawConVar                                   eadp_presence_encode_gamesessiondata;                     // 0x14CE330(0x0080)
	struct RawConVar                                   PresenceForFirstPartyFriends;                             // 0x14CE450(0x0080)
	struct RawConVar                                   use_presence_to_refresh_userInfoCache;                    // 0x14CE570(0x0080)
	struct RawConVar                                   net_traceroute_max_hops;                                  // 0x14CE690(0x0080)
	struct RawConVar                                   net_traceroute;                                           // 0x14CE730(0x0080)
	struct RawConVar                                   net_use_valve_relay;                                      // 0x14CE8A0(0x0080)
	struct RawConVar                                   net_encrypt_relay_traffic;                                // 0x14CE940(0x0080)
	struct RawConVar                                   net_use_valve_relay_only;                                 // 0x14CE9E0(0x0080)
	struct RawConVar                                   sv_testLargeDatablock;                                    // 0x14CEA80(0x0080)
	struct RawConVar                                   persistenceDef_readMaxHttpRetries;                        // 0x14CEB20(0x0080)
	struct RawConVar                                   persistenceDef_queryMaxHttpRetries;                       // 0x14CEBC0(0x0080)
	struct RawConVar                                   persistenceDef_retryReadAfterErrorTime;                   // 0x14CEC60(0x0080)
	struct RawConVar                                   persistenceDef_writeMaxHttpRetries;                       // 0x14CED00(0x0080)
	struct RawConVar                                   persistence_upload_def;                                   // 0x14CEDA0(0x0080)
	struct RawConVar                                   persistence_clForceNew;                                   // 0x14CEE40(0x0080)
	struct RawConVar                                   persistence_disableForBuildProcess;                       // 0x14CEEE0(0x0080)
	struct RawConVar                                   persistence_enforce_manifest;                             // 0x14CEF80(0x0080)
	struct RawConVar                                   persistence_use_rson_schema;                              // 0x14CF020(0x0080)
	struct RawConVar                                   persistence_upload_failure_is_error;                      // 0x14CF0C0(0x0080)
	struct RawConVar                                   persistence_new_player_if_upgrade_fails;                  // 0x14CF160(0x0080)
	struct RawConVar                                   speex_use_preprocessor;                                   // 0x14CF200(0x0080)
	struct RawConVar                                   speex_preprocess_agc;                                     // 0x14CF2A0(0x0080)
	struct RawConVar                                   speex_preprocess_set_agc_increment;                       // 0x14CF340(0x0080)
	struct RawConVar                                   speex_preprocess_noise_suppress;                          // 0x14CF3E0(0x0080)
	struct RawConVar                                   speex_set_enh;                                            // 0x14CF480(0x0080)
	struct RawConVar                                   speex_use_highpass;                                       // 0x14CF520(0x0080)
	struct RawConVar                                   speex_preprocess_set_agc_target;                          // 0x14CF5C0(0x0080)
	struct RawConVar                                   speex_preprocess_set_agc_decrement;                       // 0x14CF660(0x0080)
	struct RawConVar                                   speex_preprocess_agc_max_gain;                            // 0x14CF700(0x0080)
	struct RawConVar                                   cl_particle_fallback_base;                                // 0x14CF7A0(0x0080)
	struct RawConVar                                   particle_cpu_level;                                       // 0x14CF840(0x0080)
	struct RawConVar                                   cl_ragdoll_maxcount;                                      // 0x14CF8E0(0x0080)
	struct RawConVar                                   cl_gib_allow;                                             // 0x14CF980(0x0080)
	struct RawConVar                                   cl_fovScale;                                              // 0x14CFA20(0x0080)
	struct RawConVar                                   cl_particle_fallback_multiplier;                          // 0x14CFAC0(0x0080)
	struct RawConVar                                   cl_ragdoll_self_collision;                                // 0x14CFB60(0x0080)
	struct RawConVar                                   fs_intralevel_reads;                                      // 0x14CFD00(0x0080)
	struct RawConVar                                   fs_report_sync_opens;                                     // 0x14CFDA0(0x0080)
	struct RawConVar                                   fs_report_intra_level_readopens;                          // 0x14CFE40(0x0080)
	struct RawConVar                                   fs_showAllReads;                                          // 0x14CFF60(0x0080)
	struct RawConVar                                   fs_report_sync_opens_callstack;                           // 0x14D0000(0x0080)
	struct RawConVar                                   fs_report_sync_opens_fatal;                               // 0x14D0120(0x0080)
	struct RawConVar                                   fs_monitor_read_from_pack;                                // 0x14D01C0(0x0080)
	struct RawConVar                                   fs_report_long_reads;                                     // 0x14D02D0(0x0080)
	struct RawConVar                                   fs_warning_mode;                                          // 0x14D0470(0x0080)
	struct RawConVar                                   filesystem_buffer_size;                                   // 0x14D0580(0x0080)
	struct RawConVar                                   filesystem_unbuffered_io;                                 // 0x14D06A0(0x0080)
	struct RawConVar                                   filesystem_report_buffered_io;                            // 0x14D0740(0x0080)
	struct RawConVar                                   filesystem_use_overlapped_io;                             // 0x14D07E0(0x0080)
	struct RawConVar                                   filesystem_max_stdio_read;                                // 0x14D0880(0x0080)
	struct RawConVar                                   filesystem_native;                                        // 0x14D0920(0x0080)
	struct RawConVar                                   fs_vpk_file_open;                                         // 0x14D09F0(0x0080)
	struct RawConVar                                   controller_use_cheat_detection_generic;                   // 0x14D0A90(0x0080)
	struct RawConVar                                   controller_fast_press_time_generic;                       // 0x14D0B30(0x0080)
	struct RawConVar                                   controller_out_of_bounds_threshold_generic;               // 0x14D0BD0(0x0080)
	struct RawConVar                                   controller_trigger_max_velocity_generic;                  // 0x14D0C70(0x0080)
	struct RawConVar                                   controller_pattern_rec_error_generic;                     // 0x14D0D10(0x0080)
	struct RawConVar                                   controller_debug_show_detection;                          // 0x14D0E30(0x0080)
	struct RawConVar                                   controller_max_fast_presses_generic;                      // 0x14D0ED0(0x0080)
	struct RawConVar                                   controller_report_freq_generic;                           // 0x14D0F70(0x0080)
	struct RawConVar                                   debug_controller_menu_test_generic;                       // 0x14D1010(0x0080)
	struct RawConVar                                   controller_fast_duration_time_generic;                    // 0x14D10B0(0x0080)
	struct RawConVar                                   ime_enabled;                                              // 0x14D2960(0x0080)
	struct RawConVar                                   showfps_mouse_latency;                                    // 0x14D2A50(0x0080)
	struct RawConVar                                   gamepad_trigger_threshold;                                // 0x14D4CC0(0x0080)
	struct RawConVar                                   cdndownloads_hostname;                                    // 0x14D4F20(0x0080)
	struct RawConVar                                   mat_hdrcolorcorrection;                                   // 0x14D4FC0(0x0080)
	struct RawConVar                                   mat_showlowresimage;                                      // 0x14D5060(0x0080)
	struct RawConVar                                   mat_global_lighting;                                      // 0x14D5100(0x0080)
	struct RawConVar                                   mat_diffuse;                                              // 0x14D51A0(0x0080)
	struct RawConVar                                   mat_norendering;                                          // 0x14D5240(0x0080)
	struct RawConVar                                   gpu_mem_level;                                            // 0x14D52E0(0x0080)
	struct RawConVar                                   cl_snapshot_draw;                                         // 0x14D5380(0x0080)
	struct RawConVar                                   showfps_max_ms;                                           // 0x14D94F0(0x0080)
	struct RawConVar                                   mat_drawflat;                                             // 0x14D9590(0x0080)
	struct RawConVar                                   shadow_maxdynamic;                                        // 0x14DC6B0(0x0080)
	struct RawConVar                                   mat_filtertextures;                                       // 0x14DC750(0x0080)
	struct RawConVar                                   stream_freeze_camera;                                     // 0x14DC7F0(0x0080)
	struct RawConVar                                   mat_disable_model_ambient;                                // 0x14DC910(0x0080)
	struct RawConVar                                   mat_picmip;                                               // 0x14DC9B0(0x0080)
	struct RawConVar                                   cloak_enabled;                                            // 0x14DEC40(0x0080)
	struct RawConVar                                   mem_level;                                                // 0x14DECE0(0x0080)
	struct RawConVar                                   csm_coverage;                                             // 0x14DED80(0x0080)
	struct RawConVar                                   showfps_heightpercent;                                    // 0x14DEE20(0x0080)
	struct RawConVar                                   lightmap_realtimelight;                                   // 0x14DEEC0(0x0080)
	struct RawConVar                                   mat_mip_linear;                                           // 0x14DEFE0(0x0080)
	struct RawConVar                                   showmem_enabled;                                          // 0x14DF080(0x0080)
	struct RawConVar                                   mat_cloudmask;                                            // 0x14DF120(0x0080)
	struct RawConVar                                   mat_mipmaptextures;                                       // 0x14DF1C0(0x0080)
	struct RawConVar                                   mat_hdr_paper_white_nits;                                 // 0x14E1330(0x0080)
	struct RawConVar                                   r_WaterDrawRefraction;                                    // 0x14E13D0(0x0080)
	struct RawConVar                                   mat_disable_lightmaps;                                    // 0x14E1470(0x0080)
	struct RawConVar                                   showfps_smoothtime;                                       // 0x14E1510(0x0080)
	struct RawConVar                                   r_ditherFade;                                             // 0x14E15B0(0x0080)
	struct RawConVar                                   csm_enabled;                                              // 0x14E1650(0x0080)
	struct RawConVar                                   mat_showmiplevels;                                        // 0x14E16F0(0x0080)
	struct RawConVar                                   cpu_level;                                                // 0x14E1790(0x0080)
	struct RawConVar                                   mat_sync_rt;                                              // 0x14E1830(0x0080)
	struct RawConVar                                   csm_cascade_res;                                          // 0x14E18D0(0x0080)
	struct RawConVar                                   r_rimlight;                                               // 0x14E1970(0x0080)
	struct RawConVar                                   r_shadowrendertotexture;                                  // 0x14E1A10(0x0080)
	struct RawConVar                                   mat_forceaniso;                                           // 0x14E1AB0(0x0080)
	struct RawConVar                                   mat_fastnobump;                                           // 0x14E1B50(0x0080)
	struct RawConVar                                   showfps_enabled;                                          // 0x14E22B0(0x0080)
	struct RawConVar                                   showmem_mode_bottom;                                      // 0x14E2350(0x0080)
	struct RawConVar                                   static_shadow_res;                                        // 0x14E23F0(0x0080)
	struct RawConVar                                   mat_filterlightmaps;                                      // 0x14E2490(0x0080)
	struct RawConVar                                   shownet_enabled;                                          // 0x14E2530(0x0080)
	struct RawConVar                                   static_shadow_use_d16;                                    // 0x14E25D0(0x0080)
	struct RawConVar                                   viewmodel_selfshadow;                                     // 0x14E2670(0x0080)
	struct RawConVar                                   lightmap_realtimeshadows;                                 // 0x14E2710(0x0080)
	struct RawConVar                                   showmem_mode_top;                                         // 0x14E27E0(0x0080)
	struct RawConVar                                   showfps_spinner;                                          // 0x14E2880(0x0080)
	struct RawConVar                                   gpu_vram_size_mb;                                         // 0x14E2920(0x0080)
	struct RawConVar                                   static_shadow;                                            // 0x14E29C0(0x0080)
	struct RawConVar                                   mat_debugalttab;                                          // 0x14E2A60(0x0080)
	struct RawConVar                                   dvs_gpuframetime_max;                                     // 0x14E2B00(0x0080)
	struct RawConVar                                   dvs_enable;                                               // 0x14E2BA0(0x0080)
	struct RawConVar                                   dvs_scale_min;                                            // 0x14E2C40(0x0080)
	struct RawConVar                                   dvs_gpuframetime_min;                                     // 0x14E2CE0(0x0080)
	struct RawConVar                                   gpu_level;                                                // 0x14E2D80(0x0080)
	struct RawConVar                                   mat_report_queue_status;                                  // 0x14E2E20(0x0080)
	struct RawConVar                                   mat_dynamic_tonemapping;                                  // 0x14E2EC0(0x0080)
	struct RawConVar                                   mat_materialmip_world_1;                                  // 0x14E2F60(0x0080)
	struct RawConVar                                   mat_materialmip_cockpit_2;                                // 0x14E3000(0x0080)
	struct RawConVar                                   mat_materialmip_model_0;                                  // 0x14E30A0(0x0080)
	struct RawConVar                                   mat_materialmip_cockpit_3;                                // 0x14E3140(0x0080)
	struct RawConVar                                   mat_materialmip_character_1;                              // 0x14E31E0(0x0080)
	struct RawConVar                                   mat_materialmip_other_3;                                  // 0x14E3280(0x0080)
	struct RawConVar                                   mat_materialmip_world_2;                                  // 0x14E3320(0x0080)
	struct RawConVar                                   mat_materialmip_cockpit_1;                                // 0x14E33C0(0x0080)
	struct RawConVar                                   mat_materialmip_world_4;                                  // 0x14E3460(0x0080)
	struct RawConVar                                   mat_materialmip_other_1;                                  // 0x14E3500(0x0080)
	struct RawConVar                                   mat_materialmip_character_2;                              // 0x14E35A0(0x0080)
	struct RawConVar                                   mat_materialmip_model_1;                                  // 0x14E3640(0x0080)
	struct RawConVar                                   mat_materialmip_world_0;                                  // 0x14E36E0(0x0080)
	struct RawConVar                                   mat_materialmip_model_4;                                  // 0x14E3780(0x0080)
	struct RawConVar                                   mat_materialmip_character_4;                              // 0x14E3820(0x0080)
	struct RawConVar                                   mat_materialmip_character_3;                              // 0x14E38C0(0x0080)
	struct RawConVar                                   mat_materialmip_cockpit_0;                                // 0x14E3B70(0x0080)
	struct RawConVar                                   mat_materialmip_other_0;                                  // 0x14E3C10(0x0080)
	struct RawConVar                                   mat_materialmip_cockpit_4;                                // 0x14E3CB0(0x0080)
	struct RawConVar                                   mat_materialmip_model_2;                                  // 0x14E3D50(0x0080)
	struct RawConVar                                   mat_materialmip_character_0;                              // 0x14E3DF0(0x0080)
	struct RawConVar                                   mat_materialmip_world_3;                                  // 0x14E3E90(0x0080)
	struct RawConVar                                   mat_materialmip_other_4;                                  // 0x14E3F30(0x0080)
	struct RawConVar                                   mat_materialmip_model_3;                                  // 0x14E4050(0x0080)
	struct RawConVar                                   mat_materialmip_other_2;                                  // 0x14E40F0(0x0080)
	struct RawConVar                                   mat_hdr_debug_heatmap_max_nits;                           // 0x14E4190(0x0080)
	struct RawConVar                                   cloak_pilotAberrationScale;                               // 0x14E4230(0x0080)
	struct RawConVar                                   mat_sharpen_amount;                                       // 0x14E42D0(0x0080)
	struct RawConVar                                   mat_bloom_streak_amount;                                  // 0x14E4370(0x0080)
	struct RawConVar                                   monitor_mat_sharpen_amount;                               // 0x14E4410(0x0080)
	struct RawConVar                                   mat_local_contrast_scale_override;                        // 0x14E44B0(0x0080)
	struct RawConVar                                   cloak_pilotTint3;                                         // 0x14E4550(0x0080)
	struct RawConVar                                   mat_local_contrast_midtone_mask_override;                 // 0x14E45F0(0x0080)
	struct RawConVar                                   mat_local_contrast_vignette_end_override;                 // 0x14E4690(0x0080)
	struct RawConVar                                   mat_local_contrast_vignette_start_override;               // 0x14E4730(0x0080)
	struct RawConVar                                   cloak_pilotTint2;                                         // 0x14E47D0(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_mid2;                               // 0x14E4870(0x0080)
	struct RawConVar                                   mat_screen_blur_override;                                 // 0x14E4910(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_toe;                                // 0x14E49B0(0x0080)
	struct RawConVar                                   mat_debug_luminance_min;                                  // 0x14E4A50(0x0080)
	struct RawConVar                                   mat_debug_luminance;                                      // 0x14E4AF0(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_shoulder;                           // 0x14E4B90(0x0080)
	struct RawConVar                                   cloak_pilotNoiseFactor;                                   // 0x14E4C30(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_mid1;                               // 0x14E4CD0(0x0080)
	struct RawConVar                                   cloak_pilotTint1;                                         // 0x14E4D70(0x0080)
	struct RawConVar                                   mat_hdr_debug_heatmap_min_nits;                           // 0x14E4E10(0x0080)
	struct RawConVar                                   mat_debug_luminance_max;                                  // 0x14E4EB0(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_disable;                            // 0x14E4F50(0x0080)
	struct RawConVar                                   ssao_show;                                                // 0x14E4FF0(0x0080)
	struct RawConVar                                   mat_sharpen_threshold;                                    // 0x14E5090(0x0080)
	struct RawConVar                                   mat_bloom_wide_amount;                                    // 0x14E5130(0x0080)
	struct RawConVar                                   mat_postprocess_enable;                                   // 0x14E51D0(0x0080)
	struct RawConVar                                   cloak_pilotBrightenAdd;                                   // 0x14E5270(0x0080)
	struct RawConVar                                   mat_fxaa_enable;                                          // 0x14E5310(0x0080)
	struct RawConVar                                   noise_filter_scale;                                       // 0x14E53B0(0x0080)
	struct RawConVar                                   mat_sharpen_width;                                        // 0x14E5450(0x0080)
	struct RawConVar                                   mat_debug_tonemapping;                                    // 0x14E54F0(0x0080)
	struct RawConVar                                   mat_local_contrast_edge_scale_override;                   // 0x14E5590(0x0080)
	struct RawConVar                                   mat_vignette_enable;                                      // 0x14E5630(0x0080)
	struct RawConVar                                   mat_bloom_streak_exponent_post;                           // 0x14E56D0(0x0080)
	struct RawConVar                                   mat_debug_postprocess_allowed;                            // 0x14E5770(0x0080)
	struct RawConVar                                   mat_debug_tonemapping_linear_segment_end;                 // 0x14E5810(0x0080)
	struct RawConVar                                   glitch_aberrationScale;                                   // 0x14E58B0(0x0080)
	struct RawConVar                                   mat_hdr_debug_heatmap;                                    // 0x14E5950(0x0080)
	struct RawConVar                                   gfx_desaturate_force;                                     // 0x14E59F0(0x0080)
	struct RawConVar                                   adjustableCharacterBoostIndirectDiffuse;                  // 0x14E5A90(0x0080)
	struct RawConVar                                   adjustableCharacterBoostBias;                             // 0x14E5B30(0x0080)
	struct RawConVar                                   mat_enable_ssr;                                           // 0x14E5BD0(0x0080)
	struct RawConVar                                   rt_sync_message_pump;                                     // 0x14E5D10(0x0080)
	struct RawConVar                                   rt_sleep;                                                 // 0x14E5DB0(0x0080)
	struct RawConVar                                   rt_worker;                                                // 0x14E5E50(0x0080)
	struct RawConVar                                   mat_sync_rt_flushes_gpu;                                  // 0x14E5EF0(0x0080)
	struct RawConVar                                   mat_translucency_errors;                                  // 0x14E5F90(0x0080)
	struct RawConVar                                   mat_showenvmapmask;                                       // 0x14E6040(0x0080)
	struct RawConVar                                   stream_load_after_drop;                                   // 0x14E60E0(0x0080)
	struct RawConVar                                   stream_enable;                                            // 0x14E6180(0x0080)
	struct RawConVar                                   stream_picmip;                                            // 0x14E6220(0x0080)
	struct RawConVar                                   stream_pause;                                             // 0x14E62C0(0x0080)
	struct RawConVar                                   stream_drop_unused;                                       // 0x14E6360(0x0080)
	struct RawConVar                                   stream_texture_bandwidth;                                 // 0x14E6480(0x0080)
	struct RawConVar                                   stream_addnoise;                                          // 0x14E6520(0x0080)
	struct RawConVar                                   stream_memory_while_loading;                              // 0x14E65C0(0x0080)
	struct RawConVar                                   stream_memory_min;                                        // 0x14E6660(0x0080)
	struct RawConVar                                   stream_memory_ignore_vram;                                // 0x14E6700(0x0080)
	struct RawConVar                                   stream_memory_ignore;                                     // 0x14E67A0(0x0080)
	struct RawConVar                                   stream_mode;                                              // 0x14E6840(0x0080)
	struct RawConVar                                   stream_never_high_priority_frac;                          // 0x14E68E0(0x0080)
	struct RawConVar                                   stream_overlay_mode;                                      // 0x14E6980(0x0080)
	struct RawConVar                                   inflight_stream_texture_max;                              // 0x14E6AA0(0x0080)
	struct RawConVar                                   stream_overlay;                                           // 0x14E6B40(0x0080)
	struct RawConVar                                   stream_memory;                                            // 0x14E6BE0(0x0080)
	struct RawConVar                                   r_delay_texture_destroy;                                  // 0x14E6C80(0x0080)
	struct RawConVar                                   stream_low_mips_to_batch;                                 // 0x14E7870(0x0080)
	struct RawConVar                                   stream_highest_quality_pc;                                // 0x14E7910(0x0080)
	struct RawConVar                                   mat_autoexposure_max_luminance;                           // 0x14E79B0(0x0080)
	struct RawConVar                                   stream_resource_thread;                                   // 0x151FC50(0x0080)
	struct RawConVar                                   stream_resource_wait_for_additional_gpus;                 // 0x151FCF0(0x0080)
	struct RawConVar                                   r_deferredlighting;                                       // 0x151FD90(0x0080)
	struct RawConVar                                   decal_clip_debug_groups;                                  // 0x151FE30(0x0080)
	struct RawConVar                                   ignore_material_flags_for_decals;                         // 0x151FED0(0x0080)
	struct RawConVar                                   decal_clip_debug_draw;                                    // 0x151FF70(0x0080)
	struct RawConVar                                   gpu_driven_tex_stream_single_thread;                      // 0x1520010(0x0080)
	struct RawConVar                                   highlight_enable_discard;                                 // 0x15200B0(0x0080)
	struct RawConVar                                   highlight_draw;                                           // 0x1520150(0x0080)
	struct RawConVar                                   highlight_object_max_count;                               // 0x1520270(0x0080)
	struct RawConVar                                   highlight_lazy_clear_buffers;                             // 0x1520310(0x0080)
	struct RawConVar                                   directlighting_mode;                                      // 0x15203B0(0x0080)
	struct RawConVar                                   directlighting_debug_lightidx;                            // 0x1520450(0x0080)
	struct RawConVar                                   directlighting_debug_lightvolume;                         // 0x15204F0(0x0080)
	struct RawConVar                                   clusteredlighting_z_far_last;                             // 0x1520590(0x0080)
	struct RawConVar                                   directlighting_debugout;                                  // 0x1520630(0x0080)
	struct RawConVar                                   directlighting_debug_freeze;                              // 0x15206D0(0x0080)
	struct RawConVar                                   clusteredlighting_enable_shlights;                        // 0x1520770(0x0080)
	struct RawConVar                                   clusteredlighting_no_realtime_check;                      // 0x1520810(0x0080)
	struct RawConVar                                   directlighting_debug;                                     // 0x15208B0(0x0080)
	struct RawConVar                                   clusteredlighting_z_far_first_lobby;                      // 0x1520950(0x0080)
	struct RawConVar                                   clusteredlighting_pixels_per_cluster;                     // 0x15209F0(0x0080)
	struct RawConVar                                   directlighting_debugpick_freeze;                          // 0x1520A90(0x0080)
	struct RawConVar                                   clusteredlighting_light_importance_threshold;             // 0x1520B30(0x0080)
	struct RawConVar                                   clusteredlighting_cluster_depth;                          // 0x1520BD0(0x0080)
	struct RawConVar                                   directlighting_debugpick;                                 // 0x1520C70(0x0080)
	struct RawConVar                                   clusteredlighting_2dbounds;                               // 0x1520D10(0x0080)
	struct RawConVar                                   clusteredlighting_rasterize;                              // 0x1520DB0(0x0080)
	struct RawConVar                                   clusteredlighting_skip_behind_depth;                      // 0x1520E50(0x0080)
	struct RawConVar                                   directlighting_debugpick_highlight;                       // 0x1520EF0(0x0080)
	struct RawConVar                                   directlighting_debugpick_ztest;                           // 0x1520F90(0x0080)
	struct RawConVar                                   clusteredlighting_enable_fulllights;                      // 0x1521030(0x0080)
	struct RawConVar                                   clusteredlighting_z_far_last_lobby;                       // 0x15210D0(0x0080)
	struct RawConVar                                   clusteredlighting_z_far_first;                            // 0x1521170(0x0080)
	struct RawConVar                                   directlighting_debugpick_drawmode;                        // 0x1521210(0x0080)
	struct RawConVar                                   clusteredlighting_enable_quad_dist;                       // 0x15212B0(0x0080)
	struct RawConVar                                   directlighting_debug_clusters;                            // 0x1521350(0x0080)
	struct RawConVar                                   clusteredlighting_cluster_depth_lobby;                    // 0x15213F0(0x0080)
	struct RawConVar                                   particle_lighting_size;                                   // 0x1521490(0x0080)
	struct RawConVar                                   particle_lighting_clear_enable;                           // 0x1521530(0x0080)
	struct RawConVar                                   r_particle_low_res_tiled_composite;                       // 0x15215D0(0x0080)
	struct RawConVar                                   r_particle_low_res_draw_weight_tex;                       // 0x1521670(0x0080)
	struct RawConVar                                   ssao_radius;                                              // 0x1521710(0x0080)
	struct RawConVar                                   ssao_num_directions;                                      // 0x15217B0(0x0080)
	struct RawConVar                                   ssao_jitter_scale;                                        // 0x1521850(0x0080)
	struct RawConVar                                   ssao_downsample;                                          // 0x15218F0(0x0080)
	struct RawConVar                                   ssao_snap_uv;                                             // 0x1521990(0x0080)
	struct RawConVar                                   ssao_allow_partial;                                       // 0x1521A30(0x0080)
	struct RawConVar                                   ssao_max_res_threshold;                                   // 0x1521AD0(0x0080)
	struct RawConVar                                   gtao_intensity;                                           // 0x1521B70(0x0080)
	struct RawConVar                                   ssao_enabled;                                             // 0x1521C10(0x0080)
	struct RawConVar                                   ssao_blur;                                                // 0x1521CB0(0x0080)
	struct RawConVar                                   hbaobasic_tangent_bias;                                   // 0x1521D50(0x0080)
	struct RawConVar                                   ssao_radius_in_lobby;                                     // 0x1521DF0(0x0080)
	struct RawConVar                                   hbao_intensity;                                           // 0x1521E90(0x0080)
	struct RawConVar                                   ssao_depth_max;                                           // 0x1521F30(0x0080)
	struct RawConVar                                   ssao_exponent;                                            // 0x1521FD0(0x0080)
	struct RawConVar                                   hbao_stepsize_random;                                     // 0x1522070(0x0080)
	struct RawConVar                                   ssao_blur_edge_sharpness;                                 // 0x1522110(0x0080)
	struct RawConVar                                   ssao_tech;                                                // 0x15221B0(0x0080)
	struct RawConVar                                   ssao_max_res;                                             // 0x1522250(0x0080)
	struct RawConVar                                   gtao_angle_bias;                                          // 0x15222F0(0x0080)
	struct RawConVar                                   hbao_angle_bias;                                          // 0x1522390(0x0080)
	struct RawConVar                                   ssao_show;                                                // 0x1522430(0x0080)
	struct RawConVar                                   ssao_on_everything;                                       // 0x15224D0(0x0080)
	struct RawConVar                                   gtao_intensity_in_lobby;                                  // 0x1522570(0x0080)
	struct RawConVar                                   gtao_thickness_heuristic;                                 // 0x1522610(0x0080)
	struct RawConVar                                   ssao_num_steps;                                           // 0x15226B0(0x0080)
	struct RawConVar                                   ssao_upsample_ranged;                                     // 0x1522750(0x0080)
	struct RawConVar                                   ssao_show;                                                // 0x15227F0(0x0080)
	struct RawConVar                                   tsaa_neighborhoodclamping;                                // 0x1522890(0x0080)
	struct RawConVar                                   tsaa_neighborhoodclampingsoftened;                        // 0x1522930(0x0080)
	struct RawConVar                                   tsaa_blendfactorincreaseatmaxvelocity;                    // 0x15229D0(0x0080)
	struct RawConVar                                   tsaa_blendfactorincreasewhenunoccluded;                   // 0x1522A70(0x0080)
	struct RawConVar                                   tsaa_curframeblendamount;                                 // 0x1522B10(0x0080)
	struct RawConVar                                   tsaa_blendfactormaxesoutatvelocity;                       // 0x1522BB0(0x0080)
	struct RawConVar                                   tsaa_blendfactoroverride;                                 // 0x1522C50(0x0080)
	struct RawConVar                                   tsaa_debugresponsiveflag;                                 // 0x1522CF0(0x0080)
	struct RawConVar                                   tsaa_blendfactormodulationonsparklesandunocclusion;       // 0x1522D90(0x0080)
	struct RawConVar                                   vfc_clusteredlighting_skip_behind_depth;                  // 0x1522E30(0x0080)
	struct RawConVar                                   vfc_clusteredlighting_rasterize;                          // 0x1522ED0(0x0080)
	struct RawConVar                                   vfc_clusteredlighting_cluster_depth;                      // 0x1522F70(0x0080)
	struct RawConVar                                   vfc_clusteredlighting_pixels_per_cluster;                 // 0x1523010(0x0080)
	struct RawConVar                                   vfc_clusteredlighting_2dbounds;                           // 0x15230B0(0x0080)
	struct RawConVar                                   vfog_zfar;                                                // 0x1523150(0x0080)
	struct RawConVar                                   vfog_debug_print_num_volumes_in_frame;                    // 0x15231F0(0x0080)
	struct RawConVar                                   vfog_fogbuffer_y;                                         // 0x1523290(0x0080)
	struct RawConVar                                   vfog_debug_show_filled_clusters;                          // 0x1523330(0x0080)
	struct RawConVar                                   vfog_debug_freeze_volumebuf;                              // 0x15233D0(0x0080)
	struct RawConVar                                   vfog_znear;                                               // 0x1523470(0x0080)
	struct RawConVar                                   vfog_enable_taa;                                          // 0x1523510(0x0080)
	struct RawConVar                                   vfog_enable;                                              // 0x15235B0(0x0080)
	struct RawConVar                                   vfog_fogbuffer_z;                                         // 0x1523650(0x0080)
	struct RawConVar                                   vfog_enable_apply_blur;                                   // 0x15236F0(0x0080)
	struct RawConVar                                   vfog_fogbuffer_x;                                         // 0x1523790(0x0080)
	struct RawConVar                                   vfog_out_of_frustrum_sample_count;                        // 0x1523830(0x0080)
	struct RawConVar                                   vfog_thin_surface_factor;                                 // 0x15238D0(0x0080)
	struct RawConVar                                   vfog_debug_freeze_cbuf;                                   // 0x1523970(0x0080)
	struct RawConVar                                   vfog_perf_level;                                          // 0x1523A10(0x0080)
	struct RawConVar                                   r_volumetric_lighting_enabled;                            // 0x1523AB0(0x0080)
	struct RawConVar                                   r_volumetric_lighting_defer_init;                         // 0x1523B50(0x0080)
	struct RawConVar                                   r_volumetric_lighting_blur_type;                          // 0x1523BF0(0x0080)
	struct RawConVar                                   r_volumetric_lighting_blur_count;                         // 0x1523C90(0x0080)
	struct RawConVar                                   r_volumetric_lighting_rotate_dither;                      // 0x1523D30(0x0080)
	struct RawConVar                                   r_volumetric_lighting_numSteps;                           // 0x1523DD0(0x0080)
	struct RawConVar                                   r_volumetric_lighting_min_relative_contribution;          // 0x1523E70(0x0080)
	struct RawConVar                                   r_water_draw_mode;                                        // 0x1523F10(0x0080)
	struct RawConVar                                   r_water_force_envmap;                                     // 0x1523FB0(0x0080)
	struct RawConVar                                   r_water_draw_env_volumes;                                 // 0x1527970(0x0080)
	struct RawConVar                                   r_water_render_only_body;                                 // 0x1527A10(0x0080)
	struct RawConVar                                   r_water_wave_debug;                                       // 0x1527AB0(0x0080)
	struct RawConVar                                   r_water_wireframe;                                        // 0x1527B50(0x0080)
	struct RawConVar                                   r_water_rendering_enabled;                                // 0x1527BF0(0x0080)
	struct RawConVar                                   r_watersim_enabled_override;                              // 0x1527C90(0x0080)
	struct RawConVar                                   r_watersim_debug;                                         // 0x1527D50(0x0080)
	struct RawConVar                                   gfx_nvnUseLowLatencyBoost;                                // 0x1527DF0(0x0080)
	struct RawConVar                                   gfx_nvnUseLowLatency;                                     // 0x1527E90(0x0080)
	struct RawConVar                                   mat_letterbox_aspect_threshold;                           // 0x1527F30(0x0080)
	struct RawConVar                                   mat_letterbox_aspect_goal;                                // 0x15281F0(0x0080)
	struct RawConVar                                   mat_checkStalls;                                          // 0x1528290(0x0080)
	struct RawConVar                                   mat_syncInterval;                                         // 0x15283B0(0x0080)
	struct RawConVar                                   mat_syncGPU;                                              // 0x1528450(0x0080)
	struct RawConVar                                   r_no_stalls;                                              // 0x15284F0(0x0080)
	struct RawConVar                                   fullscreen_enabled;                                       // 0x1528590(0x0080)
	struct RawConVar                                   mat_global_lighting;                                      // 0x1528630(0x0080)
	struct RawConVar                                   rprof_prune_path_from_draw_events;                        // 0x15286D0(0x0080)
	struct RawConVar                                   mat_instancing;                                           // 0x1528780(0x0080)
	struct RawConVar                                   directlighting_falloff_cap;                               // 0x1528820(0x0080)
	struct RawConVar                                   dlight_lumen_conversion;                                  // 0x15288C0(0x0080)
	struct RawConVar                                   directlighting_falloff;                                   // 0x1528960(0x0080)
	struct RawConVar                                   shadow_pcf_kernel_width;                                  // 0x1528A00(0x0080)
	struct RawConVar                                   mat_hide_sun_in_last_cascade;                             // 0x1528AA0(0x0080)
	struct RawConVar                                   shadow_pcf_bias;                                          // 0x1528B40(0x0080)
	struct RawConVar                                   directlighting_global_mul;                                // 0x1528BE0(0x0080)
	struct RawConVar                                   spam_skinning_matrices_used;                              // 0x1AFCF50(0x0080)
	struct RawConVar                                   r_bone_matrix_bulk_update_threshold;                      // 0x1AFCFF0(0x0080)
	struct RawConVar                                   global_lighting_partial_update;                           // 0x1AFD090(0x0080)
	struct RawConVar                                   spam_skinning_matrices_used_detailed;                     // 0x1AFD130(0x0080)
	struct RawConVar                                   r_no_stalls;                                              // 0x1AFD1D0(0x0080)
	struct RawConVar                                   mat_disable_lightmap_ambient;                             // 0x1AFD270(0x0080)
	struct RawConVar                                   mat_autoexposure_force_value;                             // 0x1AFD310(0x0080)
	struct RawConVar                                   shadow_bleedfudge;                                        // 0x1AFD3B0(0x0080)
	struct RawConVar                                   mat_envmap_scale;                                         // 0x1AFD450(0x0080)
	struct RawConVar                                   directlighting_emissive_mul;                              // 0x1AFD4F0(0x0080)
	struct RawConVar                                   shadow_minvariance;                                       // 0x1AFD590(0x0080)
	struct RawConVar                                   pixvis_maxquads;                                          // 0x1AFD6B0(0x0080)
	struct RawConVar                                   r_no_stalls;                                              // 0x1AFD750(0x0080)
	struct RawConVar                                   mat_depthbiasclamp_decal;                                 // 0x1AFD800(0x0080)
	struct RawConVar                                   mat_depthtest_force_disabled;                             // 0x1AFD8A0(0x0080)
	struct RawConVar                                   mat_depthbias_ui;                                         // 0x1AFD940(0x0080)
	struct RawConVar                                   mat_depthbiasclamp_shadowmap;                             // 0x1AFD9E0(0x0080)
	struct RawConVar                                   mat_slopescaledepthbias_normal;                           // 0x1AFDA80(0x0080)
	struct RawConVar                                   mat_depthbiasclamp_zfill;                                 // 0x1AFDB20(0x0080)
	struct RawConVar                                   mat_depthbiasclamp_ui;                                    // 0x1AFDBC0(0x0080)
	struct RawConVar                                   mat_depthbias_shadowmap;                                  // 0x1AFDC60(0x0080)
	struct RawConVar                                   mat_slopescaledepthbias_ui;                               // 0x1AFDD00(0x0080)
	struct RawConVar                                   mat_depthbias_decal;                                      // 0x1AFDDA0(0x0080)
	struct RawConVar                                   mat_depthbias_tightshadowmap;                             // 0x1AFDE40(0x0080)
	struct RawConVar                                   mat_depthbias_zfill;                                      // 0x1AFDEE0(0x0080)
	struct RawConVar                                   mat_depthbias_normal;                                     // 0x1AFDF80(0x0080)
	struct RawConVar                                   mat_slopescaledepthbias_zfill;                            // 0x1AFE020(0x0080)
	struct RawConVar                                   mat_slopescaledepthbias_shadowmap;                        // 0x1AFE0C0(0x0080)
	struct RawConVar                                   mat_slopescaledepthbias_decal;                            // 0x1AFE160(0x0080)
	struct RawConVar                                   mat_depthbiasclamp_normal;                                // 0x1AFE200(0x0080)
	struct RawConVar                                   dof_monitorNearDepthEnd;                                  // 0x1AFE2A0(0x0080)
	struct RawConVar                                   dof_nearDepthStart;                                       // 0x1AFE340(0x0080)
	struct RawConVar                                   dof_monitorFarDepthStart;                                 // 0x1AFE3E0(0x0080)
	struct RawConVar                                   dof_monitorNearDepthStart;                                // 0x1AFE480(0x0080)
	struct RawConVar                                   dof_farDepthEnd;                                          // 0x1AFE520(0x0080)
	struct RawConVar                                   dof_farDepthStart;                                        // 0x1AFE5C0(0x0080)
	struct RawConVar                                   dof_nearDepthEnd;                                         // 0x1AFE660(0x0080)
	struct RawConVar                                   dof_monitorFarDepthEnd;                                   // 0x1AFE700(0x0080)
	struct RawConVar                                   dof_overrideParams;                                       // 0x1AFE7A0(0x0080)
	struct RawConVar                                   backtrace_reporting_disconnect;                           // 0x1AFF520(0x0080)
	struct RawConVar                                   backtrace_disable;                                        // 0x1AFF5E0(0x0080)
	struct RawConVar                                   backtrace_reporting_error;                                // 0x1AFF6A0(0x0080)
	struct RawConVar                                   r_fix_decal_mirroring;                                    // 0x1AFFA50(0x0080)
	struct RawConVar                                   r_modeldecal_maxtotal;                                    // 0x1AFFAF0(0x0080)
	struct RawConVar                                   r_allow_unattached_skinned_decals;                        // 0x1AFFB90(0x0080)
	struct RawConVar                                   r_modeldecal_transform_non_rigid;                         // 0x1AFFC30(0x0080)
	struct RawConVar                                   r_deferred_decals;                                        // 0x1AFFCD0(0x0080)
	struct RawConVar                                   prop_front_to_back_opt;                                   // 0x1AFFD70(0x0080)
	struct RawConVar                                   metrichttp_max_pending_http_requests;                     // 0x1AFFF80(0x0080)
	struct RawConVar                                   metrichttp_reset_on_level_shutdown;                       // 0x1B00020(0x0080)
	struct RawConVar                                   metrichttp_enabled;                                       // 0x1B000C0(0x0080)
	struct RawConVar                                   metric_update_interval;                                   // 0x1B001C0(0x0080)
	struct RawConVar                                   metric_recent_period;                                     // 0x1B00260(0x0080)
	struct RawConVar                                   metricmanagernet_reset_on_level_shutdown;                 // 0x1B00300(0x0080)
	struct RawConVar                                   metricmanagernet_enabled;                                 // 0x1B00420(0x0080)
	struct RawConVar                                   metricmanagernet_update_interval;                         // 0x1B004C0(0x0080)
	struct RawConVar                                   perfcharts_killswitch;                                    // 0x1B00650(0x0080)
	struct RawConVar                                   perfcharts_cmetric_pin_verbosity;                         // 0x1B006F0(0x0080)
	struct RawConVar                                   perfcharts_pin_enabled;                                   // 0x1B00790(0x0080)
	struct RawConVar                                   perfcharts_pin_print;                                     // 0x1B00830(0x0080)
	struct RawConVar                                   perfcharts_heartbeat_debug;                               // 0x1B008D0(0x0080)
	struct RawConVar                                   perfcharts_heartbeat_interval;                            // 0x1B00970(0x0080)
	struct RawConVar                                   perfcharts_heartbeat_enabled;                             // 0x1B00A10(0x0080)
	struct RawConVar                                   jt_help_with_anything_ignore_preference;                  // 0x1B00AB0(0x0080)
	struct RawConVar                                   watchdog_active_during_assert_reporting;                  // 0x1B00B50(0x0080)
	struct RawConVar                                   watchdog_sleep_time_milliseconds;                         // 0x1B00BF0(0x0080)
	struct RawConVar                                   watchdog_dialog;                                          // 0x1B00C90(0x0080)
	struct RawConVar                                   watchdog_time_milliseconds;                               // 0x1B00D30(0x0080)
	struct RawConVar                                   watchdog_active_in_debugger;                              // 0x1B00DD0(0x0080)
	struct RawConVar                                   watchdog_debug;                                           // 0x1B00E70(0x0080)
	struct RawConVar                                   fatal_error_signal_abort;                                 // 0x1B01D90(0x0080)
	struct RawConVar                                   mem_saving_release_mb;                                    // 0x1B01E30(0x0080)
	struct RawConVar                                   mem_saving_trigger_mb;                                    // 0x1B01ED0(0x0080)
	struct RawConVar                                   mem_saving_use_factor;                                    // 0x1B01F70(0x0080)
	struct RawConVar                                   mem_saving_request_mb;                                    // 0x1B02010(0x0080)
	struct RawConVar                                   valve_relay_cert_refresh_threshold;                       // 0x1B020D0(0x0080)
	struct RawConVar                                   valve_relay_timeout_jitter;                               // 0x1B021F0(0x0080)
	struct RawConVar                                   valve_relay_config_refresh_time;                          // 0x1B02290(0x0080)
	struct RawConVar                                   valve_relay_debug_log_level;                              // 0x1B02330(0x0080)
	struct RawConVar                                   mem_runheapchecks;                                        // 0x1B02520(0x0080)
	struct RawConVar                                   physics_scaled_mem;                                       // 0x1B04A40(0x0080)
	struct RawConVar                                   cl_approx_footstep_origin;                                // 0x1B066A0(0x0080)
	struct RawConVar                                   cl_threaded_bone_setup;                                   // 0x1B07100(0x0080)
	struct RawConVar                                   cl_bones_incremental_blend;                               // 0x1B071A0(0x0080)
	struct RawConVar                                   cl_bones_incremental_transform;                           // 0x1B07240(0x0080)
	struct RawConVar                                   cl_interpolateSoAllAnimsLoop;                             // 0x1B072E0(0x0080)
	struct RawConVar                                   cl_skipAnimEventsOnProps;                                 // 0x1B07380(0x0080)
	struct RawConVar                                   animEvent_debug;                                          // 0x1B07420(0x0080)
	struct RawConVar                                   cl_allowAnimsToInterpolateBackward;                       // 0x1B074C0(0x0080)
	struct RawConVar                                   cl_parallel_clientside_animations;                        // 0x1B07560(0x0080)
	struct RawConVar                                   sv_teststepsimulation;                                    // 0x1B07AE0(0x0080)
	struct RawConVar                                   cl_anim_face_dist;                                        // 0x1B07B80(0x0080)
	struct RawConVar                                   clearOnAnimChange;                                        // 0x1B07C20(0x0080)
	struct RawConVar                                   cl_anim_detail_dist;                                      // 0x1B07CC0(0x0080)
	struct RawConVar                                   ragdoll_debug;                                            // 0x1B08240(0x0080)
	struct RawConVar                                   enable_skeleton_draw;                                     // 0x1B082E0(0x0080)
	struct RawConVar                                   cl_anim_sequence_transition_full_weight_optimization;     // 0x1B08380(0x0080)
	struct RawConVar                                   cl_simulateAllModelsRegardless;                           // 0x1B08420(0x0080)
	struct RawConVar                                   r_drawmodelsinzfill;                                      // 0x1B084C0(0x0080)
	struct RawConVar                                   c_threadedAnimPostData;                                   // 0x1B08560(0x0080)
	struct RawConVar                                   cl_SetupAllBones;                                         // 0x1B08600(0x0080)
	struct RawConVar                                   soundtrigger_repeat_interval;                             // 0x1B086A0(0x0080)
	struct RawConVar                                   c_dropship_ground_fx_time_interval;                       // 0x1B08740(0x0080)
	struct RawConVar                                   cl_footstep_event_max_dist_titan;                         // 0x1B087E0(0x0080)
	struct RawConVar                                   g_ragdoll_lvfadespeed;                                    // 0x1B08880(0x0080)
	struct RawConVar                                   attachment_orthogonal_warnings;                           // 0x1B08920(0x0080)
	struct RawConVar                                   animEvent_debugEnt;                                       // 0x1B089C0(0x0080)
	struct RawConVar                                   cl_ejectbrass;                                            // 0x1B08A60(0x0080)
	struct RawConVar                                   cl_ragdoll_force_fade_time_titan;                         // 0x1B08B80(0x0080)
	struct RawConVar                                   r_jiggle_bones;                                           // 0x1B08C20(0x0080)
	struct RawConVar                                   z_ragdoll_impact_strength;                                // 0x1B08CC0(0x0080)
	struct RawConVar                                   cl_always_ragdoll_radius;                                 // 0x1B08D60(0x0080)
	struct RawConVar                                   debugFootstepEffects;                                     // 0x1B08E00(0x0080)
	struct RawConVar                                   animEvent_debug_cl;                                       // 0x1B08EA0(0x0080)
	struct RawConVar                                   cl_bones_oldhack;                                         // 0x1B08F40(0x0080)
	struct RawConVar                                   cl_ragdoll_force_fade_time_local_view_player;             // 0x1B08FE0(0x0080)
	struct RawConVar                                   cl_footstep_event_max_dist;                               // 0x1B09080(0x0080)
	struct RawConVar                                   g_ragdoll_fadespeed;                                      // 0x1B09600(0x0080)
	struct RawConVar                                   cl_ragdoll_force_fade_time;                               // 0x1B096A0(0x0080)
	struct RawConVar                                   cl_anim_deferred_fire_enabled;                            // 0x1B09740(0x0080)
	struct RawConVar                                   cl_disable_ragdolls;                                      // 0x1B097E0(0x0080)
	struct RawConVar                                   cl_anim_blend_transition_dist;                            // 0x1B09880(0x0080)
	struct RawConVar                                   c_dropship_ground_fx_dist_interval;                       // 0x1B09920(0x0080)
	struct RawConVar                                   cl_anim_sounds_seek;                                      // 0x1B099C0(0x0080)
	struct RawConVar                                   sfm_record_hz;                                            // 0x1B09A60(0x0080)
	struct RawConVar                                   cl_requireAnimForAnimEventsHdr;                           // 0x1B09B00(0x0080)
	struct RawConVar                                   cl_liveapi_spectator_only;                                // 0x1B09BA0(0x0080)
	struct RawConVar                                   player_deltaAnimsMakeMeUnpredicted;                       // 0x1B09C40(0x0080)
	struct RawConVar                                   vgui_interactive;                                         // 0x1B09CE0(0x0080)
	struct RawConVar                                   chasecam_distanceMax_override;                            // 0x1B09E00(0x0080)
	struct RawConVar                                   cl_draw_player_model;                                     // 0x1B0BBE0(0x0080)
	struct RawConVar                                   cl_NotifyAllLevelAssetsLoaded_endframe;                   // 0x1B0C160(0x0080)
	struct RawConVar                                   shake_offsetFactor_titan;                                 // 0x1B0C200(0x0080)
	struct RawConVar                                   freecam_swallowButtonInput;                               // 0x1B0C2A0(0x0080)
	struct RawConVar                                   automantle_view_yaw_max;                                  // 0x1B0C340(0x0080)
	struct RawConVar                                   cl_disableClubTagForPrivateMatch;                         // 0x1B0C8C0(0x0080)
	struct RawConVar                                   traversal_window_view_pitch_min;                          // 0x1B0C960(0x0080)
	struct RawConVar                                   shake_angleFactor_titan;                                  // 0x1B0CA00(0x0080)
	struct RawConVar                                   durango_voice_chat_team_only;                             // 0x1B0CAA0(0x0080)
	struct RawConVar                                   automantle_view_high_yaw_max;                             // 0x1B0D020(0x0080)
	struct RawConVar                                   automantle_view_correction_speed;                         // 0x1B0D140(0x0080)
	struct RawConVar                                   ziprail_roll_strength;                                    // 0x1B0E080(0x0080)
	struct RawConVar                                   traversal_window_view_pitch_max;                          // 0x1B0E130(0x0080)
	struct RawConVar                                   automantle_view_pitch_max;                                // 0x1B0E1D0(0x0080)
	struct RawConVar                                   player_showEyePosition;                                   // 0x1B0E270(0x0080)
	struct RawConVar                                   cl_player_fullupdate_predicted_origin_fix;                // 0x1B0E7F0(0x0080)
	struct RawConVar                                   cl_precache_player_models;                                // 0x1B0E890(0x0080)
	struct RawConVar                                   fov_disableAbilityScaling;                                // 0x1B0E9B0(0x0080)
	struct RawConVar                                   rotate_ents;                                              // 0x1B0EA50(0x0080)
	struct RawConVar                                   cl_view_cone_debug;                                       // 0x1B0EAF0(0x0080)
	struct RawConVar                                   rodeo_camera_smooth_enable;                               // 0x1B0F070(0x0080)
	struct RawConVar                                   player_viewchange_debug_yaw;                              // 0x1B0F110(0x0080)
	struct RawConVar                                   shake_offsetFactor_human;                                 // 0x1B0F1B0(0x0080)
	struct RawConVar                                   player_doJetwashEffects;                                  // 0x1B0F250(0x0080)
	struct RawConVar                                   cl_smooth_debug;                                          // 0x1B0F7D0(0x0080)
	struct RawConVar                                   cl_smooth;                                                // 0x1B0F880(0x0080)
	struct RawConVar                                   player_respawnInputDebounceDuration;                      // 0x1B0F920(0x0080)
	struct RawConVar                                   player_viewchange_debug_pitch;                            // 0x1B0FA40(0x0080)
	struct RawConVar                                   zipline_roll_debug_draw;                                  // 0x1B10040(0x0080)
	struct RawConVar                                   spectator_command_interval;                               // 0x1B100E0(0x0080)
	struct RawConVar                                   cl_view_cone;                                             // 0x1B10180(0x0080)
	struct RawConVar                                   ziprail_roll_debug;                                       // 0x1B10220(0x0080)
	struct RawConVar                                   traversal_window_yaw_max;                                 // 0x1B10340(0x0080)
	struct RawConVar                                   zipline_roll_minSpeedFraction;                            // 0x1B103E0(0x0080)
	struct RawConVar                                   weapon_friendly_fire_prevent_ui;                          // 0x1B10480(0x0080)
	struct RawConVar                                   player_highFrequencyThinkDistance;                        // 0x1B105A0(0x0080)
	struct RawConVar                                   shake_angleFactor_human;                                  // 0x1B10640(0x0080)
	struct RawConVar                                   player_debugPredictedPosition;                            // 0x1B106E0(0x0080)
	struct RawConVar                                   cl_restoreSimulationTimeBase;                             // 0x1B10780(0x0080)
	struct RawConVar                                   player_viewchange_debug_roll;                             // 0x1B10820(0x0080)
	struct RawConVar                                   cl_smoothtime;                                            // 0x1B108C0(0x0080)
	struct RawConVar                                   automantle_view_pitch_min;                                // 0x1B10E40(0x0080)
	struct RawConVar                                   rodeo_camera_smooth_blend_out_time;                       // 0x1B10EE0(0x0080)
	struct RawConVar                                   boost_jetwash_prediction_factor;                          // 0x1B10F80(0x0080)
	struct RawConVar                                   thirdperson_override;                                     // 0x1B11020(0x0080)
	struct RawConVar                                   first_person_proxy_blend_distance;                        // 0x1B110C0(0x0080)
	struct RawConVar                                   vfog_show_volume_outline;                                 // 0x1B111E0(0x0080)
	struct RawConVar                                   wind_draw_emitters;                                       // 0x1B117E0(0x0080)
	struct RawConVar                                   csm_frustum_draw_lock;                                    // 0x1B11900(0x0080)
	struct RawConVar                                   csm_frustum_draw;                                         // 0x1B119A0(0x0080)
	struct RawConVar                                   shadow_dbg_cones;                                         // 0x1B11A50(0x0080)
	struct RawConVar                                   voice_late_update;                                        // 0x1B11AF0(0x0080)
	struct RawConVar                                   shadow_lobby_player_intersect_scalar;                     // 0x1B11BB0(0x0080)
	struct RawConVar                                   v_centermove;                                             // 0x1B11C50(0x0080)
	struct RawConVar                                   csm_culling_use_inclusion_planes;                         // 0x1B11CF0(0x0080)
	struct RawConVar                                   cl_predict_basetoggles;                                   // 0x1B11D90(0x0080)
	struct RawConVar                                   sound_volume_sfx;                                         // 0x1B11E30(0x0080)
	struct RawConVar                                   roamingcam_rollSpeed;                                     // 0x1B11ED0(0x0080)
	struct RawConVar                                   csm_dropsequence_adjustment;                              // 0x1B11FE0(0x0080)
	struct RawConVar                                   csm_renderable_shadows;                                   // 0x1B120A0(0x0080)
	struct RawConVar                                   shadow_pcf_mode;                                          // 0x1B121C0(0x0080)
	struct RawConVar                                   roamingcam_moveCollisionThreshold;                        // 0x1B122A0(0x0080)
	struct RawConVar                                   prop_survivalSkipsAnimData;                               // 0x1B12360(0x0080)
	struct RawConVar                                   delayPostSnapshotNotificationsToAfterInterpolation;       // 0x1B12400(0x0080)
	struct RawConVar                                   viewmodelShake;                                           // 0x1B124A0(0x0080)
	struct RawConVar                                   pixvis_spew;                                              // 0x1B12540(0x0080)
	struct RawConVar                                   shadow_dynamic_spot_budgets;                              // 0x1B125E0(0x0080)
	struct RawConVar                                   r_nearz;                                                  // 0x1B12680(0x0080)
	struct RawConVar                                   cl_gib_lifetime;                                          // 0x1B12720(0x0080)
	struct RawConVar                                   weapon_poseParamMaxDistance;                              // 0x1B127C0(0x0080)
	struct RawConVar                                   csm_terrain_shadows;                                      // 0x1B12860(0x0080)
	struct RawConVar                                   pixvis_enable;                                            // 0x1B12900(0x0080)
	struct RawConVar                                   gamepad_custom_deadzone_out;                              // 0x1B129A0(0x0080)
	struct RawConVar                                   shadow_dbg_cone_depthtest;                                // 0x1B12A40(0x0080)
	struct RawConVar                                   screen_indicator_ellipse_width;                           // 0x1B12AF0(0x0080)
	struct RawConVar                                   static_shadow;                                            // 0x1B12C10(0x0080)
	struct RawConVar                                   monitor_snapshot_frame_delay;                             // 0x1B12CB0(0x0080)
	struct RawConVar                                   vsm_ignore_face_planes;                                   // 0x1B12D50(0x0080)
	struct RawConVar                                   gpu_mem_level;                                            // 0x1B12DF0(0x0080)
	struct RawConVar                                   gamepad_custom_ads_turn_pitch;                            // 0x1B12EB0(0x0080)
	struct RawConVar                                   max_tweak_shadow_updates;                                 // 0x1B137B0(0x0080)
	struct RawConVar                                   roamingcam_forwardSpeed;                                  // 0x1B13A50(0x0080)
	struct RawConVar                                   gamepad_aim_assist_hip_high_power_scopes;                 // 0x1B13B70(0x0080)
	struct RawConVar                                   roamingcam_smoothtime;                                    // 0x1B13EA0(0x0080)
	struct RawConVar                                   shadow_filter_maxstep;                                    // 0x1B192C0(0x0080)
	struct RawConVar                                   shadow_maxdynamic;                                        // 0x1B199C0(0x0080)
	struct RawConVar                                   cl_disable_splitscreen_cpu_level_cfgs_in_pip;             // 0x1B19F40(0x0080)
	struct RawConVar                                   cl_allowABSDuringSnapshotScriptCalls;                     // 0x1B19FE0(0x0080)
	struct RawConVar                                   gamepad_custom_assist_on;                                 // 0x1B1A080(0x0080)
	struct RawConVar                                   csm_use_env_light_direction;                              // 0x1B1A600(0x0080)
	struct RawConVar                                   csm_rot_x;                                                // 0x1B1A6A0(0x0080)
	struct RawConVar                                   staticProp_buildlists_on_worker;                          // 0x1B1A740(0x0080)
	struct RawConVar                                   sound_volume;                                             // 0x1B1A7E0(0x0080)
	struct RawConVar                                   viewportscale;                                            // 0x1B1A880(0x0080)
	struct RawConVar                                   csm_ignore_edge_planes;                                   // 0x1B1A920(0x0080)
	struct RawConVar                                   static_shadow_uses_shadow_lod;                            // 0x1B1A9C0(0x0080)
	struct RawConVar                                   cl_use_target_visibility_collision_group;                 // 0x1B1AA60(0x0080)
	struct RawConVar                                   csm_texel_size_cascade_2;                                 // 0x1B1B100(0x0080)
	struct RawConVar                                   gamepad_custom_ads_turn_yaw;                              // 0x1B1B1A0(0x0080)
	struct RawConVar                                   monitor_zfar_default;                                     // 0x1B1B240(0x0080)
	struct RawConVar                                   shake_viewmodelFactor_human;                              // 0x1B1B890(0x0080)
	struct RawConVar                                   roamingcam_cameraspacemotion;                             // 0x1B1B930(0x0080)
	struct RawConVar                                   shadow_noLOD;                                             // 0x1B1B9D0(0x0080)
	struct RawConVar                                   screen_indicator_back_range;                              // 0x1B1BA70(0x0080)
	struct RawConVar                                   csm_fadeModels;                                           // 0x1B1BB10(0x0080)
	struct RawConVar                                   gatherprops_no_wait;                                      // 0x1B1C610(0x0080)
	struct RawConVar                                   r_particles_early_distance_cull;                          // 0x1B1D5A0(0x0080)
	struct RawConVar                                   mem_level;                                                // 0x1B1DB20(0x0080)
	struct RawConVar                                   shadow_max_old_dynamic;                                   // 0x1B1DBC0(0x0080)
	struct RawConVar                                   v_centerspeed;                                            // 0x1B1DC60(0x0080)
	struct RawConVar                                   roamingcam_forwardSpeed_slow;                             // 0x1B1DD00(0x0080)
	struct RawConVar                                   roamingcam_downSpeedMult;                                 // 0x1B1DDA0(0x0080)
	struct RawConVar                                   static_shadow_expand_z;                                   // 0x1B1DEC0(0x0080)
	struct RawConVar                                   screen_indicator_pitch_limit;                             // 0x1B1DF60(0x0080)
	struct RawConVar                                   csm_rot_y;                                                // 0x1B1E080(0x0080)
	struct RawConVar                                   gamepad_custom_hip_pitch;                                 // 0x1B1E170(0x0080)
	struct RawConVar                                   c_dropship_rope_range;                                    // 0x1B1E210(0x0080)
	struct RawConVar                                   mat_autoexposure_disable_controllers;                     // 0x1B1E2D0(0x0080)
	struct RawConVar                                   nx_viewportscale_max_handheld_lobby;                      // 0x1B1E3B0(0x0080)
	struct RawConVar                                   screen_indicator_pitch_scale;                             // 0x1B1E4D0(0x0080)
	struct RawConVar                                   model_defaultFadeDistScale;                               // 0x1B1EAD0(0x0080)
	struct RawConVar                                   csm_force_no_csm_in_reflections;                          // 0x1B1ECB0(0x0080)
	struct RawConVar                                   csm_debug_2d;                                             // 0x1B1EDD0(0x0080)
	struct RawConVar                                   csm_texel_size_cascade_0;                                 // 0x1B1F350(0x0080)
	struct RawConVar                                   gamepad_deadzone_index_move;                              // 0x1B1F8F0(0x0080)
	struct RawConVar                                   nx_viewportscale_min_handheld_lobby;                      // 0x1B1FA00(0x0080)
	struct RawConVar                                   shadow_default_filter_size;                               // 0x1B1FAA0(0x0080)
	struct RawConVar                                   static_shadow_shrink_culler;                              // 0x1B1FB60(0x0080)
	struct RawConVar                                   shadow_dbg_draw;                                          // 0x1B1FC00(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_0;                // 0x1B1FCA0(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_1;                // 0x1B1FD40(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_2;                // 0x1B1FDE0(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_3;                // 0x1B1FE80(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_4;                // 0x1B1FF20(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_5;                // 0x1B1FFC0(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_6;                // 0x1B20060(0x0080)
	struct RawConVar                                   gamepad_ads_advanced_sensitivity_scalar_7;                // 0x1B20100(0x0080)
	struct RawConVar                                   cl_ShowBoneSetupEnts;                                     // 0x1B201A0(0x0080)
	struct RawConVar                                   sound_classic_music;                                      // 0x1B20840(0x0080)
	struct RawConVar                                   c_dropship_rope_debug;                                    // 0x1B208E0(0x0080)
	struct RawConVar                                   EADP_AcceptInvite_Check_isAcceptingInvite;                // 0x1B20980(0x0080)
	struct RawConVar                                   roamingcam_serverupdateinterval;                          // 0x1B20A20(0x0080)
	struct RawConVar                                   csm_rot_override;                                         // 0x1B20B00(0x0080)
	struct RawConVar                                   cl_events_ignore_invalidate;                              // 0x1B20BA0(0x0080)
	struct RawConVar                                   origin_igo_muting_sound;                                  // 0x1B20C40(0x0080)
	struct RawConVar                                   cl_updatedirty_early;                                     // 0x1B20CE0(0x0080)
	struct RawConVar                                   shadow_depth_upres_factor_max;                            // 0x1B20D80(0x0080)
	struct RawConVar                                   static_shadow_good_merge_ratio;                           // 0x1B20EA0(0x0080)
	struct RawConVar                                   static_shadow_debug_dirty_rects;                          // 0x1B20F40(0x0080)
	struct RawConVar                                   mat_colcorrection_editor;                                 // 0x1B20FE0(0x0080)
	struct RawConVar                                   csm_min_z_offset;                                         // 0x1B21080(0x0080)
	struct RawConVar                                   mat_colcorrection_forceentitiesclientside;                // 0x1B21620(0x0080)
	struct RawConVar                                   shadow_always_update;                                     // 0x1B216C0(0x0080)
	struct RawConVar                                   eventseq_debug;                                           // 0x1B21760(0x0080)
	struct RawConVar                                   shadow_min_count_smallest;                                // 0x1B21800(0x0080)
	struct RawConVar                                   gamepad_custom_ads_turn_delay;                            // 0x1B218A0(0x0080)
	struct RawConVar                                   miles_flip_active_window_logic;                           // 0x1B21940(0x0080)
	struct RawConVar                                   r_enableOriginSort;                                       // 0x1B21A60(0x0080)
	struct RawConVar                                   shadow_tools_depth_upres_factor_max;                      // 0x1B21B80(0x0080)
	struct RawConVar                                   highlight_deferred_update;                                // 0x1B21C20(0x0080)
	struct RawConVar                                   r_ditherFadeShadows;                                      // 0x1B21CC0(0x0080)
	struct RawConVar                                   csm_debug_vis_lo_range;                                   // 0x1B21D60(0x0080)
	struct RawConVar                                   gamepad_custom_assist_style;                              // 0x1B21E00(0x0080)
	struct RawConVar                                   glass_break_required_speed;                               // 0x1B21EA0(0x0080)
	struct RawConVar                                   csm_depth_bias;                                           // 0x1B21FD0(0x0080)
	struct RawConVar                                   report_clientthinklist;                                   // 0x1B22220(0x0080)
	struct RawConVar                                   csm_debug_culling;                                        // 0x1B222C0(0x0080)
	struct RawConVar                                   r_sort_trans_debug_dist;                                  // 0x1B22360(0x0080)
	struct RawConVar                                   sound_volume_music_lobby;                                 // 0x1B22900(0x0080)
	struct RawConVar                                   shadow_esm_enable;                                        // 0x1B22A10(0x0080)
	struct RawConVar                                   shadow_cull_in_lobby;                                     // 0x1B22B30(0x0080)
	struct RawConVar                                   csm_texel_size_cascade_1;                                 // 0x1B22BF0(0x0080)
	struct RawConVar                                   net_RunInvalidatePhysics;                                 // 0x1B22C90(0x0080)
	struct RawConVar                                   cl_allowABSCalculationDuringSnapshotScriptCalls;          // 0x1B22D30(0x0080)
	struct RawConVar                                   static_shadow_bounds_per_env;                             // 0x1B22DD0(0x0080)
	struct RawConVar                                   roamingcam_viewsmoothing;                                 // 0x1B22E70(0x0080)
	struct RawConVar                                   sound_volume_dialogue_sp;                                 // 0x1B22F10(0x0080)
	struct RawConVar                                   sound_volume_dialogue;                                    // 0x1B23030(0x0080)
	struct RawConVar                                   sound_volume_music_game_sp;                               // 0x1B23650(0x0080)
	struct RawConVar                                   r_mapextents;                                             // 0x1B23710(0x0080)
	struct RawConVar                                   csm_ignore_face_planes;                                   // 0x1B23CB0(0x0080)
	struct RawConVar                                   gamepad_aim_assist_hip_low_power_scopes;                  // 0x1B23DD0(0x0080)
	struct RawConVar                                   nx_viewportscale_min_handheld;                            // 0x1B244E0(0x0080)
	struct RawConVar                                   roamingcam_sideSpeedMult;                                 // 0x1B24580(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_0;                                  // 0x1B24620(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_1;                                  // 0x1B246C0(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_2;                                  // 0x1B24760(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_3;                                  // 0x1B24800(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_4;                                  // 0x1B248A0(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_5;                                  // 0x1B24940(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_6;                                  // 0x1B249E0(0x0080)
	struct RawConVar                                   gamepad_aim_speed_ads_7;                                  // 0x1B24A80(0x0080)
	struct RawConVar                                   leaf_threadedRecompute_batchSize;                         // 0x1B24B20(0x0080)
	struct RawConVar                                   shadow_max_spot_updates;                                  // 0x1B24BC0(0x0080)
	struct RawConVar                                   gamepad_deadzone_index_look;                              // 0x1B24C60(0x0080)
	struct RawConVar                                   gamepad_custom_enabled;                                   // 0x1B24D00(0x0080)
	struct RawConVar                                   gamepad_custom_hip_yaw;                                   // 0x1B25480(0x0080)
	struct RawConVar                                   sound_volume_music_game;                                  // 0x1B256E0(0x0080)
	struct RawConVar                                   gamepad_use_per_scope_sensitivity_scalars;                // 0x1B25780(0x0080)
	struct RawConVar                                   roamingcam_movesmoothing;                                 // 0x1B25820(0x0080)
	struct RawConVar                                   EADP_RTM_DELAY_QUERRY_SCRIPT_SECONDS;                     // 0x1B25980(0x0080)
	struct RawConVar                                   gamepad_aim_assist_ads_low_power_scopes;                  // 0x1B25A20(0x0080)
	struct RawConVar                                   cl_runWeaponCloneThinkWhenHidden;                         // 0x1B25AC0(0x0080)
	struct RawConVar                                   csm_world_shadow_meshes;                                  // 0x1B26060(0x0080)
	struct RawConVar                                   csm_culling_use_exclusion_planes;                         // 0x1B26100(0x0080)
	struct RawConVar                                   roamingcam_movecollision;                                 // 0x1B26B80(0x0080)
	struct RawConVar                                   r_ditherFade;                                             // 0x1B26C20(0x0080)
	struct RawConVar                                   shadow_tools_min_count_smallest;                          // 0x1B27710(0x0080)
	struct RawConVar                                   gamepad_custom_curve;                                     // 0x1B277B0(0x0080)
	struct RawConVar                                   build_nonmerged;                                          // 0x1B278D0(0x0080)
	struct RawConVar                                   cpu_level;                                                // 0x1B27970(0x0080)
	struct RawConVar                                   shadow_drawfrustum;                                       // 0x1B27A10(0x0080)
	struct RawConVar                                   gamepad_custom_deadzone_in;                               // 0x1B27AB0(0x0080)
	struct RawConVar                                   vsm_culling;                                              // 0x1B27B90(0x0080)
	struct RawConVar                                   gamepad_aim_speed;                                        // 0x1B27C30(0x0080)
	struct RawConVar                                   csm_cascade_res;                                          // 0x1B27CD0(0x0080)
	struct RawConVar                                   cl_showClanTags;                                          // 0x1B27D70(0x0080)
	struct RawConVar                                   shadow_tools_depth_dimen_min;                             // 0x1B27E70(0x0080)
	struct RawConVar                                   clubs_showInvites;                                        // 0x1B27F10(0x0080)
	struct RawConVar                                   gamepad_custom_hip_turn_yaw;                              // 0x1B27FB0(0x0080)
	struct RawConVar                                   nx_subtile_override;                                      // 0x1B28170(0x0080)
	struct RawConVar                                   sound_ambientgeneric_allow_refresh;                       // 0x1B28210(0x0080)
	struct RawConVar                                   leaf_threadedRecompute;                                   // 0x1B28330(0x0080)
	struct RawConVar                                   static_shadow_good_merge_score;                           // 0x1B28410(0x0080)
	struct RawConVar                                   fx_debug;                                                 // 0x1B284B0(0x0080)
	struct RawConVar                                   nx_viewportscale_max_handheld;                            // 0x1B28AB0(0x0080)
	struct RawConVar                                   gamepad_use_per_scope_ads_settings;                       // 0x1B28B50(0x0080)
	struct RawConVar                                   gamepad_aim_assist_ads_high_power_scopes;                 // 0x1B28C10(0x0080)
	struct RawConVar                                   gamepad_look_curve;                                       // 0x1B28CB0(0x0080)
	struct RawConVar                                   viewmodelShake_sourceRollRange;                           // 0x1B28D50(0x0080)
	struct RawConVar                                   cl_demoviewoverride;                                      // 0x1B28DF0(0x0080)
	struct RawConVar                                   gamepad_custom_ads_pitch;                                 // 0x1B28E90(0x0080)
	struct RawConVar                                   shadow_update_culling;                                    // 0x1B28F30(0x0080)
	struct RawConVar                                   sound_without_focus;                                      // 0x1B28FD0(0x0080)
	struct RawConVar                                   csm_z_cover_world;                                        // 0x1B29070(0x0080)
	struct RawConVar                                   csm_texel_size_cascade_onecascade;                        // 0x1B291C0(0x0080)
	struct RawConVar                                   screen_indicator_ellipse_height;                          // 0x1B29260(0x0080)
	struct RawConVar                                   csm_world_shadows;                                        // 0x1B29320(0x0080)
	struct RawConVar                                   dvs_enable_in_lobby;                                      // 0x1B29440(0x0080)
	struct RawConVar                                   c_dropship_rope_events;                                   // 0x1B294E0(0x0080)
	struct RawConVar                                   r_visualizeproplightcaching;                              // 0x1B2BCA0(0x0080)
	struct RawConVar                                   print_timeprefix;                                         // 0x1B2BDD0(0x0080)
	struct RawConVar                                   r_dump_sticker_load_state;                                // 0x1B2BE70(0x0080)
	struct RawConVar                                   shadow_max_dynamic_lobby;                                 // 0x1B2C010(0x0080)
	struct RawConVar                                   gamepad_aim_assist_melee;                                 // 0x1B2C640(0x0080)
	struct RawConVar                                   mat_colcorrection_disableentities;                        // 0x1EAC7A0(0x0080)
	struct RawConVar                                   csm_ignore_cascade12;                                     // 0x1EAC840(0x0080)
	struct RawConVar                                   c_dropship_rope_magnitude;                                // 0x1EAC8E0(0x0080)
	struct RawConVar                                   csm0_on_worker;                                           // 0x1EAC980(0x0080)
	struct RawConVar                                   gamepad_custom_hip_turn_delay;                            // 0x1EACA20(0x0080)
	struct RawConVar                                   shadow_lobby_mode_allowed;                                // 0x1EACB40(0x0080)
	struct RawConVar                                   prop_lightweightPropsSkipAnimData;                        // 0x1EACBE0(0x0080)
	struct RawConVar                                   csm_debug_vis_hi_range;                                   // 0x1EACCA0(0x0080)
	struct RawConVar                                   shadow_tools_mode;                                        // 0x1EACD40(0x0080)
	struct RawConVar                                   shake_viewmodelFactor_ads_titan;                          // 0x1EACE60(0x0080)
	struct RawConVar                                   shadow_show_spot_udpate_infos;                            // 0x1EACF00(0x0080)
	struct RawConVar                                   shadow_combine_copy_with_filter;                          // 0x1EAD020(0x0080)
	struct RawConVar                                   sprint_view_shake_style;                                  // 0x1EAD0C0(0x0080)
	struct RawConVar                                   shadow_depth_dimen_min;                                   // 0x1EADAF0(0x0080)
	struct RawConVar                                   gamepad_custom_ads_yaw;                                   // 0x1EADB90(0x0080)
	struct RawConVar                                   cl_gib_attack_dir_scale;                                  // 0x1EADD10(0x0080)
	struct RawConVar                                   shake_viewmodelFactor_ads_human;                          // 0x1EADDB0(0x0080)
	struct RawConVar                                   shake_viewmodelFactor_titan;                              // 0x1EADE50(0x0080)
	struct RawConVar                                   shadow_format_16_bit;                                     // 0x1EADEF0(0x0080)
	struct RawConVar                                   gamepad_custom_hip_turn_time;                             // 0x1EADFB0(0x0080)
	struct RawConVar                                   csm_max_z_offset;                                         // 0x1EAE050(0x0080)
	struct RawConVar                                   csm_rope_shadows;                                         // 0x1EAE0F0(0x0080)
	struct RawConVar                                   vsm_ignore_edge_planes;                                   // 0x1EAE190(0x0080)
	struct RawConVar                                   csm_dropsequence_adjusted_coverage;                       // 0x1EAE230(0x0080)
	struct RawConVar                                   shadow_max_downsizing_spot_updates;                       // 0x1EAE2D0(0x0080)
	struct RawConVar                                   gamepad_custom_hip_turn_pitch;                            // 0x1EAE4A0(0x0080)
	struct RawConVar                                   roamingcam_forwardSpeed_fast;                             // 0x1EAE540(0x0080)
	struct RawConVar                                   sound_volume_sfx_sp;                                      // 0x1EAE5E0(0x0080)
	struct RawConVar                                   static_shadow_prop_min_size;                              // 0x1EAE680(0x0080)
	struct RawConVar                                   csm_shadow_split_lerp_factor_range;                       // 0x1EAE7A0(0x0080)
	struct RawConVar                                   sound_volume_voice;                                       // 0x1EAE840(0x0080)
	struct RawConVar                                   cl_RunClientConnectScripts_Before_ProcessOnDataChangedEvents;// 0x1EAE8E0(0x0080)
	struct RawConVar                                   csm_culling_use_base_planes;                              // 0x1EAE9A0(0x0080)
	struct RawConVar                                   particle_dlights_enable;                                  // 0x1EAEA40(0x0080)
	struct RawConVar                                   gamepad_custom_ads_turn_time;                             // 0x1EAEAE0(0x0080)
	struct RawConVar                                   r_sort_trans_debug;                                       // 0x1EAEB80(0x0080)
	struct RawConVar                                   cl_drawhud;                                               // 0x1EAEC20(0x0080)
	struct RawConVar                                   gpu_level;                                                // 0x1EB7330(0x0080)
	struct RawConVar                                   shadow_info;                                              // 0x1EB7450(0x0080)
	struct RawConVar                                   cl_interpolation_before_prediction;                       // 0x1EB74F0(0x0080)
	struct RawConVar                                   ss_viewmodelfov;                                          // 0x1EB7590(0x0080)
	struct RawConVar                                   static_shadow_depth_bias_scale;                           // 0x1EB76B0(0x0080)
	struct RawConVar                                   r_drawallrenderables;                                     // 0x1EB7750(0x0080)
	struct RawConVar                                   model_defaultFadeDistMin;                                 // 0x1EB7810(0x0080)
	struct RawConVar                                   shadow_multisampled;                                      // 0x1EB78B0(0x0080)
	struct RawConVar                                   particle_dlights_spew;                                    // 0x1EB7950(0x0080)
	struct RawConVar                                   cl_leafsystemvis;                                         // 0x1EB79F0(0x0080)
	struct RawConVar                                   pvs_start_early;                                          // 0x1EB7A90(0x0080)
	struct RawConVar                                   r_farz;                                                   // 0x1EB7BB0(0x0080)
	struct RawConVar                                   sound_num_speakers;                                       // 0x1EB7C50(0x0080)
	struct RawConVar                                   csm_culling_use_planes;                                   // 0x1EB7D50(0x0080)
	struct RawConVar                                   cl_viewmodel_pre_animate;                                 // 0x1EB7DF0(0x0080)
	struct RawConVar                                   cl_async_bone_setup;                                      // 0x1EB8370(0x0080)
	struct RawConVar                                   model_fadeRangeFraction;                                  // 0x1EB8470(0x0080)
	struct RawConVar                                   model_fadeRangeFractionNear;                              // 0x1EB8510(0x0080)
	struct RawConVar                                   locator_background_border_thickness;                      // 0x1EB85B0(0x0080)
	struct RawConVar                                   hudchat_text_to_speech_max_age;                           // 0x1EB86D0(0x0080)
	struct RawConVar                                   in_usekeyboardsampletime;                                 // 0x1EB8770(0x0080)
	struct RawConVar                                   hudchat_clear_on_hide;                                    // 0x1EB8A70(0x0080)
	struct RawConVar                                   r_wave_fx_debug_emitters;                                 // 0x1EB8B90(0x0080)
	struct RawConVar                                   rope_wind_dist;                                           // 0x1EB8C30(0x0080)
	struct RawConVar                                   gamepad_toggle_ads;                                       // 0x1EB8CD0(0x0080)
	struct RawConVar                                   locator_split_len;                                        // 0x1EB8DF0(0x0080)
	struct RawConVar                                   cam_pitchlock_pitchWiggleRoom;                            // 0x1EB8E90(0x0080)
	struct RawConVar                                   gamepad_toggle_survivalSlot_to_weaponInspect;             // 0x1EB8FB0(0x0080)
	struct RawConVar                                   cl_yawspeed;                                              // 0x1EB9050(0x0080)
	struct RawConVar                                   c_orthowidth;                                             // 0x1EB9170(0x0080)
	struct RawConVar                                   rope_wiggle_rotate_speed;                                 // 0x1EB9290(0x0080)
	struct RawConVar                                   hudchat_retain_input_state;                               // 0x1EB93B0(0x0080)
	struct RawConVar                                   ordnanceSwapSelectCooldown;                               // 0x1EB9450(0x0080)
	struct RawConVar                                   hudchat_text_check_teams;                                 // 0x1EB94F0(0x0080)
	struct RawConVar                                   locator_background_thickness_y;                           // 0x1EB9590(0x0080)
	struct RawConVar                                   rope_wiggle_harmonic_falloff;                             // 0x1EB96B0(0x0080)
	struct RawConVar                                   cam_pitchLock_feetRelative;                               // 0x1EB9850(0x0080)
	struct RawConVar                                   joy_advaxisu;                                             // 0x1EB9970(0x0080)
	struct RawConVar                                   miles_soundscape_skipfloors_distance;                     // 0x1EB9C10(0x0080)
	struct RawConVar                                   c_maxpitch;                                               // 0x1EB9D30(0x0080)
	struct RawConVar                                   cam_idealdist;                                            // 0x1EBC070(0x0080)
	struct RawConVar                                   miles_soundscape_imgui;                                   // 0x1EBC110(0x0080)
	struct RawConVar                                   cam_pitchlock_phase;                                      // 0x1EBC230(0x0080)
	struct RawConVar                                   r_wave_fx_view_radius;                                    // 0x1EBC930(0x0080)
	struct RawConVar                                   rope_parallelMeshBuilder;                                 // 0x1EBCAB0(0x0080)
	struct RawConVar                                   locator_target_offset_y;                                  // 0x1EBCBD0(0x0080)
	struct RawConVar                                   cam_pitchlock_pitchRange;                                 // 0x1EBCC70(0x0080)
	struct RawConVar                                   hover_vehicle_invisible_when_camera_is_too_close;         // 0x1EBCD10(0x0080)
	struct RawConVar                                   cam_showangles;                                           // 0x1EBD3C0(0x0080)
	struct RawConVar                                   hudchat_visibility;                                       // 0x1EBD460(0x0080)
	struct RawConVar                                   c_maxdistance;                                            // 0x1EBD500(0x0080)
	struct RawConVar                                   locator_background_border_color;                          // 0x1EBD5A0(0x0080)
	struct RawConVar                                   sidearmSwapSelectCooldown;                                // 0x1EBD7C0(0x0080)
	struct RawConVar                                   miles_soundscape_skipfloors;                              // 0x1EBDA60(0x0080)
	struct RawConVar                                   cc_timeshift_norepeat;                                    // 0x1EBE0E0(0x0080)
	struct RawConVar                                   real_time_update_dt;                                      // 0x1EBE180(0x0080)
	struct RawConVar                                   TextDataFromCommunityOnlyInLobby;                         // 0x1EBE2A0(0x0080)
	struct RawConVar                                   hudchat_transition_message_mode_fade_duration;            // 0x1EBE3C0(0x0080)
	struct RawConVar                                   r_wave_fx_enabled;                                        // 0x1EBE4E0(0x0080)
	struct RawConVar                                   rope_shake;                                               // 0x1EBE580(0x0080)
	struct RawConVar                                   hudchat_new_message_fade_duration;                        // 0x1EBE620(0x0080)
	struct RawConVar                                   cam_collision;                                            // 0x1EBE860(0x0080)
	struct RawConVar                                   miles_soundscape_skipfloors_offset;                       // 0x1EBE900(0x0080)
	struct RawConVar                                   locator_fade_time;                                        // 0x1EBEA20(0x0080)
	struct RawConVar                                   fx_glass_velocity_cap;                                    // 0x1EBEB40(0x0080)
	struct RawConVar                                   locator_lerp_rest;                                        // 0x1EBEBE0(0x0080)
	struct RawConVar                                   mouse_use_per_scope_sensitivity_scalars;                  // 0x1EBECD0(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_0;                        // 0x1EBED70(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_1;                        // 0x1EBEE10(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_2;                        // 0x1EBEEB0(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_3;                        // 0x1EBEF50(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_4;                        // 0x1EBEFF0(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_5;                        // 0x1EBF090(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_6;                        // 0x1EBF130(0x0080)
	struct RawConVar                                   mouse_zoomed_sensitivity_scalar_7;                        // 0x1EBF1D0(0x0080)
	struct RawConVar                                   glass_shatter_use_real_direction;                         // 0x1EBF270(0x0080)
	struct RawConVar                                   m_invert_pitch;                                           // 0x1EBF310(0x0080)
	struct RawConVar                                   hudchat_play_text_to_speech;                              // 0x1EBF3B0(0x0080)
	struct RawConVar                                   r_ropetranslucent;                                        // 0x1EBF450(0x0080)
	struct RawConVar                                   rope_wiggle_magnitude_tight;                              // 0x1EBF4F0(0x0080)
	struct RawConVar                                   c_mindistance;                                            // 0x1EBF610(0x0080)
	struct RawConVar                                   joy_movement_stick;                                       // 0x1EBF6B0(0x0080)
	struct RawConVar                                   cam_pitchlock_on;                                         // 0x1EBFDB0(0x0080)
	struct RawConVar                                   locator_background_color;                                 // 0x1EBFF50(0x0080)
	struct RawConVar                                   miles_soundscape_skipfloors_mode;                         // 0x1EC0070(0x0080)
	struct RawConVar                                   cc_text_size;                                             // 0x1EC0190(0x0080)
	struct RawConVar                                   locator_background_shift_x;                               // 0x1EC0230(0x0080)
	struct RawConVar                                   glass_shatter_force_scale;                                // 0x1EC0550(0x0080)
	struct RawConVar                                   m_acceleration;                                           // 0x1EC0670(0x0080)
	struct RawConVar                                   locator_background_thickness_x;                           // 0x1EC0F20(0x0080)
	struct RawConVar                                   locator_background_shift_y;                               // 0x1EC1040(0x0080)
	struct RawConVar                                   cc_max_duration;                                          // 0x1EC17E0(0x0080)
	struct RawConVar                                   locator_lerp_speed;                                       // 0x1EC1900(0x0080)
	struct RawConVar                                   locator_split_maxwide_percent;                            // 0x1EC1B60(0x0080)
	struct RawConVar                                   thirdperson_mayamode;                                     // 0x1EC1C00(0x0080)
	struct RawConVar                                   miles_listener_soundscape_roof_offset;                    // 0x1EC1CA0(0x0080)
	struct RawConVar                                   cc_minvisibleitems;                                       // 0x1EC1DC0(0x0080)
	struct RawConVar                                   c_minpitch;                                               // 0x1EC24C0(0x0080)
	struct RawConVar                                   gameCursor_ModeActive;                                    // 0x1EC25E0(0x0080)
	struct RawConVar                                   r_drawtracers;                                            // 0x1EC27B0(0x0080)
	struct RawConVar                                   cam_yawfreeze_on;                                         // 0x1EC32D0(0x0080)
	struct RawConVar                                   locator_lerp_time;                                        // 0x1EC33F0(0x0080)
	struct RawConVar                                   gameCursor_Velocity;                                      // 0x1EC3490(0x0080)
	struct RawConVar                                   cc_global_norepeat;                                       // 0x1EC3530(0x0080)
	struct RawConVar                                   zipline_subdiv_stacks;                                    // 0x1EC3F80(0x0080)
	struct RawConVar                                   gamepad_togglecrouch_hold;                                // 0x1EC4580(0x0080)
	struct RawConVar                                   joy_advaxisz;                                             // 0x1EC4620(0x0080)
	struct RawConVar                                   rope_wiggle_zipline_min_points;                           // 0x1EC46C0(0x0080)
	struct RawConVar                                   locator_background_style;                                 // 0x1EC4760(0x0080)
	struct RawConVar                                   c_minyaw;                                                 // 0x1EC4800(0x0080)
	struct RawConVar                                   cam_zoomfreeze_on;                                        // 0x1EC48A0(0x0080)
	struct RawConVar                                   m_side;                                                   // 0x1EC49C0(0x0080)
	struct RawConVar                                   joy_advaxisx;                                             // 0x1EC4A60(0x0080)
	struct RawConVar                                   locator_icon_min_size_non_ss;                             // 0x1EC5060(0x0080)
	struct RawConVar                                   tracer_debug;                                             // 0x1EC5180(0x0080)
	struct RawConVar                                   locator_target_offset_x;                                  // 0x1EC5800(0x0080)
	struct RawConVar                                   cc_predisplay_time;                                       // 0x1EC5920(0x0080)
	struct RawConVar                                   func_break_max_pieces;                                    // 0x1EC59C0(0x0080)
	struct RawConVar                                   glass_shatter_size_scale;                                 // 0x1EC5AE0(0x0080)
	struct RawConVar                                   r_wave_fx_start_progress;                                 // 0x1EC5B80(0x0080)
	struct RawConVar                                   cam_idealdelta;                                           // 0x1EC5C20(0x0080)
	struct RawConVar                                   hudchat_new_message_shown_duration;                       // 0x1EC5CC0(0x0080)
	struct RawConVar                                   ziprail_shape_bigAngleStep;                               // 0x1EC5D60(0x0080)
	struct RawConVar                                   lookspring;                                               // 0x1EC5E00(0x0080)
	struct RawConVar                                   player_setting_autosprint;                                // 0x1EC6030(0x0080)
	struct RawConVar                                   ss_mimic;                                                 // 0x1EC6150(0x0080)
	struct RawConVar                                   joy_advaxisy;                                             // 0x1EC71A0(0x0080)
	struct RawConVar                                   joy_spoofUiType;                                          // 0x1EC7240(0x0080)
	struct RawConVar                                   locator_start_at_crosshair;                               // 0x1EC72E0(0x0080)
	struct RawConVar                                   cl_model_fx_gib_cull_radius;                              // 0x1EC7680(0x0080)
	struct RawConVar                                   cl_show_splashes;                                         // 0x1EC77C0(0x0080)
	struct RawConVar                                   locator_pulse_time;                                       // 0x1EC7960(0x0080)
	struct RawConVar                                   weapon_setting_autocycle_on_empty;                        // 0x1EC7A00(0x0080)
	struct RawConVar                                   cl_model_fx_gib_cull_front_dist;                          // 0x1EC7B40(0x0080)
	struct RawConVar                                   sidearmSwapSelectDoubleTapTime;                           // 0x1EC7C60(0x0080)
	struct RawConVar                                   joy_rumble;                                               // 0x1EC7D00(0x0080)
	struct RawConVar                                   cam_idealyaw;                                             // 0x1EC7EC0(0x0080)
	struct RawConVar                                   rope_wiggle_oscillate_speed;                              // 0x1EC7FE0(0x0080)
	struct RawConVar                                   r_wave_fx_progress_tolerance;                             // 0x1EC8200(0x0080)
	struct RawConVar                                   cam_ideallag;                                             // 0x1EC82A0(0x0080)
	struct RawConVar                                   c_orthoheight;                                            // 0x1EC83C0(0x0080)
	struct RawConVar                                   cl_warnAboutSoundsOnInvalidEntities;                      // 0x1EC8EA0(0x0080)
	struct RawConVar                                   hudchat_enable_old_history_handling;                      // 0x1EC8FC0(0x0080)
	struct RawConVar                                   impact_allow;                                             // 0x1EC9060(0x0080)
	struct RawConVar                                   vehicle_predictViaPlayer;                                 // 0x1EC9730(0x0080)
	struct RawConVar                                   joy_xcontroller_cfg_loaded;                               // 0x1EC97D0(0x0080)
	struct RawConVar                                   map_settings_override;                                    // 0x1EC99F0(0x0080)
	struct RawConVar                                   joy_advaxisr;                                             // 0x1EC9AC0(0x0080)
	struct RawConVar                                   cam_pitchlock_period;                                     // 0x1EC9C60(0x0080)
	struct RawConVar                                   cc_captiontrace;                                          // 0x1EC9D00(0x0080)
	struct RawConVar                                   cc_rui;                                                   // 0x1EC9F20(0x0080)
	struct RawConVar                                   locator_topdown_style;                                    // 0x1EC9FC0(0x0080)
	struct RawConVar                                   mouse_sensitivity;                                        // 0x1ECA0E0(0x0080)
	struct RawConVar                                   thirdperson_screenspace;                                  // 0x1ECA180(0x0080)
	struct RawConVar                                   cl_debug_model_fx_sounds;                                 // 0x1ECA320(0x0080)
	struct RawConVar                                   cl_anglespeedkey;                                         // 0x1ECA4C0(0x0080)
	struct RawConVar                                   cam_pitchlock_pitchBase;                                  // 0x1ECA560(0x0080)
	struct RawConVar                                   m_forward;                                                // 0x1ECA600(0x0080)
	struct RawConVar                                   lookstrafe;                                               // 0x1ECA6A0(0x0080)
	struct RawConVar                                   rope_debug_shake;                                         // 0x1ECA740(0x0080)
	struct RawConVar                                   cl_mouseenable;                                           // 0x1ECA7E0(0x0080)
	struct RawConVar                                   cl_upspeed;                                               // 0x1ECAA90(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderdist;                                // 0x1ECAB30(0x0080)
	struct RawConVar                                   cl_pitchspeed;                                            // 0x1ECABD0(0x0080)
	struct RawConVar                                   miles_listener_soundscape_roof_iter_count;                // 0x1ECAC70(0x0080)
	struct RawConVar                                   impact_victim_offset_dist;                                // 0x1ECAD10(0x0080)
	struct RawConVar                                   hidehud;                                                  // 0x1ECADB0(0x0080)
	struct RawConVar                                   tweak_light_shadows_every_frame;                          // 0x1ECAF50(0x0080)
	struct RawConVar                                   rope_regenMeshEachDraw;                                   // 0x1ECB4D0(0x0080)
	struct RawConVar                                   locator_icon_max_size_non_ss;                             // 0x1ECB5F0(0x0080)
	struct RawConVar                                   s15_freeze_fix;                                           // 0x1ECB690(0x0080)
	struct RawConVar                                   joy_inverty;                                              // 0x1ECB7B0(0x0080)
	struct RawConVar                                   input_did_turn_threshold;                                 // 0x1ECB850(0x0080)
	struct RawConVar                                   c_maxyaw;                                                 // 0x1ECBA70(0x0080)
	struct RawConVar                                   cl_fasttempentcollision;                                  // 0x1ECBB10(0x0080)
	struct RawConVar                                   zipline_subdiv_slices;                                    // 0x1ECBCB0(0x0080)
	struct RawConVar                                   rope_collide;                                             // 0x1ECBD50(0x0080)
	struct RawConVar                                   cam_idealpitch;                                           // 0x1ECBDF0(0x0080)
	struct RawConVar                                   glass_shatter_direction_force_scale;                      // 0x1ECBE90(0x0080)
	struct RawConVar                                   joy_advaxisv;                                             // 0x1ECC0B0(0x0080)
	struct RawConVar                                   cl_approx_tracer_origin;                                  // 0x1ECC150(0x0080)
	struct RawConVar                                   rope_wiggle_magnitude_loose;                              // 0x1ECC7D0(0x0080)
	struct RawConVar                                   cc_linger_time;                                           // 0x1ECC970(0x0080)
	struct RawConVar                                   cam_pitchfreeze_on;                                       // 0x1ECCA10(0x0080)
	struct RawConVar                                   gamepad_enabled;                                          // 0x1ECD220(0x0080)
	struct RawConVar                                   joy_legacy;                                               // 0x1ECD2C0(0x0080)
	struct RawConVar                                   cam_player_viewheight_scale;                              // 0x1ECD360(0x0080)
	struct RawConVar                                   viewangle_debug;                                          // 0x1ECD400(0x0080)
	struct RawConVar                                   c_thirdpersonshouldergetsviewpunch;                       // 0x1ECD4A0(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdistADS_110;                      // 0x1ECD540(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdistADS_70;                       // 0x1ECD5E0(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdistADS_90;                       // 0x1ECD680(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdist_90;                          // 0x1ECD720(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdist_110;                         // 0x1ECD7C0(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderaimdist_70;                          // 0x1ECD860(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderoffset;                              // 0x1ECD900(0x0080)
	struct RawConVar                                   c_thirdpersonshoulderheight;                              // 0x1ECD9A0(0x0080)
	struct RawConVar                                   sound_entity_seek_snap;                                   // 0x1ECDA40(0x0080)
	struct RawConVar                                   r_particle_timescale;                                     // 0x1ECDB60(0x0080)
	struct RawConVar                                   fx_impact_enemy;                                          // 0x1ECF080(0x0080)
	struct RawConVar                                   hud_setting_enableModWheel;                               // 0x1ECF120(0x0080)
	struct RawConVar                                   idcolor_enemy_cb3;                                        // 0x1ECF1D0(0x0080)
	struct RawConVar                                   cl_showpos;                                               // 0x1ECF270(0x0080)
	struct RawConVar                                   script_printDeferredCalls;                                // 0x1ECF390(0x0080)
	struct RawConVar                                   cl_particle_sim_fallback_threshold_ms;                    // 0x1ECF430(0x0080)
	struct RawConVar                                   hud_setting_showButtonHints;                              // 0x1ECF4D0(0x0080)
	struct RawConVar                                   cl_phys_maxticks;                                         // 0x1ECF570(0x0080)
	struct RawConVar                                   ss_force_primary_fullscreen;                              // 0x1ECF610(0x0080)
	struct RawConVar                                   r_vismodellighting_maxdist;                               // 0x1ECF730(0x0080)
	struct RawConVar                                   cl_predict_cmdlimit;                                      // 0x1ECF7D0(0x0080)
	struct RawConVar                                   r_lod_shift;                                              // 0x1ECF870(0x0080)
	struct RawConVar                                   mat_autoexposure_compensation;                            // 0x1ECF910(0x0080)
	struct RawConVar                                   cl_enable_remote_splitscreen;                             // 0x1ECF9B0(0x0080)
	struct RawConVar                                   number_shortenToMillionsAfter;                            // 0x1ECFA50(0x0080)
	struct RawConVar                                   mat_autoexposure_target_lum_min;                          // 0x1ECFBF0(0x0080)
	struct RawConVar                                   r_updaterefracttexture;                                   // 0x1ECFC90(0x0080)
	struct RawConVar                                   hud_setting_showTeamNamesOnMap;                           // 0x1ECFD30(0x0080)
	struct RawConVar                                   cl_prediction_error_timestamps;                           // 0x1ECFE00(0x0080)
	struct RawConVar                                   cl_predict_error_icon_threshold_dist;                     // 0x1ECFEA0(0x0080)
	struct RawConVar                                   mat_autoexposure_target_lum_max;                          // 0x1ECFF40(0x0080)
	struct RawConVar                                   hud_setting_showHopUpPopUp;                               // 0x1ECFFF0(0x0080)
	struct RawConVar                                   idcolor_ally;                                             // 0x1ED0090(0x0080)
	struct RawConVar                                   hud_setting_adsDof;                                       // 0x1ED0140(0x0080)
	struct RawConVar                                   mat_bloom_scalefactor_scalar;                             // 0x1ED02E0(0x0080)
	struct RawConVar                                   idcolor_neutral;                                          // 0x1ED0400(0x0080)
	struct RawConVar                                   cl_particle_limiter_max_particle_count;                   // 0x1ED04A0(0x0080)
	struct RawConVar                                   hitch_alert_show_large_snapshots;                         // 0x1ED0540(0x0080)
	struct RawConVar                                   mat_force_bloom;                                          // 0x1ED0630(0x0080)
	struct RawConVar                                   cl_particle_limiter_max_system_count;                     // 0x1ED06D0(0x0080)
	struct RawConVar                                   hud_setting_showTips;                                     // 0x1ED0770(0x0080)
	struct RawConVar                                   shake_basicPitchFactor;                                   // 0x1ED0890(0x0080)
	struct RawConVar                                   mat_screen_blur_enabled;                                  // 0x1ED0D50(0x0080)
	struct RawConVar                                   r_setupBoneWortSort;                                      // 0x1ED0DF0(0x0080)
	struct RawConVar                                   mat_frame_color_bias;                                     // 0x1ED0E90(0x0080)
	struct RawConVar                                   r_threaded_particles;                                     // 0x1ED0F30(0x0080)
	struct RawConVar                                   particle_overlay_list_tally;                              // 0x1ED0FD0(0x0080)
	struct RawConVar                                   dof_variable_blur;                                        // 0x1ED10A0(0x0080)
	struct RawConVar                                   cl_particle_max_count;                                    // 0x1ED1140(0x0080)
	struct RawConVar                                   cl_predict_error_icon_show;                               // 0x1ED11E0(0x0080)
	struct RawConVar                                   mat_autoexposure_speed;                                   // 0x1ED1280(0x0080)
	struct RawConVar                                   particle_overlay;                                         // 0x1ED13A0(0x0080)
	struct RawConVar                                   hud_setting_showOffscreenPortrait;                        // 0x1ED1440(0x0080)
	struct RawConVar                                   mat_frame_color_spot_metering_screen_ratio;               // 0x1ED1560(0x0080)
	struct RawConVar                                   cl_showfps_altframetime;                                  // 0x1ED1730(0x0080)
	struct RawConVar                                   hud_setting_ultDisplay;                                   // 0x1ED1850(0x0080)
	struct RawConVar                                   particle_scrub_debug;                                     // 0x1ED18F0(0x0080)
	struct RawConVar                                   cl_idealpitchscale;                                       // 0x1ED1990(0x0080)
	struct RawConVar                                   cl_particle_limiter_min_kill_distance;                    // 0x1ED1AB0(0x0080)
	struct RawConVar                                   ss_enable;                                                // 0x1ED1B50(0x0080)
	struct RawConVar                                   hud_setting_lootPromptStyle;                              // 0x1ED1BF0(0x0080)
	struct RawConVar                                   r_particle_sim_spike_increment_ms;                        // 0x1ED1D90(0x0080)
	struct RawConVar                                   cl_particles_show_bbox;                                   // 0x1ED1E30(0x0080)
	struct RawConVar                                   ss_splitmode;                                             // 0x1ED1ED0(0x0080)
	struct RawConVar                                   hud_setting_minimapRotate;                                // 0x1ED1F70(0x0080)
	struct RawConVar                                   tsaa_enable_dynamicviewport;                              // 0x1ED2090(0x0080)
	struct RawConVar                                   cl_showtime;                                              // 0x1ED2150(0x0080)
	struct RawConVar                                   cl_pred_optimize;                                         // 0x1ED21F0(0x0080)
	struct RawConVar                                   cl_predictweapons;                                        // 0x1ED2290(0x0080)
	struct RawConVar                                   mat_bloom_streak_clamp;                                   // 0x1ED2330(0x0080)
	struct RawConVar                                   hud_setting_damageTextStyle;                              // 0x1ED23D0(0x0080)
	struct RawConVar                                   particle_overlay_list_tally_collapse_children;            // 0x1ED2470(0x0080)
	struct RawConVar                                   colorblind_mode;                                          // 0x1ED2510(0x0080)
	struct RawConVar                                   particle_overlay_detail_attributes;                       // 0x1ED25B0(0x0080)
	struct RawConVar                                   fx_impact_neutral;                                        // 0x1ED2650(0x0080)
	struct RawConVar                                   mat_frame_color_enabled;                                  // 0x1ED2770(0x0080)
	struct RawConVar                                   hitch_alert_color;                                        // 0x1ED2810(0x0080)
	struct RawConVar                                   cl_particles_show_controlpoints;                          // 0x1ED2930(0x0080)
	struct RawConVar                                   shake_basicRandomRollFactor;                              // 0x1ED29D0(0x0080)
	struct RawConVar                                   scr_centertime;                                           // 0x1ED2A70(0x0080)
	struct RawConVar                                   hud_setting_pingDoubleTapEnemy;                           // 0x1ED2B30(0x0080)
	struct RawConVar                                   mat_autoexposure_max_multiplier;                          // 0x1ED2BD0(0x0080)
	struct RawConVar                                   physics_collision_speed_threshold;                        // 0x1ED2C70(0x0080)
	struct RawConVar                                   cl_script_perf_dump_on_shutdown;                          // 0x1ED2D10(0x0080)
	struct RawConVar                                   mat_bloom_streak_exponent_pre;                            // 0x1ED2E30(0x0080)
	struct RawConVar                                   cl_phys_show_active;                                      // 0x1ED2ED0(0x0080)
	struct RawConVar                                   hitch_alert_active;                                       // 0x1ED2F70(0x0080)
	struct RawConVar                                   cl_lagcompensation;                                       // 0x1ED3010(0x0080)
	struct RawConVar                                   script_debugger_connect_client_on_mapspawn;               // 0x1ED3130(0x0080)
	struct RawConVar                                   showmemnumstatsrefresh;                                   // 0x1ED31D0(0x0080)
	struct RawConVar                                   particle_overlay_detail_scroll;                           // 0x1ED3270(0x0080)
	struct RawConVar                                   mat_autoexposure_min_multiplier;                          // 0x1ED3390(0x0080)
	struct RawConVar                                   cl_phys_timescale;                                        // 0x1ED3430(0x0080)
	struct RawConVar                                   hud_setting_showMedals;                                   // 0x1ED34D0(0x0080)
	struct RawConVar                                   mat_bloom_streak_cutoff_exposure_adapt;                   // 0x1ED3570(0x0080)
	struct RawConVar                                   hud_setting_showObituary;                                 // 0x1ED3610(0x0080)
	struct RawConVar                                   impact_debug_info;                                        // 0x1ED36B0(0x0080)
	struct RawConVar                                   idcolor_enemy_cb2;                                        // 0x1ED3770(0x0080)
	struct RawConVar                                   r_vismodellighting_mindist;                               // 0x1ED3810(0x0080)
	struct RawConVar                                   cl_showpausedimage;                                       // 0x1ED38B0(0x0080)
	struct RawConVar                                   r_lod;                                                    // 0x1ED39D0(0x0080)
	struct RawConVar                                   particle_overlay_old;                                     // 0x1ED3A70(0x0080)
	struct RawConVar                                   mat_disable_bloom;                                        // 0x1ED3B10(0x0080)
	struct RawConVar                                   reticle_color;                                            // 0x1ED3BB0(0x0080)
	struct RawConVar                                   r_setupBoneWorkSize;                                      // 0x1ED3CD0(0x0080)
	struct RawConVar                                   idcolor_enemy_cb1;                                        // 0x1ED3D70(0x0080)
	struct RawConVar                                   mat_bloom_wide_exponent_pre;                              // 0x1ED3E90(0x0080)
	struct RawConVar                                   dof_enable;                                               // 0x1ED3F30(0x0080)
	struct RawConVar                                   mat_bloom_streak_cutoff;                                  // 0x1ED3FD0(0x0080)
	struct RawConVar                                   particle_overlay_scroll;                                  // 0x1ED4070(0x0080)
	struct RawConVar                                   bink_preload_videopanel_movies;                           // 0x1ED4110(0x0080)
	struct RawConVar                                   showmemnumstats;                                          // 0x1ED41B0(0x0080)
	struct RawConVar                                   cl_particle_snoozetime;                                   // 0x1ED42D0(0x0080)
	struct RawConVar                                   mat_debug_postprocessing_effects;                         // 0x1ED43F0(0x0080)
	struct RawConVar                                   hud_setting_showLevelUp;                                  // 0x1ED4600(0x0080)
	struct RawConVar                                   idcolor_ally_cb2;                                         // 0x1ED46D0(0x0080)
	struct RawConVar                                   cl_predictionlist;                                        // 0x1ED4770(0x0080)
	struct RawConVar                                   cl_pdump;                                                 // 0x1ED4850(0x0080)
	struct RawConVar                                   ss_verticalsplit;                                         // 0x1ED48F0(0x0080)
	struct RawConVar                                   particle_overlay_hide_sleeping;                           // 0x1ED4990(0x0080)
	struct RawConVar                                   tsaa_numsamples;                                          // 0x1ED4A30(0x0080)
	struct RawConVar                                   cheap_captions_test;                                      // 0x1ED4AD0(0x0080)
	struct RawConVar                                   cl_showfps;                                               // 0x1ED4B70(0x0080)
	struct RawConVar                                   idcolor_ally_cb3;                                         // 0x1ED4C10(0x0080)
	struct RawConVar                                   screenfade_debug;                                         // 0x1ED4CB0(0x0080)
	struct RawConVar                                   cl_predict_error_icon_threshold_angle;                    // 0x1ED4D50(0x0080)
	struct RawConVar                                   hud_setting_accessibleChat;                               // 0x1ED4DF0(0x0080)
	struct RawConVar                                   mat_autoexposure_debug;                                   // 0x1ED4E90(0x0080)
	struct RawConVar                                   mat_autoexposure_max;                                     // 0x1ED4F30(0x0080)
	struct RawConVar                                   particle_simulateoverflow;                                // 0x1ED4FD0(0x0080)
	struct RawConVar                                   mat_postprocess_enable;                                   // 0x1ED50F0(0x0080)
	struct RawConVar                                   particle_overlay_list_filter;                             // 0x1ED5210(0x0080)
	struct RawConVar                                   rui_asyncTracks;                                          // 0x1ED52B0(0x0080)
	struct RawConVar                                   cheap_captions_fadetime;                                  // 0x1ED5350(0x0080)
	struct RawConVar                                   script_obfuscated_id_technique;                           // 0x1ED53F0(0x0080)
	struct RawConVar                                   hud_setting_showCallsigns;                                // 0x1ED5510(0x0080)
	struct RawConVar                                   cl_particle_limiter_overlay;                              // 0x1ED55B0(0x0080)
	struct RawConVar                                   cl_skipfastpath;                                          // 0x1ED5750(0x0080)
	struct RawConVar                                   phys_showObjectCount;                                     // 0x1ED57F0(0x0080)
	struct RawConVar                                   mat_bloom_wide_clamp;                                     // 0x1ED5890(0x0080)
	struct RawConVar                                   cl_particle_limiter_display_killed;                       // 0x1ED5930(0x0080)
	struct RawConVar                                   hud_setting_pingAlpha;                                    // 0x1ED5A50(0x0080)
	struct RawConVar                                   hud_setting_damageIndicatorStyle;                         // 0x1ED5B70(0x0080)
	struct RawConVar                                   r_particle_sim_spike_threshold_ms;                        // 0x1ED5C10(0x0080)
	struct RawConVar                                   cl_particles_show_bbox_name;                              // 0x1ED5CD0(0x0080)
	struct RawConVar                                   mat_bloomamount_rate;                                     // 0x1ED5D70(0x0080)
	struct RawConVar                                   script_window_client_precache;                            // 0x1ED5E90(0x0080)
	struct RawConVar                                   rui_staticPropLimit;                                      // 0x1ED5F30(0x0080)
	struct RawConVar                                   cl_physics_invalidate_ents;                               // 0x1ED6050(0x0080)
	struct RawConVar                                   ragdoll_sleepaftertime;                                   // 0x1ED60F0(0x0080)
	struct RawConVar                                   script_obfuscated_id_magic;                               // 0x1ED6190(0x0080)
	struct RawConVar                                   mat_bloom_cutoff;                                         // 0x1ED62B0(0x0080)
	struct RawConVar                                   cl_physics_maxvelocity;                                   // 0x1ED6350(0x0080)
	struct RawConVar                                   particle_overlay_detail_list_particles;                   // 0x1ED6470(0x0080)
	struct RawConVar                                   hud_setting_showWeaponFlyouts;                            // 0x1ED6510(0x0080)
	struct RawConVar                                   hud_setting_streamerMode;                                 // 0x1ED65B0(0x0080)
	struct RawConVar                                   mat_autoexposure_min;                                     // 0x1ED66D0(0x0080)
	struct RawConVar                                   fx_impact_ally;                                           // 0x1ED6770(0x0080)
	struct RawConVar                                   mat_bloom_clamp;                                          // 0x1ED6810(0x0080)
	struct RawConVar                                   particle_overlay_detail_filter;                           // 0x1ED68B0(0x0080)
	struct RawConVar                                   cl_predict_error_icon_duration;                           // 0x1ED6950(0x0080)
	struct RawConVar                                   hud_setting_showMeter;                                    // 0x1ED69F0(0x0080)
	struct RawConVar                                   cl_particle_sim_fallback_base_multiplier;                 // 0x1ED6A90(0x0080)
	struct RawConVar                                   cl_aggregate_particles;                                   // 0x1ED6B30(0x0080)
	struct RawConVar                                   r_updaterefracttexture_allowmultiple;                     // 0x1ED6BD0(0x0080)
	struct RawConVar                                   idcolor_ally_cb1;                                         // 0x1ED6C70(0x0080)
	struct RawConVar                                   mat_autoexposure_uncap;                                   // 0x1ED7400(0x0080)
	struct RawConVar                                   cl_pclass;                                                // 0x1ED74A0(0x0080)
	struct RawConVar                                   mat_frame_color_scale;                                    // 0x1ED75C0(0x0080)
	struct RawConVar                                   r_drawparticles;                                          // 0x1ED7660(0x0080)
	struct RawConVar                                   particle_gpu_level;                                       // 0x1ED7700(0x0080)
	struct RawConVar                                   idcolor_enemy;                                            // 0x1ED77C0(0x0080)
	struct RawConVar                                   effect_update_array_spam;                                 // 0x1ED78E0(0x0080)
	struct RawConVar                                   mat_bloomscale;                                           // 0x1ED79A0(0x0080)
	struct RawConVar                                   cl_predict_viewangles;                                    // 0x1ED7A40(0x0080)
	struct RawConVar                                   client_deferredSnapshotScriptCalls;                       // 0x1ED7AE0(0x0080)
	struct RawConVar                                   r_setupBoneWorkerThreadhold;                              // 0x1ED7B80(0x0080)
	struct RawConVar                                   cl_scriptCompileAsync;                                    // 0x1ED7C20(0x0080)
	struct RawConVar                                   sv_wateraccelerate;                                       // 0x1ED7CC0(0x0080)
	struct RawConVar                                   ik_debug_chain;                                           // 0x1ED7D60(0x0080)
	struct RawConVar                                   sv_pushaway_clientside;                                   // 0x1ED7E00(0x0080)
	struct RawConVar                                   sv_tournament_anonymous_mode;                             // 0x1ED7EE0(0x0080)
	struct RawConVar                                   damageinfo_defendInvalidValues;                           // 0x1ED7F80(0x0080)
	struct RawConVar                                   baseanimatingoverlay_playbackRateThreshold;               // 0x1ED8020(0x0080)
	struct RawConVar                                   sprinttilt_accel;                                         // 0x1ED80C0(0x0080)
	struct RawConVar                                   jump_grace_limit_to_90;                                   // 0x1ED8160(0x0080)
	struct RawConVar                                   traversal_anim;                                           // 0x1ED8200(0x0080)
	struct RawConVar                                   freefall_sound_autoplay_time;                             // 0x1ED82A0(0x0080)
	struct RawConVar                                   jump_pad_geo_trace_debug;                                 // 0x1ED8440(0x0080)
	struct RawConVar                                   wallrun_sameWallSlope;                                    // 0x1ED84F0(0x0080)
	struct RawConVar                                   automantle_trace_debug;                                   // 0x1ED8590(0x0080)
	struct RawConVar                                   tether_dodge_damage;                                      // 0x1ED8630(0x0080)
	struct RawConVar                                   player_useMovementBounds;                                 // 0x1ED86D0(0x0080)
	struct RawConVar                                   dodge_viewTiltIncreaseSpeed;                              // 0x1ED87F0(0x0080)
	struct RawConVar                                   sv_pushaway_dist;                                         // 0x1ED8890(0x0080)
	struct RawConVar                                   DoorSoundPrefixDouble;                                    // 0x1ED8930(0x0080)
	struct RawConVar                                   ik_height_adjust_sine;                                    // 0x1ED89D0(0x0080)
	struct RawConVar                                   tether_default_healthDrainDelay;                          // 0x1ED8A70(0x0080)
	struct RawConVar                                   automantle_cooldown;                                      // 0x1ED8B10(0x0080)
	struct RawConVar                                   grapple_decelMeleeStrength;                               // 0x1ED8BB0(0x0080)
	struct RawConVar                                   lerp_debugEnt;                                            // 0x1ED8C50(0x0080)
	struct RawConVar                                   melee_lunge_use_closest_distance_between_cylinders;       // 0x1ED8CF0(0x0080)
	struct RawConVar                                   dodge_viewTiltDecreaseSpeed;                              // 0x1ED8D90(0x0080)
	struct RawConVar                                   ground_debug;                                             // 0x1ED8E30(0x0080)
	struct RawConVar                                   r_debug_draw_box_depth_test;                              // 0x1ED8ED0(0x0080)
	struct RawConVar                                   unique_entity_names;                                      // 0x1ED8F70(0x0080)
	struct RawConVar                                   grapple_swingPullSpeedScale;                              // 0x1ED9010(0x0080)
	struct RawConVar                                   dodge_vertical_enable;                                    // 0x1ED90B0(0x0080)
	struct RawConVar                                   traversal_cooldown;                                       // 0x1EDA9B0(0x0080)
	struct RawConVar                                   traversal_window_enable;                                  // 0x1EDAA50(0x0080)
	struct RawConVar                                   wallrun_hangslipduration;                                 // 0x1EDAB30(0x0080)
	struct RawConVar                                   slide_max_angle_dot;                                      // 0x1EDABD0(0x0080)
	struct RawConVar                                   jump_grace_require_tap;                                   // 0x1EDACA0(0x0080)
	struct RawConVar                                   scriptremotefunctions_printWarningNullEntity;             // 0x1EDAD40(0x0080)
	struct RawConVar                                   jump_grace_multi_tap_decay_velocity_based_max_decay;      // 0x1EDADE0(0x0080)
	struct RawConVar                                   ik_height_adjust_move_speed;                              // 0x1EDAE90(0x0080)
	struct RawConVar                                   scriptremotefunctions_debug;                              // 0x1EDAF30(0x0080)
	struct RawConVar                                   window_hint_lookahead_time;                               // 0x1EDAFD0(0x0080)
	struct RawConVar                                   airslowmo_leave_time;                                     // 0x1EDB550(0x0080)
	struct RawConVar                                   automantle_debug;                                         // 0x1EDB5F0(0x0080)
	struct RawConVar                                   grapple_decel_titan;                                      // 0x1EDB690(0x0080)
	struct RawConVar                                   sprinttilt_turnrange;                                     // 0x1EDB730(0x0080)
	struct RawConVar                                   universal_weapon_disable;                                 // 0x1EDBCB0(0x0080)
	struct RawConVar                                   skip_sounds;                                              // 0x1EDBD50(0x0080)
	struct RawConVar                                   cl_decal_alwayswhite;                                     // 0x1EDBDF0(0x0080)
	struct RawConVar                                   dodge_cockpitHack;                                        // 0x1EDBE90(0x0080)
	struct RawConVar                                   offhand_alignEndAnim1p3p;                                 // 0x1EDBF30(0x0080)
	struct RawConVar                                   traversal_window_duration;                                // 0x1EDBFD0(0x0080)
	struct RawConVar                                   ik_enable;                                                // 0x1EDC070(0x0080)
	struct RawConVar                                   tether_zipline_scaling_min_vel;                           // 0x1EDC110(0x0080)
	struct RawConVar                                   mp_enabletimelimit;                                       // 0x1EDC1B0(0x0080)
	struct RawConVar                                   armored_leap_disable_player_move_input;                   // 0x1EDC250(0x0080)
	struct RawConVar                                   automantle_min_frac;                                      // 0x1EDC2F0(0x0080)
	struct RawConVar                                   grapple_detachExtraAllowedLength;                         // 0x1EDC390(0x0080)
	struct RawConVar                                   wallrun_strengthLossStart;                                // 0x1EDC430(0x0080)
	struct RawConVar                                   sv_specspeed;                                             // 0x1EDC4D0(0x0080)
	struct RawConVar                                   melee_lunge_abort_if_blocked;                             // 0x1EDC570(0x0080)
	struct RawConVar                                   remote_function_pin_tracking;                             // 0x1EDC610(0x0080)
	struct RawConVar                                   ik_height_adjust_debug;                                   // 0x1EDC6B0(0x0080)
	struct RawConVar                                   sv_backspeed;                                             // 0x1EDC7D0(0x0080)
	struct RawConVar                                   wallrun_pushAwayFallOffTime;                              // 0x1EDC8B0(0x0080)
	struct RawConVar                                   sv_stopspeed;                                             // 0x1EDC950(0x0080)
	struct RawConVar                                   sv_friction;                                              // 0x1EDC9F0(0x0080)
	struct RawConVar                                   spatial_partition_deadlock_assert;                        // 0x1EDCA90(0x0080)
	struct RawConVar                                   grapple_speedRampMin_human;                               // 0x1EDCB30(0x0080)
	struct RawConVar                                   grapple_initialImpulse_titan;                             // 0x1EDCBD0(0x0080)
	struct RawConVar                                   tether_healthDrainNPC;                                    // 0x1EDCC70(0x0080)
	struct RawConVar                                   r_VehicleViewDampen;                                      // 0x1EDCD10(0x0080)
	struct RawConVar                                   tether_default_damageScale;                               // 0x1EDCDB0(0x0080)
	struct RawConVar                                   wallrun_strengthLossEnd;                                  // 0x1EDCE50(0x0080)
	struct RawConVar                                   dodge_vertical_horzspeedscale;                            // 0x1EDCEF0(0x0080)
	struct RawConVar                                   sv_pushaway_player_dist;                                  // 0x1EDCF90(0x0080)
	struct RawConVar                                   traversal_window_finish_angle;                            // 0x1EDD030(0x0080)
	struct RawConVar                                   grapple_swingPullSpeedLength;                             // 0x1EDD0D0(0x0080)
	struct RawConVar                                   tether_default_healthDrain;                               // 0x1EDD170(0x0080)
	struct RawConVar                                   traversal_hand_debug;                                     // 0x1EDD210(0x0080)
	struct RawConVar                                   grapple_disableMeleeWhenActive;                           // 0x1EDD2B0(0x0080)
	struct RawConVar                                   grapple_initialSlowFracVert_human;                        // 0x1EDD380(0x0080)
	struct RawConVar                                   grapple_gravityPushUnderContribution;                     // 0x1EDD420(0x0080)
	struct RawConVar                                   viewpunch_base_springDampingZ;                            // 0x1EDD4C0(0x0080)
	struct RawConVar                                   wallrun_viewTiltSpeed;                                    // 0x1EDD560(0x0080)
	struct RawConVar                                   stuck_debugging;                                          // 0x1EDD600(0x0080)
	struct RawConVar                                   grapple_swingPullAngle;                                   // 0x1EDD6A0(0x0080)
	struct RawConVar                                   jump_grace_cutoff_speed;                                  // 0x1EDD740(0x0080)
	struct RawConVar                                   realms_add_child_to_parent_by_default;                    // 0x1EDDE10(0x0080)
	struct RawConVar                                   jump_grace_multi_tap_decay_velocity_based_easing_type;    // 0x1EDDEB0(0x0080)
	struct RawConVar                                   superjump_min_height_fraction;                            // 0x1EDDF50(0x0080)
	struct RawConVar                                   grapple_gracePeriod;                                      // 0x1EDDFF0(0x0080)
	struct RawConVar                                   skip_jump_height_fraction;                                // 0x1EDE0E0(0x0080)
	struct RawConVar                                   automantle_height_level;                                  // 0x1EDE180(0x0080)
	struct RawConVar                                   slide_step_velocity_reduction;                            // 0x1EDE240(0x0080)
	struct RawConVar                                   wallrun_enable;                                           // 0x1EDE2E0(0x0080)
	struct RawConVar                                   mp_player_level;                                          // 0x1EDE380(0x0080)
	struct RawConVar                                   cl_observer_preset_playerHash;                            // 0x1EDE420(0x0080)
	struct RawConVar                                   grapple_autoMeleeOnDetach;                                // 0x1EDE4C0(0x0080)
	struct RawConVar                                   sv_specnoclip;                                            // 0x1EDE5C0(0x0080)
	struct RawConVar                                   melee_lunge_slide;                                        // 0x1EDE660(0x0080)
	struct RawConVar                                   window_hint_min_horz_vel;                                 // 0x1EDE700(0x0080)
	struct RawConVar                                   automantle_jumpoff_anim_maxfrac;                          // 0x1EDE7A0(0x0080)
	struct RawConVar                                   automantle_rest_frac_below;                               // 0x1EDE840(0x0080)
	struct RawConVar                                   automantle_mindist;                                       // 0x1EDE8E0(0x0080)
	struct RawConVar                                   physics_defaultMaxAngularSpeed;                           // 0x1EF7000(0x0080)
	struct RawConVar                                   entity_skipRedundantAddEffects;                           // 0x1EF70A0(0x0080)
	struct RawConVar                                   automantle_height_above;                                  // 0x1EF7140(0x0080)
	struct RawConVar                                   wallrun_minAngle_air;                                     // 0x1EF7240(0x0080)
	struct RawConVar                                   sv_bounce;                                                // 0x1EF72E0(0x0080)
	struct RawConVar                                   tether_maxStretchDamage;                                  // 0x1EF7380(0x0080)
	struct RawConVar                                   superjump_max_power_use;                                  // 0x1EF7510(0x0080)
	struct RawConVar                                   viewpunch_base_springDampingX;                            // 0x1EF75B0(0x0080)
	struct RawConVar                                   dodge_cockpitTiltMax;                                     // 0x1EF7650(0x0080)
	struct RawConVar                                   grapple_initialImpulseOffGround_titan;                    // 0x1EF76F0(0x0080)
	struct RawConVar                                   window_hint_fov_down;                                     // 0x1EF7910(0x0080)
	struct RawConVar                                   ik_normal_lerp_rate;                                      // 0x1EF79B0(0x0080)
	struct RawConVar                                   grapple_initialSlowFracVert_titan;                        // 0x1EF7AD0(0x0080)
	struct RawConVar                                   cl_updatedirty_async;                                     // 0x1EF7B70(0x0080)
	struct RawConVar                                   wallrun_repelEnable;                                      // 0x1F07C20(0x0080)
	struct RawConVar                                   airslowmo_enter_time;                                     // 0x1F07CC0(0x0080)
	struct RawConVar                                   cl_observer_preset_team;                                  // 0x1F07D60(0x0080)
	struct RawConVar                                   slide_whileInAir;                                         // 0x1F07E00(0x0080)
	struct RawConVar                                   window_hint_permissive_max_vel_change_up;                 // 0x1F092C0(0x0080)
	struct RawConVar                                   wallrun_maxViewTilt;                                      // 0x1F09360(0x0080)
	struct RawConVar                                   wallrun_sameWallDist;                                     // 0x1F09400(0x0080)
	struct RawConVar                                   playlist_variableErrorsChecks;                            // 0x1F094A0(0x0080)
	struct RawConVar                                   ik_enable_client;                                         // 0x1F09540(0x0080)
	struct RawConVar                                   grapple_dontFightGravity;                                 // 0x1F095E0(0x0080)
	struct RawConVar                                   viewpunch_base_springConstantX;                           // 0x1F09680(0x0080)
	struct RawConVar                                   anim_window_debug;                                        // 0x1F09720(0x0080)
	struct RawConVar                                   grapple_jumpFrac;                                         // 0x1F097C0(0x0080)
	struct RawConVar                                   grapple_swingAngle;                                       // 0x1F09860(0x0080)
	struct RawConVar                                   grapple_speedRampMax_human;                               // 0x1F09900(0x0080)
	struct RawConVar                                   grapple_windowCheckDist;                                  // 0x1F099A0(0x0080)
	struct RawConVar                                   jump_grace_multi_tap_decay;                               // 0x1F09A40(0x0080)
	struct RawConVar                                   grapple_letGravityHelpCosAngle;                           // 0x1F09AE0(0x0080)
	struct RawConVar                                   grapple_lift;                                             // 0x1F09B80(0x0080)
	struct RawConVar                                   freefall_sound_height;                                    // 0x1F09C50(0x0080)
	struct RawConVar                                   superjump_powerreset_onground;                            // 0x1F09CF0(0x0080)
	struct RawConVar                                   wallrun_sameWallDot;                                      // 0x1F09D90(0x0080)
	struct RawConVar                                   sv_pushaway_accel;                                        // 0x1F09E30(0x0080)
	struct RawConVar                                   player_usercmd_skipping_enabled;                          // 0x1F09ED0(0x0080)
	struct RawConVar                                   can_stand_on_obb;                                         // 0x1F09F70(0x0080)
	struct RawConVar                                   scriptremotefunctions_printReconnectDiscards;             // 0x1F0A010(0x0080)
	struct RawConVar                                   wallrun_retry_interval;                                   // 0x1F0A0B0(0x0080)
	struct RawConVar                                   automantle_dangle_required_space;                         // 0x1F0A150(0x0080)
	struct RawConVar                                   window_hint_fov_up;                                       // 0x1F0A1F0(0x0080)
	struct RawConVar                                   tether_strength_healthScale;                              // 0x1F0A290(0x0080)
	struct RawConVar                                   grapple_decel_human;                                      // 0x1F0A330(0x0080)
	struct RawConVar                                   grapple_initialSlowFrac_titan;                            // 0x1F0A3D0(0x0080)
	struct RawConVar                                   wallrun_slipslowdown;                                     // 0x1F0A4C0(0x0080)
	struct RawConVar                                   automantle_maxangle_push;                                 // 0x1F0A560(0x0080)
	struct RawConVar                                   wallrun_rotateMaxRate;                                    // 0x1F0A600(0x0080)
	struct RawConVar                                   jump_grace_decay_start_tap_count;                         // 0x1F0A6A0(0x0080)
	struct RawConVar                                   grapple_initialSlowFrac_human;                            // 0x1F0A740(0x0080)
	struct RawConVar                                   grapple_speedRampMin_titan;                               // 0x1F0A7E0(0x0080)
	struct RawConVar                                   grapple_fallSpeed;                                        // 0x1F0AD60(0x0080)
	struct RawConVar                                   remote_function_clear_stats_on_game_state_change;         // 0x1F0AE00(0x0080)
	struct RawConVar                                   scriptremotefunctions_saveFuncName;                       // 0x1F0AEA0(0x0080)
	struct RawConVar                                   jump_grace_min_tap_period;                                // 0x1F0AF40(0x0080)
	struct RawConVar                                   player_extraairaccelleration;                             // 0x1F0AFE0(0x0080)
	struct RawConVar                                   wallrun_hangslipvel;                                      // 0x1F0B080(0x0080)
	struct RawConVar                                   jump_grace_jump;                                          // 0x1F0B600(0x0080)
	struct RawConVar                                   superjump_limitreset_onwallrun;                           // 0x1F0B6A0(0x0080)
	struct RawConVar                                   window_hint_max_vel_change_down;                          // 0x1F0B740(0x0080)
	struct RawConVar                                   automantle_jumpoff_duration;                              // 0x1F0B7E0(0x0080)
	struct RawConVar                                   automantle_enable;                                        // 0x1F0B880(0x0080)
	struct RawConVar                                   traversal_window_forward_offset;                          // 0x1F0B920(0x0080)
	struct RawConVar                                   sv_tournament_assist_style_override;                      // 0x1F0BAA0(0x0080)
	struct RawConVar                                   wallrun_repelSoftness;                                    // 0x1F0BB40(0x0080)
	struct RawConVar                                   superjump_disabled_from_water;                            // 0x1F0BBE0(0x0080)
	struct RawConVar                                   was_loaded;                                               // 0x1F0BC80(0x0080)
	struct RawConVar                                   slide_max_duck_frac_to_start;                             // 0x1F0BD40(0x0080)
	struct RawConVar                                   dodge_viewTiltMax;                                        // 0x1F0BE10(0x0080)
	struct RawConVar                                   dodge_viewTiltFalloffTime;                                // 0x1F0BF00(0x0080)
	struct RawConVar                                   ik_unlatch_max_rate;                                      // 0x1F0C120(0x0080)
	struct RawConVar                                   jump_grace_multi_tap_decay_velocity_based_max_speed;      // 0x1F0C1C0(0x0080)
	struct RawConVar                                   sv_rollspeed;                                             // 0x1F0C2C0(0x0080)
	struct RawConVar                                   automantle_backoff_anim_maxfrac;                          // 0x1F0C390(0x0080)
	struct RawConVar                                   sv_private_assist_style_override;                         // 0x1F0C910(0x0080)
	struct RawConVar                                   jump_grace_strength;                                      // 0x1F0C9E0(0x0080)
	struct RawConVar                                   traversal_enable;                                         // 0x1F0CB10(0x0080)
	struct RawConVar                                   wallrun_hangslipstarttime;                                // 0x1F0CC10(0x0080)
	struct RawConVar                                   wallrun_repelTimeMin;                                     // 0x1F0CD40(0x0080)
	struct RawConVar                                   sv_specaccelerate;                                        // 0x1F0CDE0(0x0080)
	struct RawConVar                                   airslowmo_ground_immediate_end;                           // 0x1F0CF30(0x0080)
	struct RawConVar                                   melee_lunge_abort_distance;                               // 0x1F0D000(0x0080)
	struct RawConVar                                   scriptremotefunctions_resetOnlyUi;                        // 0x1F0D0A0(0x0080)
	struct RawConVar                                   scriptremotefunctions_assert_on_bad_params;               // 0x1F0D140(0x0080)
	struct RawConVar                                   traversal_hand_required_width;                            // 0x1F0D1E0(0x0080)
	struct RawConVar                                   wallrun_upwardAutoPush;                                   // 0x1F0D280(0x0080)
	struct RawConVar                                   automantle_wallrun_maxangle_view;                         // 0x1F0D320(0x0080)
	struct RawConVar                                   superjump_fail_sound_when_jump_limit;                     // 0x1F0D460(0x0080)
	struct RawConVar                                   sv_pushaway_min_player_speed;                             // 0x1F0D500(0x0080)
	struct RawConVar                                   tether_gravity_dmg_frac_per_sec;                          // 0x1F0D610(0x0080)
	struct RawConVar                                   sv_pushaway_player_accel;                                 // 0x1F0D6B0(0x0080)
	struct RawConVar                                   ik_latch;                                                 // 0x1F0D750(0x0080)
	struct RawConVar                                   enable_height_based_land_anims_titans;                    // 0x1F0D820(0x0080)
	struct RawConVar                                   automantle_rest_frac;                                     // 0x1F0D8C0(0x0080)
	struct RawConVar                                   automantle_gun_enable_height;                             // 0x1F0D960(0x0080)
	struct RawConVar                                   sv_optimizedmovement;                                     // 0x1F0DA30(0x0080)
	struct RawConVar                                   grapple_speedRampTime_titan;                              // 0x1F0DB20(0x0080)
	struct RawConVar                                   tether_default_strength;                                  // 0x1F0DBC0(0x0080)
	struct RawConVar                                   automantle_maxangle_view;                                 // 0x1F0DC60(0x0080)
	struct RawConVar                                   entity_error_on_hitbox_count_mismatch;                    // 0x1F0DD30(0x0080)
	struct RawConVar                                   sv_airaccelerate;                                         // 0x1F0DDD0(0x0080)
	struct RawConVar                                   airslowmo_scripted_speed;                                 // 0x1F0DEA0(0x0080)
	struct RawConVar                                   automantle_forwarddist;                                   // 0x1F0DF40(0x0080)
	struct RawConVar                                   dodge_cockpitOffsetMax;                                   // 0x1F0E520(0x0080)
	struct RawConVar                                   grapple_accel_titan;                                      // 0x1F0E620(0x0080)
	struct RawConVar                                   superjump_min_power_use;                                  // 0x1F0E740(0x0080)
	struct RawConVar                                   slide_auto_stand;                                         // 0x1F0E810(0x0080)
	struct RawConVar                                   grapple_speedRampTime_human;                              // 0x1F0E8E0(0x0080)
	struct RawConVar                                   grapple_initialImpulse_human;                             // 0x1F0E980(0x0080)
	struct RawConVar                                   wallrun_slipstarttime;                                    // 0x1F0EB50(0x0080)
	struct RawConVar                                   window_hint_permissive_max_vel_change_down;               // 0x1F0EBF0(0x0080)
	struct RawConVar                                   window_hint_keyboard_fov_horz;                            // 0x1F0ECC0(0x0080)
	struct RawConVar                                   teams_unassigned_are_friendly;                            // 0x1F0ED60(0x0080)
	struct RawConVar                                   stuck_debugging_world_only;                               // 0x1F0EE00(0x0080)
	struct RawConVar                                   wallrun_debug;                                            // 0x1F0EF00(0x0080)
	struct RawConVar                                   DoorSoundPrefixSingle;                                    // 0x1F0EFA0(0x0080)
	struct RawConVar                                   automantle_height_below;                                  // 0x1F0F0D0(0x0080)
	struct RawConVar                                   mp_enablematchending;                                     // 0x1F0F1A0(0x0080)
	struct RawConVar                                   grapple_initialImpulseOffGround_human;                    // 0x1F0F240(0x0080)
	struct RawConVar                                   jump_grace_max_tap_count;                                 // 0x1F0F310(0x0080)
	struct RawConVar                                   wallrun_hangStopTime;                                     // 0x1F0F3B0(0x0080)
	struct RawConVar                                   scriptremotefunctions_stringMaxStored;                    // 0x1F0F4A0(0x0080)
	struct RawConVar                                   use_vm_cloak_offset;                                      // 0x1F0F540(0x0080)
	struct RawConVar                                   tether_default_healthDrainCutoffPct;                      // 0x1F0F5E0(0x0080)
	struct RawConVar                                   enable_height_based_land_anims;                           // 0x1F0F6B0(0x0080)
	struct RawConVar                                   skip_speed_retain;                                        // 0x1F0F780(0x0080)
	struct RawConVar                                   superjump_limit;                                          // 0x1F0F850(0x0080)
	struct RawConVar                                   wallrun_noInputSlipFrac;                                  // 0x1F0F920(0x0080)
	struct RawConVar                                   r_AirboatViewDampenDamp;                                  // 0x1F0FA30(0x0080)
	struct RawConVar                                   wallrun_fallAwaySpeed;                                    // 0x1F0FAD0(0x0080)
	struct RawConVar                                   traversal_window_sideways_offset;                         // 0x1F0FBD0(0x0080)
	struct RawConVar                                   grapple_autoMantle;                                       // 0x1F0FCA0(0x0080)
	struct RawConVar                                   grapple_initialSpeedMin_human;                            // 0x1F0FD70(0x0080)
	struct RawConVar                                   ik_debug_ent;                                             // 0x1F0FE40(0x0080)
	struct RawConVar                                   sprinttilt_maxvel;                                        // 0x1F0FEE0(0x0080)
	struct RawConVar                                   cl_observer_preset_playerSlot;                            // 0x1F10A00(0x0080)
	struct RawConVar                                   r_AirboatViewZHeight;                                     // 0x1F10AA0(0x0080)
	struct RawConVar                                   grapple_forcedRetractVel;                                 // 0x1F10B40(0x0080)
	struct RawConVar                                   window_hint_fov_horz;                                     // 0x1F10BE0(0x0080)
	struct RawConVar                                   wallclimb_vertical_gain_reduction;                        // 0x1F10C80(0x0080)
	struct RawConVar                                   automantle_max_frac;                                      // 0x1F10D20(0x0080)
	struct RawConVar                                   r_JeepViewDampenFreq;                                     // 0x1F10E50(0x0080)
	struct RawConVar                                   trigger_ignore_nonsolids;                                 // 0x1F10EF0(0x0080)
	struct RawConVar                                   dodge_vertical_in_air;                                    // 0x1F10F90(0x0080)
	struct RawConVar                                   jump_graceperiodmin;                                      // 0x1F11030(0x0080)
	struct RawConVar                                   wallrun_slipvel;                                          // 0x1F11100(0x0080)
	struct RawConVar                                   grapple_titanEmbarkDist;                                  // 0x1F11220(0x0080)
	struct RawConVar                                   grapple_around_obstacle_accel;                            // 0x1F112C0(0x0080)
	struct RawConVar                                   viewpunch_base_springConstantZ;                           // 0x1F11360(0x0080)
	struct RawConVar                                   script_precache_errors;                                   // 0x1F11460(0x0080)
	struct RawConVar                                   ik_height_adjust;                                         // 0x1F11500(0x0080)
	struct RawConVar                                   miles_replay_transition_enable_early_cleanup;             // 0x1F115A0(0x0080)
	struct RawConVar                                   sv_maxspeed;                                              // 0x1F11670(0x0080)
	struct RawConVar                                   viewpunch_base_springDampingY;                            // 0x1F11740(0x0080)
	struct RawConVar                                   wallrun_viewTiltPredictTime;                              // 0x1F117E0(0x0080)
	struct RawConVar                                   sv_maxvelocity;                                           // 0x1F11880(0x0080)
	struct RawConVar                                   skip_jump_height_speed;                                   // 0x1F11950(0x0080)
	struct RawConVar                                   grapple_debug;                                            // 0x1F11A50(0x0080)
	struct RawConVar                                   jump_graceperiod;                                         // 0x1F11B20(0x0080)
	struct RawConVar                                   grapple_accel_human;                                      // 0x1F11BC0(0x0080)
	struct RawConVar                                   dodge_vertical_threshold;                                 // 0x1F11C60(0x0080)
	struct RawConVar                                   tether_zipline_strength_scale;                            // 0x1F11D30(0x0080)
	struct RawConVar                                   sv_pushaway_debug;                                        // 0x1F11DD0(0x0080)
	struct RawConVar                                   melee_lunge_force_enable_flying;                          // 0x1F11EA0(0x0080)
	struct RawConVar                                   airslowmo_when_hovering;                                  // 0x1F11F40(0x0080)
	struct RawConVar                                   viewpunch_base_springConstantY;                           // 0x1F12010(0x0080)
	struct RawConVar                                   airslowmo_enabled;                                        // 0x1F120E0(0x0080)
	struct RawConVar                                   window_hint_max_vel_change_up;                            // 0x1F12690(0x0080)
	struct RawConVar                                   sv_rollangle;                                             // 0x1F12730(0x0080)
	struct RawConVar                                   skip_speed_reduce;                                        // 0x1F127D0(0x0080)
	struct RawConVar                                   superjump_jumppad_enable_time;                            // 0x1F12870(0x0080)
	struct RawConVar                                   wallrun_slipduration;                                     // 0x1F12940(0x0080)
	struct RawConVar                                   grapple_rodeoVerticalImpulse;                             // 0x1F12A10(0x0080)
	struct RawConVar                                   wallrun_repelTimeMax;                                     // 0x1F12AB0(0x0080)
	struct RawConVar                                   cl_bounds_show_errors;                                    // 0x1F12B50(0x0080)
	struct RawConVar                                   ik_height_adjust_speed;                                   // 0x1F12C20(0x0080)
	struct RawConVar                                   jump_graceperiodmax;                                      // 0x1F12CC0(0x0080)
	struct RawConVar                                   grapple_initialImpulseOffGround_human_npc;                // 0x1F12D60(0x0080)
	struct RawConVar                                   skip_replenish_double_jump;                               // 0x1F12E60(0x0080)
	struct RawConVar                                   cl_decal_backoff;                                         // 0x1F12F60(0x0080)
	struct RawConVar                                   window_hint_max_horz_vel_change_dot;                      // 0x1F13060(0x0080)
	struct RawConVar                                   traversal_window_hand_vertical_offset;                    // 0x1F13100(0x0080)
	struct RawConVar                                   grapple_autoMeleeConvergeTime;                            // 0x1F131D0(0x0080)
	struct RawConVar                                   grapple_initialSpeedMin_titan;                            // 0x1F13270(0x0080)
	struct RawConVar                                   weaponSwitch3p_checkNewWeapon;                            // 0x1F13310(0x0080)
	struct RawConVar                                   sv_players;                                               // 0x1F133E0(0x0080)
	struct RawConVar                                   r_AirboatViewDampenFreq;                                  // 0x1F13480(0x0080)
	struct RawConVar                                   grapple_retractVel;                                       // 0x1F13520(0x0080)
	struct RawConVar                                   automantle_searchdist;                                    // 0x1F135C0(0x0080)
	struct RawConVar                                   automantle_disable_hang;                                  // 0x1F13660(0x0080)
	struct RawConVar                                   wallrun_avoid_wall_top_decel;                             // 0x1F13700(0x0080)
	struct RawConVar                                   tether_maxvel;                                            // 0x1F137A0(0x0080)
	struct RawConVar                                   superjump_drain_power_onfail;                             // 0x1F13870(0x0080)
	struct RawConVar                                   skip_time;                                                // 0x1F13970(0x0080)
	struct RawConVar                                   grapple_speedRampMax_titan;                               // 0x1F13A70(0x0080)
	struct RawConVar                                   window_hint_permissive_max_horz_vel_change_dot;           // 0x1F13B10(0x0080)
	struct RawConVar                                   physics_defaultMaxSpeed;                                  // 0x1F13BB0(0x0080)
	struct RawConVar                                   r_JeepViewDampenDamp;                                     // 0x1F13C50(0x0080)
	struct RawConVar                                   grapple_autoMeleePredict;                                 // 0x1F13CF0(0x0080)
	struct RawConVar                                   viewmodel_attachment_fov_fix;                             // 0x1F13DB0(0x0080)
	struct RawConVar                                   sv_waterdist;                                             // 0x1F13EE0(0x0080)
	struct RawConVar                                   ik_debug_text;                                            // 0x1F13FE0(0x0080)
	struct RawConVar                                   realms_script_error_on_parenting_mismatch;                // 0x1F140B0(0x0080)
	struct RawConVar                                   jump_grace_max;                                           // 0x1F14150(0x0080)
	struct RawConVar                                   wallrun_angleChangeMinCos;                                // 0x1F14220(0x0080)
	struct RawConVar                                   one_handed_change_rate;                                   // 0x1F142F0(0x0080)
	struct RawConVar                                   tether_default_radius;                                    // 0x1F143F0(0x0080)
	struct RawConVar                                   melee_lunge_lag_compensate_target;                        // 0x1F144C0(0x0080)
	struct RawConVar                                   player_movementBounds_predictionShare;                    // 0x1F14560(0x0080)
	struct RawConVar                                   grapple_pullDelay_titan;                                  // 0x1F14AE0(0x0080)
	struct RawConVar                                   grapple_pullDelay_human;                                  // 0x1F14B80(0x0080)
	struct RawConVar                                   fire_animevents_overlay_not_active;                       // 0x1F14CD0(0x0080)
	struct RawConVar                                   sv_gravity;                                               // 0x1F14E00(0x0080)
	struct RawConVar                                   sv_footsteps;                                             // 0x1F155F0(0x0080)
	struct RawConVar                                   grapple_autoMeleeViewRotateSpeedNear;                     // 0x1F15D10(0x0080)
	struct RawConVar                                   grapple_autoMeleeViewRotateSpeedFar;                      // 0x1F15DB0(0x0080)
	struct RawConVar                                   grapple_autoMeleePredictTime;                             // 0x1F15E50(0x0080)
	struct RawConVar                                   grapple_shootVel;                                         // 0x1F15EF0(0x0080)
	struct RawConVar                                   ik_debug;                                                 // 0x1F16000(0x0080)
	struct RawConVar                                   ground_trace_hull_radius;                                 // 0x1F160A0(0x0080)
	struct RawConVar                                   old_anim_parity;                                          // 0x1F16670(0x0080)
	struct RawConVar                                   mp_gamemode;                                              // 0x1F16710(0x0080)
	struct RawConVar                                   sequence_transitioner_enable;                             // 0x1F16830(0x0080)
	struct RawConVar                                   hover_vehicle_boost_speed_max;                            // 0x1F168D0(0x0080)
	struct RawConVar                                   hover_vehicle_boost_cooldown;                             // 0x1F169F0(0x0080)
	struct RawConVar                                   gravity_grenade_projectile_min_speed;                     // 0x1F1A9B0(0x0080)
	struct RawConVar                                   violence_ablood;                                          // 0x1F1AAC0(0x0080)
	struct RawConVar                                   cl_burninggibs;                                           // 0x1F1B040(0x0080)
	struct RawConVar                                   max_explosive_damage_mass;                                // 0x1F1B5C0(0x0080)
	struct RawConVar                                   status_effect_warning_level;                              // 0x1F1B660(0x0080)
	struct RawConVar                                   push_ragdolls;                                            // 0x1F1B770(0x0080)
	struct RawConVar                                   hover_vehicle_acceleration;                               // 0x1F1B810(0x0080)
	struct RawConVar                                   lobby_cullNetEntities;                                    // 0x1F1B8B0(0x0080)
	struct RawConVar                                   sv_pushaway_clientside_size;                              // 0x1F1BE30(0x0080)
	struct RawConVar                                   push_exit_traversal_if_goal_position_blocked;             // 0x1F1C470(0x0080)
	struct RawConVar                                   props_break_max_pieces;                                   // 0x1F1C510(0x0080)
	struct RawConVar                                   props_break_burst_rotation;                               // 0x1F1C5B0(0x0080)
	struct RawConVar                                   hover_vehicle_speed;                                      // 0x1F1CBA0(0x0080)
	struct RawConVar                                   violence_agibs;                                           // 0x1F1CD20(0x0080)
	struct RawConVar                                   min_explosive_damage_mass;                                // 0x1F1CDC0(0x0080)
	struct RawConVar                                   cl_deferred_trace_normal_priority;                        // 0x1F1D340(0x0080)
	struct RawConVar                                   enable_uninitialized_netvar_crashes;                      // 0x1F1DAD0(0x0080)
	struct RawConVar                                   cl_debug_deferred_trace;                                  // 0x1F1DB70(0x0080)
	struct RawConVar                                   bullet_trace_test_debug;                                  // 0x1F1DC10(0x0080)
	struct RawConVar                                   violence_hgibs;                                           // 0x1F1DCB0(0x0080)
	struct RawConVar                                   hover_vehicle_deceleration;                               // 0x1F1DDF0(0x0080)
	struct RawConVar                                   jumppad_vert_override_ducked_scalar;                      // 0x1F1DE90(0x0080)
	struct RawConVar                                   solid_obb_pass_standard_filter;                           // 0x1F1EE40(0x0080)
	struct RawConVar                                   gravity_grenade_decel;                                    // 0x1F1EEE0(0x0080)
	struct RawConVar                                   hover_vehicle_air_acceleration;                           // 0x1F1EF80(0x0080)
	struct RawConVar                                   push_debug_ent;                                           // 0x1F1F020(0x0080)
	struct RawConVar                                   anim_print_transition_overflow;                           // 0x1F1F0C0(0x0080)
	struct RawConVar                                   push_search_along_traversal_during_crush_resolution;      // 0x1F1F160(0x0080)
	struct RawConVar                                   net_showusercmd;                                          // 0x1F20510(0x0080)
	struct RawConVar                                   scriptNetVar_categoryAsserts;                             // 0x1F205B0(0x0080)
	struct RawConVar                                   hover_vehicle_deceleration_powerbreaking;                 // 0x1F20650(0x0080)
	struct RawConVar                                   max_explosive_damage_velocity;                            // 0x1F20770(0x0080)
	struct RawConVar                                   cl_debug_deferred_trace_overlay;                          // 0x1F20810(0x0080)
	struct RawConVar                                   bullet_trace_test_enable;                                 // 0x1F20B30(0x0080)
	struct RawConVar                                   violence_hblood;                                          // 0x1F21130(0x0080)
	struct RawConVar                                   hover_vehicle_boost_speed_min;                            // 0x1F211F0(0x0080)
	struct RawConVar                                   script_mover_traversal_mover_support;                     // 0x1F21290(0x0080)
	struct RawConVar                                   push_debug;                                               // 0x1F21330(0x0080)
	struct RawConVar                                   props_break_max_pieces_perframe;                          // 0x1F213D0(0x0080)
	struct RawConVar                                   push_ignore_animation_entity_blockers;                    // 0x1F21470(0x0080)
	struct RawConVar                                   r_visualizetraces_duration;                               // 0x1F22500(0x0080)
	struct RawConVar                                   r_visualizetraces;                                        // 0x1F22A80(0x0080)
	struct RawConVar                                   anim_transitionsequences;                                 // 0x1F23000(0x0080)
	struct RawConVar                                   cl_ragdoll_force_fade_time_on_moving_geo;                 // 0x1F230A0(0x0080)
	struct RawConVar                                   g_ragdoll_important_maxcount;                             // 0x1F23140(0x0080)
	struct RawConVar                                   voice_clientdebug;                                        // 0x1F231E0(0x0080)
	struct RawConVar                                   cl_particle_control_snap_mode;                            // 0x1F23280(0x0080)
	struct RawConVar                                   cl_particle_control_snap_dist;                            // 0x1F23320(0x0080)
	struct RawConVar                                   cl_particle_batch_mode;                                   // 0x1F238D0(0x0080)
	struct RawConVar                                   voice_modenable;                                          // 0x1F23970(0x0080)
	struct RawConVar                                   cl_pred_error_verbose;                                    // 0x1F23A10(0x0080)
	struct RawConVar                                   particleEffect_checkShouldStillPlay;                      // 0x1F23AB0(0x0080)
	struct RawConVar                                   reactive_wakeOnStop;                                      // 0x1F23B50(0x0080)
	struct RawConVar                                   vm_effect_format_attachments;                             // 0x1F23BF0(0x0080)
	struct RawConVar                                   g_debug_ragdoll_removal;                                  // 0x1F23C90(0x0080)
	struct RawConVar                                   cl_jiggle_bone_debug_pitch_constraints;                   // 0x1F242D0(0x0080)
	struct RawConVar                                   cl_jiggle_bone_invert;                                    // 0x1F24370(0x0080)
	struct RawConVar                                   cl_jiggle_bone_debug;                                     // 0x1F24410(0x0080)
	struct RawConVar                                   cl_jiggle_bone_sanity;                                    // 0x1F244B0(0x0080)
	struct RawConVar                                   cl_jiggle_bone_debug_yaw_constraints;                     // 0x1F24550(0x0080)
	struct RawConVar                                   viewDrift_yaw_base1_phase;                                // 0x1F245F0(0x0080)
	struct RawConVar                                   offhand_cancelled_by_melee_v2;                            // 0x1F24690(0x0080)
	struct RawConVar                                   viewDrift_yaw_shifter_amp;                                // 0x1F24730(0x0080)
	struct RawConVar                                   slide_viewTiltPlayerSpeed;                                // 0x1F24840(0x0080)
	struct RawConVar                                   impulse_low_decel_duration_scalar;                        // 0x1F248E0(0x0080)
	struct RawConVar                                   cl_predict_motioncontrol;                                 // 0x1F24980(0x0080)
	struct RawConVar                                   twitch_debug;                                             // 0x1F24A50(0x0080)
	struct RawConVar                                   melee_queue_attack_anim_event;                            // 0x1F24AF0(0x0080)
	struct RawConVar                                   cl_physicsshadowupdate_render;                            // 0x1F24B90(0x0080)
	struct RawConVar                                   laserSightColorCustomized;                                // 0x1F24C30(0x0080)
	struct RawConVar                                   viewDrift_pitch_scaler_phase;                             // 0x1F24CD0(0x0080)
	struct RawConVar                                   cockpitDrift_speedYaw;                                    // 0x1F24D70(0x0080)
	struct RawConVar                                   viewDrift_pitch_scaler_freq;                              // 0x1F24E20(0x0080)
	struct RawConVar                                   viewDrift_pitch_scaler_amp;                               // 0x1F24EE0(0x0080)
	struct RawConVar                                   cockpitDrift_scalePitch;                                  // 0x1F24FD0(0x0080)
	struct RawConVar                                   player_ADS_buffer_time_seconds;                           // 0x1F25090(0x0080)
	struct RawConVar                                   sprint_powerdrain;                                        // 0x1F25130(0x0080)
	struct RawConVar                                   viewDrift_pitch_base1_phase;                              // 0x1F251D0(0x0080)
	struct RawConVar                                   viewDrift_yaw_scaler_amp;                                 // 0x1F252B0(0x0080)
	struct RawConVar                                   noReloadAfterUse;                                         // 0x1F25350(0x0080)
	struct RawConVar                                   viewDrift_pitch_base2_phase;                              // 0x1F253F0(0x0080)
	struct RawConVar                                   viewDrift;                                                // 0x1F25490(0x0080)
	struct RawConVar                                   viewDrift_yaw_base2_amp;                                  // 0x1F25530(0x0080)
	struct RawConVar                                   wall_climb_pose_paramteter_hands_enabled;                 // 0x1F255D0(0x0080)
	struct RawConVar                                   cockpitDrift_scaleYaw;                                    // 0x1F259E0(0x0080)
	struct RawConVar                                   weapon_auto_swap_ordnance_no_ammo;                        // 0x1F25A80(0x0080)
	struct RawConVar                                   slide_viewTiltSide;                                       // 0x1F25B20(0x0080)
	struct RawConVar                                   portal_use_player_avoidance;                              // 0x1F25BC0(0x0080)
	struct RawConVar                                   cl_shadowupdatespacing;                                   // 0x1F25C80(0x0080)
	struct RawConVar                                   viewDrift_pitch_base2_amp;                                // 0x1F25D20(0x0080)
	struct RawConVar                                   laserSightColor;                                          // 0x1F25DC0(0x0080)
	struct RawConVar                                   player_setting_stickysprintforward;                       // 0x1F25E60(0x0080)
	struct RawConVar                                   viewDrift_yaw_shifter_freq;                               // 0x1F25F00(0x0080)
	struct RawConVar                                   viewDrift_yaw_base2_phase;                                // 0x1F25FA0(0x0080)
	struct RawConVar                                   viewDrift_yaw_base2_freq;                                 // 0x1F26040(0x0080)
	struct RawConVar                                   viewDrift_pitch_shifter_freq;                             // 0x1F26190(0x0080)
	struct RawConVar                                   viewDrift_pitch_shifter_amp;                              // 0x1F26230(0x0080)
	struct RawConVar                                   viewDrift_ads_delay_debounce_time;                        // 0x1F262D0(0x0080)
	struct RawConVar                                   modelswap_allow_anim_continuation;                        // 0x1F26370(0x0080)
	struct RawConVar                                   slide_viewTiltDecreaseSpeed;                              // 0x1F26410(0x0080)
	struct RawConVar                                   viewDrift_pitch_base1_freq;                               // 0x1F264B0(0x0080)
	struct RawConVar                                   viewDrift_pitch_base1_amp;                                // 0x1F26550(0x0080)
	struct RawConVar                                   smoothstairs_lunge;                                       // 0x1F265F0(0x0080)
	struct RawConVar                                   weapon_meleeButtonPressProtection;                        // 0x1F26690(0x0080)
	struct RawConVar                                   viewDrift_yaw_base1_freq;                                 // 0x1F26730(0x0080)
	struct RawConVar                                   viewDrift_yaw_scaler_base;                                // 0x1F267D0(0x0080)
	struct RawConVar                                   slide_viewTiltIncreaseSpeed;                              // 0x1F26870(0x0080)
	struct RawConVar                                   viewDrift_yaw_scaler_phase;                               // 0x1F26910(0x0080)
	struct RawConVar                                   viewDrift_pitch_shifter_phase;                            // 0x1F269B0(0x0080)
	struct RawConVar                                   cockpitDrift_speedPitch;                                  // 0x1F26A70(0x0080)
	struct RawConVar                                   viewDrift_yaw_scaler_freq;                                // 0x1F26B10(0x0080)
	struct RawConVar                                   sv_infinite_ammo;                                         // 0x1F26BB0(0x0080)
	struct RawConVar                                   weapon_pickup_allow_dupes;                                // 0x1F26C50(0x0080)
	struct RawConVar                                   viewDrift_pitch_base2_freq;                               // 0x1F27060(0x0080)
	struct RawConVar                                   titan_sprint_sound;                                       // 0x1F27100(0x0080)
	struct RawConVar                                   force_stance_v2;                                          // 0x1F271A0(0x0080)
	struct RawConVar                                   viewDrift_yaw_base1_amp;                                  // 0x1F27240(0x0080)
	struct RawConVar                                   viewDrift_pitch_scaler_base;                              // 0x1F272E0(0x0080)
	struct RawConVar                                   viewDrift_yaw_shifter_phase;                              // 0x1F27380(0x0080)
	struct RawConVar                                   view_offset_entity_enable;                                // 0x1F27420(0x0080)
	struct RawConVar                                   anim_view_entity_third_person_camera_use_move_parent;     // 0x1F279A0(0x0080)
	struct RawConVar                                   ui_posedebug_fade_out_time;                               // 0x1F27A40(0x0080)
	struct RawConVar                                   ui_posedebug_fade_in_time;                                // 0x1F27AE0(0x0080)
	struct RawConVar                                   pvs_addWorkItemsAccum;                                    // 0x1F28550(0x0080)
	struct RawConVar                                   pvs_debug;                                                // 0x1F285F0(0x0080)
	struct RawConVar                                   pvs_frustumCullOnly;                                      // 0x1F28690(0x0080)
	struct RawConVar                                   pvs_addWorkItemsThreshold_edges;                          // 0x1F28730(0x0080)
	struct RawConVar                                   pvs_addWorkItemsThreshold_leaves;                         // 0x1F287D0(0x0080)
	struct RawConVar                                   pvs_cullBoxes;                                            // 0x1F28870(0x0080)
	struct RawConVar                                   tts_usejob;                                               // 0x1F28910(0x0080)
	struct RawConVar                                   r_particle_lighting_enable;                               // 0x1F289B0(0x0080)
	struct RawConVar                                   monitor_zfar_override_enabled;                            // 0x1F28AF0(0x0080)
	struct RawConVar                                   mat_global_lighting;                                      // 0x1F28B90(0x0080)
	struct RawConVar                                   r_fadeincode;                                             // 0x1F28C30(0x0080)
	struct RawConVar                                   r_particle_low_res_debug;                                 // 0x1F28CD0(0x0080)
	struct RawConVar                                   viewmodel_selfshadow_tightbounds;                         // 0x1F28D70(0x0080)
	struct RawConVar                                   monitor_cc;                                               // 0x1F28E10(0x0080)
	struct RawConVar                                   mat_lightcull_subview;                                    // 0x1F28EB0(0x0080)
	struct RawConVar                                   r_drawscreenspaceparticles;                               // 0x1F28F50(0x0080)
	struct RawConVar                                   view_models_draw_early;                                   // 0x1F28FF0(0x0080)
	struct RawConVar                                   r_blurmenubg;                                             // 0x1F29090(0x0080)
	struct RawConVar                                   viewmodel_bounds_draw_lock;                               // 0x1F29130(0x0080)
	struct RawConVar                                   r_sky_ignoreAngles;                                       // 0x1F291D0(0x0080)
	struct RawConVar                                   r_drawalphasort;                                          // 0x1F29270(0x0080)
	struct RawConVar                                   cl_drawmonitors;                                          // 0x1F29310(0x0080)
	struct RawConVar                                   monitor_postfx;                                           // 0x1F29450(0x0080)
	struct RawConVar                                   nx_static_lobby_capture_delay_frames;                     // 0x2044C00(0x0080)
	struct RawConVar                                   nx_static_lobby_mode;                                     // 0x2044CA0(0x0080)
	struct RawConVar                                   mat_lightcull_subviews;                                   // 0x2044DE0(0x0080)
	struct RawConVar                                   gl_clear_randomcolor_period_sec;                          // 0x2044E80(0x0080)
	struct RawConVar                                   opaque_renderable_worker;                                 // 0x2044F20(0x0080)
	struct RawConVar                                   r_particle_lighting_debug;                                // 0x2044FC0(0x0080)
	struct RawConVar                                   r_zfill_world_meshes;                                     // 0x2045060(0x0080)
	struct RawConVar                                   static_shadow_debug_2d;                                   // 0x2045100(0x0080)
	struct RawConVar                                   gl_clear_fogcolor;                                        // 0x20451A0(0x0080)
	struct RawConVar                                   r_drawviewmodel;                                          // 0x2045240(0x0080)
	struct RawConVar                                   r_drawsky;                                                // 0x20452E0(0x0080)
	struct RawConVar                                   monitor_zfar_override;                                    // 0x2045380(0x0080)
	struct RawConVar                                   gl_clear_randomcolor;                                     // 0x2045420(0x0080)
	struct RawConVar                                   r_zfill_opaque_renderables;                               // 0x20454C0(0x0080)
	struct RawConVar                                   monitor_rui_world_enabled;                                // 0x2045560(0x0080)
	struct RawConVar                                   use_monitors;                                             // 0x2045600(0x0080)
	struct RawConVar                                   shadow_clear_dist;                                        // 0x20456A0(0x0080)
	struct RawConVar                                   viewmodel_selfshadow_debug_2d;                            // 0x2045740(0x0080)
	struct RawConVar                                   ssao_tech;                                                // 0x20457E0(0x0080)
	struct RawConVar                                   cl_parallelParticlePreDrawWork;                           // 0x2045880(0x0080)
	struct RawConVar                                   viewmodel_bounds_draw;                                    // 0x2045920(0x0080)
	struct RawConVar                                   r_earlyRenderables;                                       // 0x20459C0(0x0080)
	struct RawConVar                                   fog_enableskybox;                                         // 0x2045A60(0x0080)
	struct RawConVar                                   r_zfill_static_props;                                     // 0x2045B00(0x0080)
	struct RawConVar                                   r_drawstaticprops;                                        // 0x2045C40(0x0080)
	struct RawConVar                                   r_drawdepth_of_blend2transparent;                         // 0x2045CE0(0x0080)
	struct RawConVar                                   nx_static_lobby_capture_debug;                            // 0x2045D80(0x0080)
	struct RawConVar                                   gl_clear_mrt4;                                            // 0x2045E20(0x0080)
	struct RawConVar                                   r_drawtransrenderables;                                   // 0x2045EC0(0x0080)
	struct RawConVar                                   staticProp_refineDrawOnWorker;                            // 0x2045F60(0x0080)
	struct RawConVar                                   r_zfill;                                                  // 0x2046000(0x0080)
	struct RawConVar                                   r_zfill_world_occluder;                                   // 0x20460A0(0x0080)
	struct RawConVar                                   r_drawopaquerenderables;                                  // 0x2046140(0x0080)
	struct RawConVar                                   gl_clear_color_buffer;                                    // 0x20461E0(0x0080)
	struct RawConVar                                   fog_enable;                                               // 0x2046280(0x0080)
	struct RawConVar                                   cl_deferred_effects;                                      // 0x2046320(0x0080)
	struct RawConVar                                   cl_always_draw_3p_player;                                 // 0x20463C0(0x0080)
	struct RawConVar                                   wind_override_color;                                      // 0x2046460(0x0080)
	struct RawConVar                                   wind_override_volumes;                                    // 0x2046500(0x0080)
	struct RawConVar                                   wind_time;                                                // 0x20465A0(0x0080)
	struct RawConVar                                   wind_override_time;                                       // 0x2046640(0x0080)
	struct RawConVar                                   wind_override_flags;                                      // 0x20466E0(0x0080)
	struct RawConVar                                   wind_speed;                                               // 0x2046780(0x0080)
	struct RawConVar                                   rendering_debug_overlay;                                  // 0x2046820(0x0080)
	struct RawConVar                                   wind_dir;                                                 // 0x20468C0(0x0080)
	struct RawConVar                                   wind_draw_volumes;                                        // 0x2046960(0x0080)
	struct RawConVar                                   wind_gust_scale;                                          // 0x2046A00(0x0080)
	struct RawConVar                                   lighting_debug_overlay;                                   // 0x2046AA0(0x0080)
	struct RawConVar                                   everything_unlocked;                                      // 0x2046B40(0x0080)
	struct RawConVar                                   script_compile_all_levels;                                // 0x2046C20(0x0080)
	struct RawConVar                                   bug_reproNum;                                             // 0x2046DA0(0x0080)
	struct RawConVar                                   ScriptDisallowedToUsePersistenceOnSP;                     // 0x2046E80(0x0080)
	struct RawConVar                                   equip_all_emotes;                                         // 0x2046F20(0x0080)
	struct RawConVar                                   sound_musicReduced;                                       // 0x20472E0(0x0080)
	struct RawConVar                                   ignore_script_errors;                                     // 0x2047470(0x0080)
	struct RawConVar                                   pve_debug;                                                // 0x2047530(0x0080)
	struct RawConVar                                   devStats;                                                 // 0x2047660(0x0080)
	struct RawConVar                                   seasonquest_force_treasurepacks_count;                    // 0x2047700(0x0080)
	struct RawConVar                                   seasonquest_force_missionscleared_count;                  // 0x20477A0(0x0080)
	struct RawConVar                                   playerArrayRemovesMarkForDelete;                          // 0x2047840(0x0080)
	struct RawConVar                                   script_error_on_midgame_load;                             // 0x2047920(0x0080)
	struct RawConVar                                   ScriptSaveAllowed;                                        // 0x2047B20(0x0080)
	struct RawConVar                                   script_parallel_trace_LOS_multiple;                       // 0x2047C60(0x0080)
	struct RawConVar                                   script_ranked_debug;                                      // 0x2047D00(0x0080)
	struct RawConVar                                   putEntityInSafeSpot_maskExcludesMonster;                  // 0x2047E30(0x0080)
	struct RawConVar                                   script_seasonNameQueryInterval;                           // 0x2047F80(0x0080)
	struct RawConVar                                   fast_intro;                                               // 0x2048020(0x0080)
	struct RawConVar                                   settings_field_lookup_doesnt_exist_is_fatal;              // 0x2048100(0x0080)
	struct RawConVar                                   cl_deathhints_enabled;                                    // 0x20481A0(0x0080)
	struct RawConVar                                   cl_safearea;                                              // 0x2048280(0x0080)
	struct RawConVar                                   damage_indicator_style_pilot;                             // 0x2048360(0x0080)
	struct RawConVar                                   ftue_flow_enabled;                                        // 0x2048440(0x0080)
	struct RawConVar                                   visible_ent_cone_debug_duration_client;                   // 0x20484E0(0x0080)
	struct RawConVar                                   pin_telemetry_debug_script;                               // 0x2048650(0x0080)
	struct RawConVar                                   script_retry_after_compile_errors;                        // 0x2048710(0x0080)
	struct RawConVar                                   spinner_debug_info;                                       // 0x20487B0(0x0080)
	struct RawConVar                                   gamepad_custom_titan;                                     // 0x2048890(0x0080)
	struct RawConVar                                   menu_faq_viewed;                                          // 0x2048930(0x0080)
	struct RawConVar                                   rankedplay_voice_enabled;                                 // 0x2048A50(0x0080)
	struct RawConVar                                   first_time_player_state;                                  // 0x2048AF0(0x0080)
	struct RawConVar                                   hud_setting_ordnanceUseOnHold;                            // 0x2048BD0(0x0080)
	struct RawConVar                                   feature_suppression_flags;                                // 0x2048CB0(0x0080)
	struct RawConVar                                   player_setting_enable_heartbeat_sounds;                   // 0x2048D50(0x0080)
	struct RawConVar                                   gamepad_custom_pilot;                                     // 0x2048DF0(0x0080)
	struct RawConVar                                   hud_setting_ordnanceWheelUseOnRelease;                    // 0x2048E90(0x0080)
	struct RawConVar                                   hud_setting_healthUseOnHold;                              // 0x2048F90(0x0080)
	struct RawConVar                                   hud_setting_healthWheelToggle;                            // 0x20491F0(0x0080)
	struct RawConVar                                   menu_faq_patchnotes_version;                              // 0x20492B0(0x0080)
	struct RawConVar                                   intro_viewed;                                             // 0x2049350(0x0080)
	struct RawConVar                                   hud_setting_healthWheelUseOnRelease;                      // 0x20493F0(0x0080)
	struct RawConVar                                   rankedplay_display_enabled;                               // 0x20494D0(0x0080)
	struct RawConVar                                   hud_setting_pingWheelToggle;                              // 0x2049570(0x0080)
	struct RawConVar                                   menu_was_multiplayer_played_last;                         // 0x2049610(0x0080)
	struct RawConVar                                   menu_faq_community_version;                               // 0x2049870(0x0080)
	struct RawConVar                                   gamepad_buttons_are_southpaw;                             // 0x2049A20(0x0080)
	struct RawConVar                                   firsttime_mp_message;                                     // 0x2049AC0(0x0080)
	struct RawConVar                                   gamepad_button_layout;                                    // 0x2049B60(0x0080)
	struct RawConVar                                   eula_version_accepted;                                    // 0x2049C00(0x0080)
	struct RawConVar                                   net_minResetIdleTimerInterval;                            // 0x2049CE0(0x0080)
	struct RawConVar                                   gamma_adjusted;                                           // 0x204A0D0(0x0080)
	struct RawConVar                                   eula_version;                                             // 0x204A190(0x0080)
	struct RawConVar                                   player_setting_damage_closes_deathbox_menu;               // 0x204A230(0x0080)
	struct RawConVar                                   hud_setting_ordnanceWheelToggle;                          // 0x204A370(0x0080)
	struct RawConVar                                   vscript_ui_do_delay_init;                                 // 0x204A640(0x0080)
	struct RawConVar                                   grx_vertical_dialogue_confirmation;                       // 0x204A740(0x0080)
	struct RawConVar                                   script_debugger_connect_ui_auto;                          // 0x204A880(0x0080)
	struct RawConVar                                   gamepad_use_type;                                         // 0x204AA90(0x0080)
	struct RawConVar                                   gamepad_stick_layout;                                     // 0x204AB30(0x0080)
	struct RawConVar                                   dump_varsights_calculations;                              // 0x204ABD0(0x0080)
	struct RawConVar                                   variable_sights_gravity_scale_override;                   // 0x204AD30(0x0080)
	struct RawConVar                                   party_color_enabled;                                      // 0x2050EF0(0x0080)
	struct RawConVar                                   XLOG_DigiCertGlobalRoot_usable;                           // 0x2059600(0x0080)
	struct RawConVar                                   XLOG_telemetry_socket_send_freq;                          // 0x20596A0(0x0080)
	struct RawConVar                                   XLOG_telemetry_streams;                                   // 0x20597E0(0x0080)
	struct RawConVar                                   XLOG_TLS_hostname;                                        // 0x2059880(0x0080)
	struct RawConVar                                   XLOG_TLS_trust_cert;                                      // 0x2059920(0x0080)
	struct RawConVar                                   XLOG_telemetry_buffer_sends_per_second;                   // 0x2059B00(0x0080)
	struct RawConVar                                   XLOG_telemetry_shortcircuit;                              // 0x2059BA0(0x0080)
	struct RawConVar                                   XLOG_telemetry_socket_recv_freq;                          // 0x2059C40(0x0080)
	struct RawConVar                                   XLOG_TLS_secure_conn;                                     // 0x2059CE0(0x0080)
	struct RawConVar                                   anim_showstate;                                           // 0x205A840(0x0080)
	struct RawConVar                                   movement_anim_playback_minrate;                           // 0x205A8E0(0x0080)
	struct RawConVar                                   anim_estimateVelocity;                                    // 0x205A980(0x0080)
	struct RawConVar                                   movement_anim_playback_maxrate;                           // 0x205AA20(0x0080)
	struct RawConVar                                   anim_player_ragdoll_fix;                                  // 0x205AAC0(0x0080)
	struct RawConVar                                   mp_maxbodyyaw;                                            // 0x205AB60(0x0080)
	struct RawConVar                                   anim_showstatelog;                                        // 0x205AC00(0x0080)
	struct RawConVar                                   rodeoed_anims_enabled;                                    // 0x205ACA0(0x0080)
	struct RawConVar                                   mp_scaleAnimationSpeeds;                                  // 0x205AD40(0x0080)
	struct RawConVar                                   movement_anim_sprint_playback_maxrate;                    // 0x205ADE0(0x0080)
	struct RawConVar                                   use_ziprail_activity;                                     // 0x205AE80(0x0080)
	struct RawConVar                                   mp_showgestureslots;                                      // 0x205AF20(0x0080)
	struct RawConVar                                   mp_bodyyawrate;                                           // 0x205AFC0(0x0080)
	struct RawConVar                                   player_movingDeathThreshold;                              // 0x205B060(0x0080)
	struct RawConVar                                   anim_runGestureAnimEventsToCompletionOnReset_client;      // 0x205B100(0x0080)
	struct RawConVar                                   hover_vehicle_passenger_left_attachment_name;             // 0x205B1A0(0x0080)
	struct RawConVar                                   anim_playerMovementAngleMargin;                           // 0x205B240(0x0080)
	struct RawConVar                                   movement_anim_downed_playback_maxrate;                    // 0x205B2E0(0x0080)
	struct RawConVar                                   ui_DpadNavigationDeActive;                                // 0x205B5F0(0x0080)
	struct RawConVar                                   ui_gameui_ctrlr_title;                                    // 0x205B690(0x0080)
	struct RawConVar                                   demo_ui_enable;                                           // 0x205B730(0x0080)
	struct RawConVar                                   ui_virtualnav_render;                                     // 0x205B7D0(0x0080)
	struct RawConVar                                   ui_lobby_jointimeout;                                     // 0x205B870(0x0080)
	struct RawConVar                                   ui_loadingscreen_autotransition_time;                     // 0x205B910(0x0080)
	struct RawConVar                                   playerListPartyColorR;                                    // 0x205B9B0(0x0080)
	struct RawConVar                                   demo_connect_string;                                      // 0x205BA50(0x0080)
	struct RawConVar                                   progressbar_allow_wrap;                                   // 0x205BAF0(0x0080)
	struct RawConVar                                   script_showErrorDialogs;                                  // 0x205BB90(0x0080)
	struct RawConVar                                   ui_loadingscreen_transition_time;                         // 0x205BC30(0x0080)
	struct RawConVar                                   playerListPartyColorB;                                    // 0x205BCD0(0x0080)
	struct RawConVar                                   progressbar_single_bar;                                   // 0x205BD70(0x0080)
	struct RawConVar                                   ui_gameui_modal;                                          // 0x205BE10(0x0080)
	struct RawConVar                                   chatroom_nameLength;                                      // 0x205BEB0(0x0080)
	struct RawConVar                                   progressbar_high_precision;                               // 0x205BF50(0x0080)
	struct RawConVar                                   ui_loadingscreen_fadein_time;                             // 0x205BFF0(0x0080)
	struct RawConVar                                   ui_loadingscreen_fadeout_time;                            // 0x205C090(0x0080)
	struct RawConVar                                   vgui_drawPolyShapes;                                      // 0x205C130(0x0080)
	struct RawConVar                                   loaderrorsNeedShown;                                      // 0x205C1D0(0x0080)
	struct RawConVar                                   ui_lobby_noresults_create_msg_time;                       // 0x205C310(0x0080)
	struct RawConVar                                   ui_fadexui_time;                                          // 0x205C3B0(0x0080)
	struct RawConVar                                   ui_fadecloud_time;                                        // 0x205C450(0x0080)
	struct RawConVar                                   mainmenu_background_movie;                                // 0x205C4F0(0x0080)
	struct RawConVar                                   ping_max_red;                                             // 0x205C590(0x0080)
	struct RawConVar                                   sys_attract_mode_timeout;                                 // 0x205C630(0x0080)
	struct RawConVar                                   ping_max_green;                                           // 0x205C6D0(0x0080)
	struct RawConVar                                   ruiPanel_resArgName;                                      // 0x205C770(0x0080)
	struct RawConVar                                   chatroom_useSlopSpace;                                    // 0x205C810(0x0080)
	struct RawConVar                                   loaderrorsCount;                                          // 0x205C8B0(0x0080)
	struct RawConVar                                   ui_lobby_noautostart;                                     // 0x205C950(0x0080)
	struct RawConVar                                   ui_loadingscreen_mintransition_time;                      // 0x205C9F0(0x0080)
	struct RawConVar                                   playerListPartyColorG;                                    // 0x205CA90(0x0080)
	struct RawConVar                                   ping_max_yellow;                                          // 0x205CB30(0x0080)
	struct RawConVar                                   chatroom_nameWidth;                                       // 0x205CBD0(0x0080)
	struct RawConVar                                   chatroom_namePaddingX;                                    // 0x205CC70(0x0080)
	struct RawConVar                                   playerListUseFriendColor;                                 // 0x205CD10(0x0080)
	struct RawConVar                                   localClientPlayerCachedLevel;                             // 0x205CDB0(0x0080)
	struct RawConVar                                   chatroom_voiceMode;                                       // 0x205CE50(0x0080)
	struct RawConVar                                   portal_pointpush_debug;                                   // 0x205D8B0(0x0080)
	struct RawConVar                                   portal_pointpush_think_rate;                              // 0x205D950(0x0080)
	struct RawConVar                                   miles_force_emitter_environment;                          // 0x205DA90(0x0080)
	struct RawConVar                                   cockpit_screen_boot_delay_mid;                            // 0x205DB50(0x0080)
	struct RawConVar                                   miles_solo_ents;                                          // 0x205DBF0(0x0080)
	struct RawConVar                                   miles_listener_freeze;                                    // 0x205DC90(0x0080)
	struct RawConVar                                   cockpit_damage_chroma_scale;                              // 0x205DD50(0x0080)
	struct RawConVar                                   hud_setting_compactOverHeadNames;                         // 0x205DE90(0x0080)
	struct RawConVar                                   sound_only_warn_on_missing_sound_events_in_client_script; // 0x205DF30(0x0080)
	struct RawConVar                                   usePromptImageScale;                                      // 0x205DFD0(0x0080)
	struct RawConVar                                   draw_target_info_offscreen;                               // 0x205E090(0x0080)
	struct RawConVar                                   miles_occlusion_partial;                                  // 0x205E130(0x0080)
	struct RawConVar                                   cockpit_hit_chroma_max_time;                              // 0x205E1D0(0x0080)
	struct RawConVar                                   usePromptBaseColor;                                       // 0x205E270(0x0080)
	struct RawConVar                                   miles_voice_part_size;                                    // 0x205E9A0(0x0080)
	struct RawConVar                                   miles_spatialize_front_degrees;                           // 0x205EC80(0x0080)
	struct RawConVar                                   cockpit_screen_boot_delay_bottom;                         // 0x205EDC0(0x0080)
	struct RawConVar                                   miles_spatialize_on;                                      // 0x205EE60(0x0080)
	struct RawConVar                                   miles_occlusion_use_reset_after_deferred_initial;         // 0x205EF00(0x0080)
	struct RawConVar                                   miles_voice_decimate_rate;                                // 0x205EFA0(0x0080)
	struct RawConVar                                   miles_voice_buffer_ms;                                    // 0x205F040(0x0080)
	struct RawConVar                                   video_menu_uiscript_reset;                                // 0x205F160(0x0080)
	struct RawConVar                                   remoteCalls_requireConnectionScriptsForViewPlayer;        // 0x205F200(0x0080)
	struct RawConVar                                   miles_listener_soundscape_roof_min_z_separation;          // 0x205F2A0(0x0080)
	struct RawConVar                                   miles_devnet_screenshot_attach_samples;                   // 0x205F340(0x0080)
	struct RawConVar                                   cockpitShake_sourceRollRange;                             // 0x205F3E0(0x0080)
	struct RawConVar                                   cockpit_screen_boot_delay_right;                          // 0x205F4A0(0x0080)
	struct RawConVar                                   miles_force_listener_environment;                         // 0x205F540(0x0080)
	struct RawConVar                                   cockpit_pitch_down_frac;                                  // 0x205F5E0(0x0080)
	struct RawConVar                                   miles_voice_decimate_at_bytes;                            // 0x205F700(0x0080)
	struct RawConVar                                   miles_actor_occlusion_radius;                             // 0x205F7A0(0x0080)
	struct RawConVar                                   miles_lfe_lowpass_hz;                                     // 0x205F8E0(0x0080)
	struct RawConVar                                   miles_nonactor_occlusion;                                 // 0x205F980(0x0080)
	struct RawConVar                                   miles_samples_noise_shape;                                // 0x205FA20(0x0080)
	struct RawConVar                                   miles_error_counter_limits_error_threshold;               // 0x205FAC0(0x0080)
	struct RawConVar                                   miles_devnet_screenshot_attach_dump;                      // 0x205FC30(0x0080)
	struct RawConVar                                   miles_nopandist;                                          // 0x205FCD0(0x0080)
	struct RawConVar                                   miles_voice_warning;                                      // 0x205FD70(0x0080)
	struct RawConVar                                   cockpit_screen_boot_chroma_scale;                         // 0x205FE10(0x0080)
	struct RawConVar                                   miles_spatialize_rear_degrees;                            // 0x205FEB0(0x0080)
	struct RawConVar                                   miles_voice_max_queued_bytes;                             // 0x205FF50(0x0080)
	struct RawConVar                                   miles_lfe_lowpass_iterations;                             // 0x205FFF0(0x0080)
	struct RawConVar                                   miles_scale_floor_occlusion;                              // 0x2060090(0x0080)
	struct RawConVar                                   miles_occlusion_force;                                    // 0x2060160(0x0080)
	struct RawConVar                                   usePromptImageYOffset;                                    // 0x2060220(0x0080)
	struct RawConVar                                   cockpit_hit_chroma_scale;                                 // 0x20602C0(0x0080)
	struct RawConVar                                   miles_error_counter_starvation_error_threshold;           // 0x20603E0(0x0080)
	struct RawConVar                                   miles_language;                                           // 0x2060480(0x0080)
	struct RawConVar                                   miles_channels;                                           // 0x20606C0(0x0080)
	struct RawConVar                                   usePromptButtonTextColor;                                 // 0x20607E0(0x0080)
	struct RawConVar                                   miles_voice_warning_icon_display_time;                    // 0x2060880(0x0080)
	struct RawConVar                                   cockpitShake_translateRange;                              // 0x20609A0(0x0080)
	struct RawConVar                                   miles_scale_soundscape_occlusion;                         // 0x2060A80(0x0080)
	struct RawConVar                                   r_lod_switch_scale;                                       // 0x2060B20(0x0080)
	struct RawConVar                                   miles_initial_occlusion_delay;                            // 0x2060BC0(0x0080)
	struct RawConVar                                   miles_samples_dither;                                     // 0x2060C60(0x0080)
	struct RawConVar                                   miles_scale_unadjusted_occlusion;                         // 0x2060D00(0x0080)
	struct RawConVar                                   miles_occlusion;                                          // 0x2060DA0(0x0080)
	struct RawConVar                                   miles_samples_folddown;                                   // 0x2060E40(0x0080)
	struct RawConVar                                   killReplay_playNonReplayRemoteCallsOnLocalClientPlayer;   // 0x2060EE0(0x0080)
	struct RawConVar                                   miles_nonactor_occlusion_radius;                          // 0x2060F80(0x0080)
	struct RawConVar                                   miles_error_counter_data_error_threshold;                 // 0x2061020(0x0080)
	struct RawConVar                                   miles_error_counter_display;                              // 0x20610F0(0x0080)
	struct RawConVar                                   damageIndicatorReplayTimeOffset;                          // 0x2061190(0x0080)
	struct RawConVar                                   miles_spatialize_offplane_strength;                       // 0x2061230(0x0080)
	struct RawConVar                                   cl_prevent_weapon_text_hints;                             // 0x2061300(0x0080)
	struct RawConVar                                   miles_suffixes;                                           // 0x2061440(0x0080)
	struct RawConVar                                   cockpit_pitch_up_frac;                                    // 0x20614E0(0x0080)
	struct RawConVar                                   miles_spatialize_front_use_view_fov;                      // 0x2061600(0x0080)
	struct RawConVar                                   cockpit_screen_boot_delay_left;                           // 0x20616A0(0x0080)
	struct RawConVar                                   miles_samplerate;                                         // 0x2061820(0x0080)
	struct RawConVar                                   usePromptTextColor;                                       // 0x20618C0(0x0080)
	struct RawConVar                                   miles_freeze;                                             // 0x2061960(0x0080)
	struct RawConVar                                   player_use_prompt_enabled;                                // 0x2061A80(0x0080)
	struct RawConVar                                   cockpit_screen_boot_delay_top;                            // 0x2061B20(0x0080)
	struct RawConVar                                   miles_listener_soundscape_roof_old_logic;                 // 0x2061BC0(0x0080)
	struct RawConVar                                   miles_voice_warning_hipri;                                // 0x2061CE0(0x0080)
	struct RawConVar                                   voice_allow_mute_self;                                    // 0x2061E00(0x0080)
	struct RawConVar                                   traversal_viewLerpOutDebug;                               // 0x2061F20(0x0080)
	struct RawConVar                                   melee_attack_trace_can_use_lunge_distance;                // 0x2061FE0(0x0080)
	struct RawConVar                                   projectile_lagCompensationMissileTimeStepScalar;          // 0x20638E0(0x0080)
	struct RawConVar                                   enable_debug_free_energize;                               // 0x2063980(0x0080)
	struct RawConVar                                   melee_cone_trace_box_check;                               // 0x2063A20(0x0080)
	struct RawConVar                                   vortex_damageimpulsescale;                                // 0x2063AC0(0x0080)
	struct RawConVar                                   wallrun_curveEnable;                                      // 0x2063C30(0x0080)
	struct RawConVar                                   melee_lunge_dot_check;                                    // 0x2063CD0(0x0080)
	struct RawConVar                                   melee_aim_assist_can_lock_pitch;                          // 0x2063D70(0x0080)
	struct RawConVar                                   nextEnergizeCooldownTime;                                 // 0x2063E10(0x0080)
	struct RawConVar                                   cl_cull_weapon_fx;                                        // 0x2063EB0(0x0080)
	struct RawConVar                                   leech_npc_angle_cos;                                      // 0x2063F50(0x0080)
	struct RawConVar                                   enable_new_weapon_attachment_system;                      // 0x20644D0(0x0080)
	struct RawConVar                                   traversal_viewLerpInDuration;                             // 0x2064680(0x0080)
	struct RawConVar                                   defer_weapon_effects;                                     // 0x2064720(0x0080)
	struct RawConVar                                   bhit_enable;                                              // 0x20647C0(0x0080)
	struct RawConVar                                   wallrun_curveDebug;                                       // 0x2064860(0x0080)
	struct RawConVar                                   traversal_viewLerpOut;                                    // 0x2067C90(0x0080)
	struct RawConVar                                   first_person_proxy_debug;                                 // 0x2067D30(0x0080)
	struct RawConVar                                   object_placement_debug;                                   // 0x2067DD0(0x0080)
	struct RawConVar                                   process_pending_vm_effects;                               // 0x2067E70(0x0080)
	struct RawConVar                                   melee_lunge_adjust_trace_distance;                        // 0x2067F10(0x0080)
	struct RawConVar                                   melee_lunge_align_eye_position;                           // 0x2068010(0x0080)
	struct RawConVar                                   bhit_reliable;                                            // 0x2068230(0x0080)
	struct RawConVar                                   missile_homing_speed;                                     // 0x20687B0(0x0080)
	struct RawConVar                                   traversal_viewLerpOutAngle;                               // 0x2068850(0x0080)
	struct RawConVar                                   traversal_viewLerpOutPos;                                 // 0x2068DD0(0x0080)
	struct RawConVar                                   melee_aim_assist_use_target_velocity;                     // 0x2068E70(0x0080)
	struct RawConVar                                   missile_default_speed;                                    // 0x2068F10(0x0080)
	struct RawConVar                                   report_legacy_attachment_errors;                          // 0x2068FB0(0x0080)
	struct RawConVar                                   window_hint_debug;                                        // 0x2069050(0x0080)
	struct RawConVar                                   ai_titan_grapple_max_len;                                 // 0x20690F0(0x0080)
	struct RawConVar                                   melee_lunge_use_command_time;                             // 0x2069B50(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebug;                          // 0x2069BF0(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebugServerOffset;              // 0x2069E90(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebugDrawTime;                  // 0x2069F30(0x0080)
	struct RawConVar                                   projectile_muzzleOffsetThirdPersonDecayDist;              // 0x206A520(0x0080)
	struct RawConVar                                   projectile_prediction_move_to_impact;                     // 0x206A640(0x0080)
	struct RawConVar                                   projectile_muzzleOffsetFirstPersonDecayMaxTime;           // 0x206A6E0(0x0080)
	struct RawConVar                                   trail_optimizedRemove;                                    // 0x206A780(0x0080)
	struct RawConVar                                   projectile_predictionErrorCorrectTime;                    // 0x206AD00(0x0080)
	struct RawConVar                                   projectile_faketrails;                                    // 0x206AE60(0x0080)
	struct RawConVar                                   projectile_prediction;                                    // 0x206AF00(0x0080)
	struct RawConVar                                   projectile_muzzleOffsetFirstPersonDecayDist;              // 0x206AFA0(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebugExtra;                     // 0x206B040(0x0080)
	struct RawConVar                                   projectile_muzzleOffsetThirdPersonDecayMaxTime;           // 0x206B0E0(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebugDrawNoReg;                 // 0x206B180(0x0080)
	struct RawConVar                                   projectile_lagCompensationDebugForceNoReg;                // 0x206B220(0x0080)
	struct RawConVar                                   projectile_debug_arc_client_offset;                       // 0x206B2C0(0x0080)
	struct RawConVar                                   projectile_filltrails;                                    // 0x206B360(0x0080)
	struct RawConVar                                   enableWeaponModClientScriptCallbacks;                     // 0x206B400(0x0080)
	struct RawConVar                                   weaponFastHolsterScale;                                   // 0x206B620(0x0080)
	struct RawConVar                                   nemesis_use_looping_sound;                                // 0x206B800(0x0080)
	struct RawConVar                                   net_client_side_weapon_animations;                        // 0x206B8A0(0x0080)
	struct RawConVar                                   first_person_bullet_delay;                                // 0x206BE60(0x0080)
	struct RawConVar                                   zipline_check_usable_before_deploy;                       // 0x206C060(0x0080)
	struct RawConVar                                   muteWeaponSounds;                                         // 0x206C180(0x0080)
	struct RawConVar                                   melee_lunge_scale_by_speed;                               // 0x206C340(0x0080)
	struct RawConVar                                   projectile_fake_prediction_in_kill_replay;                // 0x206E300(0x0080)
	struct RawConVar                                   weapon_hide_heirlooms_during_valk_ult;                    // 0x206ECE0(0x0080)
	struct RawConVar                                   bulletPredictionDebug;                                    // 0x206ED80(0x0080)
	struct RawConVar                                   weapon_doIdleForSurvivalMelee;                            // 0x206EE40(0x0080)
	struct RawConVar                                   net_optimize_weapons;                                     // 0x206F3C0(0x0080)
	struct RawConVar                                   weapon_debugScript;                                       // 0x206F460(0x0080)
	struct RawConVar                                   weapon_sprint_raise_delay;                                // 0x206F500(0x0080)
	struct RawConVar                                   force3PLaserAttachment;                                   // 0x206F5A0(0x0080)
	struct RawConVar                                   cl_showfiredbullets;                                      // 0x206F640(0x0080)
	struct RawConVar                                   weapon_render_with_fastpath;                              // 0x206F7E0(0x0080)
	struct RawConVar                                   toggle_on_jump_to_deactivate_changed;                     // 0x206F880(0x0080)
	struct RawConVar                                   weaponSwitch3p_onHolster;                                 // 0x206F980(0x0080)
	struct RawConVar                                   offhandTossOverheadPitchThreshold;                        // 0x206FF20(0x0080)
	struct RawConVar                                   weaponx_predicting_client_only_optimization;              // 0x206FFC0(0x0080)
	struct RawConVar                                   projectile_arcIndicatorAccountsForParentMoverVelocity;    // 0x2070080(0x0080)
	struct RawConVar                                   weaponx_smartammo_data_optimization;                      // 0x2070120(0x0080)
	struct RawConVar                                   toggle_on_jump_to_deactivate;                             // 0x2070310(0x0080)
	struct RawConVar                                   weapon_activity_modifier_fully_charged_weapon_specific;   // 0x20703B0(0x0080)
	struct RawConVar                                   lobatac_fix;                                              // 0x2070450(0x0080)
	struct RawConVar                                   cl_doNetworkAsserts;                                      // 0x2070510(0x0080)
	struct RawConVar                                   banktilt_accel;                                           // 0x20705F0(0x0080)
	struct RawConVar                                   zipline_use_range;                                        // 0x20706B0(0x0080)
	struct RawConVar                                   ziprail_path_section_tolerance;                           // 0x2070830(0x0080)
	struct RawConVar                                   ziprail_mid_mount;                                        // 0x2070DB0(0x0080)
	struct RawConVar                                   zipline_path_mount_debug_crosshair_dist;                  // 0x2071360(0x0080)
	struct RawConVar                                   curved_zipline_skip_cooldown_increase;                    // 0x2071400(0x0080)
	struct RawConVar                                   ziprail_max_tolerance_value;                              // 0x2071980(0x0080)
	struct RawConVar                                   zipline_path_drawAllExtents;                              // 0x2071A40(0x0080)
	struct RawConVar                                   ziprail_adaptive_stackSubdiv;                             // 0x2071AE0(0x0080)
	struct RawConVar                                   ziprail_speed_change;                                     // 0x2071B80(0x0080)
	struct RawConVar                                   zipline_fade_dist;                                        // 0x2071C20(0x0080)
	struct RawConVar                                   ziprail_subdiv_lod_dist_base;                             // 0x2071CC0(0x0080)
	struct RawConVar                                   zipline_subdiv_lod_dist_base;                             // 0x2071D60(0x0080)
	struct RawConVar                                   zipline_cooldown_decay_rate;                              // 0x2072300(0x0080)
	struct RawConVar                                   ziprail_duck_detach;                                      // 0x20723A0(0x0080)
	struct RawConVar                                   ziprail_subdiv_stacks;                                    // 0x2072440(0x0080)
	struct RawConVar                                   ziprail_shape;                                            // 0x20724E0(0x0080)
	struct RawConVar                                   ziprail_width;                                            // 0x2072580(0x0080)
	struct RawConVar                                   ziprail_subdiv_stacks_lod;                                // 0x2072660(0x0080)
	struct RawConVar                                   zipline_cooldown_debug;                                   // 0x2072700(0x0080)
	struct RawConVar                                   ziprail_speed_debug;                                      // 0x2072820(0x0080)
	struct RawConVar                                   ziprail_max_tolerance_distance;                           // 0x20728C0(0x0080)
	struct RawConVar                                   banktilt_maxvel;                                          // 0x2072960(0x0080)
	struct RawConVar                                   ziprail_path_max_subSectionLen;                           // 0x2072A00(0x0080)
	struct RawConVar                                   ziprail_grapple_disable;                                  // 0x2072AA0(0x0080)
	struct RawConVar                                   zipline_path_mount_debug;                                 // 0x2073020(0x0080)
	struct RawConVar                                   zipline_cooldown_decay;                                   // 0x20730C0(0x0080)
	struct RawConVar                                   zipline_cooldown_time_0;                                  // 0x2073640(0x0080)
	struct RawConVar                                   zipline_cooldown_time_1;                                  // 0x20736E0(0x0080)
	struct RawConVar                                   zipline_cooldown_time_2;                                  // 0x2073780(0x0080)
	struct RawConVar                                   zipline_cooldown_time_3;                                  // 0x2073820(0x0080)
	struct RawConVar                                   zipline_cooldown_time_4;                                  // 0x20738C0(0x0080)
	struct RawConVar                                   ziprail_3pBank_Anim;                                      // 0x2073960(0x0080)
	struct RawConVar                                   zipline_subdiv_slices_lod;                                // 0x2073EE0(0x0080)
	struct RawConVar                                   ziprail_rope_render;                                      // 0x2073FA0(0x0080)
	struct RawConVar                                   ziprail_path_extends_fudge_factor;                        // 0x2074060(0x0080)
	struct RawConVar                                   rope_texels_per_world_unit;                               // 0x2074100(0x0080)
	struct RawConVar                                   ziprail_3pBank;                                           // 0x2074220(0x0080)
	struct RawConVar                                   zipline_cooldown_apply_cooldown_across_ziplines;          // 0x20742C0(0x0080)
	struct RawConVar                                   zipline_ping_enabled;                                     // 0x2074360(0x0080)
	struct RawConVar                                   ent_repack_almostFull;                                    // 0x2074400(0x0080)
	struct RawConVar                                   parenting_debug;                                          // 0x20744A0(0x0080)
	struct RawConVar                                   lerp_threaded;                                            // 0x2074540(0x0080)
	struct RawConVar                                   lobby_flicker_fix_disable;                                // 0x20745E0(0x0080)
	struct RawConVar                                   postdataupdate_threaded_chunksize;                        // 0x2074700(0x0080)
	struct RawConVar                                   dormant_debug;                                            // 0x20747A0(0x0080)
	struct RawConVar                                   ent_repack_threshhold;                                    // 0x2074840(0x0080)
	struct RawConVar                                   r_drawrenderboxes;                                        // 0x20748E0(0x0080)
	struct RawConVar                                   cl_debugClientEntities;                                   // 0x2074980(0x0080)
	struct RawConVar                                   error_if_non_standard_ent_create;                         // 0x2074A20(0x0080)
	struct RawConVar                                   cl_flip_vis_bits;                                         // 0x2074AC0(0x0080)
	struct RawConVar                                   net_predictParentEntities;                                // 0x2074B60(0x0080)
	struct RawConVar                                   push_cl_always_update_prev_matrix;                        // 0x2074C00(0x0080)
	struct RawConVar                                   cl_interpolate;                                           // 0x2074CA0(0x0080)
	struct RawConVar                                   r_render_pos_debug;                                       // 0x2074E40(0x0080)
	struct RawConVar                                   cl_base_entity_effect_lock;                               // 0x2074EE0(0x0080)
	struct RawConVar                                   postdataupdate_threaded;                                  // 0x2074F80(0x0080)
	struct RawConVar                                   entityreport_minAllocations;                              // 0x2075020(0x0080)
	struct RawConVar                                   always_touch_triggers_cl;                                 // 0x20751C0(0x0080)
	struct RawConVar                                   cl_interp_all;                                            // 0x2075260(0x0080)
	struct RawConVar                                   ent_lightweightEnts;                                      // 0x2075300(0x0080)
	struct RawConVar                                   lerp_threaded_numEntsPerTask;                             // 0x2075880(0x0080)
	struct RawConVar                                   lerp_careAboutAttachmentBonePosition;                     // 0x2075920(0x0080)
	struct RawConVar                                   r_pos_debug;                                              // 0x2075A40(0x0080)
	struct RawConVar                                   cl_preSnapshotTransitionBlockCount;                       // 0x2075B60(0x0080)
	struct RawConVar                                   cl_update_visibility_for_non_predicted_local_player_always;// 0x2075C80(0x0080)
	struct RawConVar                                   createentitydecals;                                       // 0x2076200(0x0080)
	struct RawConVar                                   lerp_opt;                                                 // 0x2076320(0x0080)
	struct RawConVar                                   use_latest_predicted_time_for_calc_anim_position;         // 0x20763C0(0x0080)
	struct RawConVar                                   report_cliententitysim;                                   // 0x2076460(0x0080)
	struct RawConVar                                   cl_lerpIfChildrenLerp;                                    // 0x2076500(0x0080)
	struct RawConVar                                   weapon_parentingFixLerp;                                  // 0x2076A20(0x0080)
	struct RawConVar                                   cl_simulationtimefix;                                     // 0x2076AC0(0x0080)
	struct RawConVar                                   cl_base_entity_link_with_locks;                           // 0x2076B60(0x0080)
	struct RawConVar                                   push_cl;                                                  // 0x20770E0(0x0080)
	struct RawConVar                                   viewangles_simpler;                                       // 0x2077660(0x0080)
	struct RawConVar                                   hud_autoreloadscript;                                     // 0x2077700(0x0080)
	struct RawConVar                                   phys_erp;                                                 // 0x2078310(0x0080)
	struct RawConVar                                   physics_collideWithMovingGeo;                             // 0x20783B0(0x0080)
	struct RawConVar                                   phys_enableObjectPairCollidePrototype;                    // 0x2078450(0x0080)
	struct RawConVar                                   phys_threadGoWide;                                        // 0x20784F0(0x0080)
	struct RawConVar                                   physics_tunnelChecks;                                     // 0x207CB70(0x0080)
	struct RawConVar                                   phys_erp_anglejointstop;                                  // 0x207CC10(0x0080)
	struct RawConVar                                   phys_drawGeoms;                                           // 0x207CCB0(0x0080)
	struct RawConVar                                   physics_autoSleepGroundHysteresis;                        // 0x207CD50(0x0080)
	struct RawConVar                                   phys_drawTunnelChecks;                                    // 0x207CDF0(0x0080)
	struct RawConVar                                   physics_autoSleepDebug;                                   // 0x207CE90(0x0080)
	struct RawConVar                                   phys_frictionDefault;                                     // 0x207CF30(0x0080)
	struct RawConVar                                   phys_cfm_anglejointstop;                                  // 0x207CFD0(0x0080)
	struct RawConVar                                   phys_drawContacts;                                        // 0x207D070(0x0080)
	struct RawConVar                                   phys_drawContactsDuration;                                // 0x207D110(0x0080)
	struct RawConVar                                   phys_bounce;                                              // 0x207D1B0(0x0080)
	struct RawConVar                                   phys_cfm;                                                 // 0x207D250(0x0080)
	struct RawConVar                                   physics_tunnelChecksForceAlways;                          // 0x207D350(0x0080)
	struct RawConVar                                   physics_autoSleepAngularThreshold;                        // 0x207D3F0(0x0080)
	struct RawConVar                                   physics_autoSleepSpeedThreshold;                          // 0x207D490(0x0080)
	struct RawConVar                                   physics_async_cl;                                         // 0x207D530(0x0080)
	struct RawConVar                                   r_check_models_for_decal_correctness_on_load;             // 0x207D5D0(0x0080)
	struct RawConVar                                   stream_cache_preload_from_rpak;                           // 0x20CD7B0(0x0080)
	struct RawConVar                                   stream_cache_mdl_freeze_threshlold;                       // 0x20CD850(0x0080)
	struct RawConVar                                   stream_cache_high_priority_static_models;                 // 0x20CD8F0(0x0080)
	struct RawConVar                                   stream_cache_high_priority_animations;                    // 0x20CD990(0x0080)
	struct RawConVar                                   mod_trace_load;                                           // 0x20CDA30(0x0080)
	struct RawConVar                                   hitbox_bodygroup_check;                                   // 0x20CDAD0(0x0080)
	struct RawConVar                                   stream_cache_multithreaded;                               // 0x20CDB70(0x0080)
	struct RawConVar                                   stream_cache_read_buffer_cap;                             // 0x20CDC10(0x0080)
	struct RawConVar                                   stream_cache_speculative_drop_mdl;                        // 0x20CDCB0(0x0080)
	struct RawConVar                                   stream_cache_speculative_drop_animseq;                    // 0x20CDD50(0x0080)
	struct RawConVar                                   stream_cache_read_count_cap;                              // 0x20CDDF0(0x0080)
	struct RawConVar                                   stream_cache_capacity_while_loading;                      // 0x20CDE90(0x0080)
	struct RawConVar                                   stream_cache_capacity_mdl;                                // 0x20CDF30(0x0080)
	struct RawConVar                                   stream_cache_capacity_animseq;                            // 0x20CDFD0(0x0080)
	struct RawConVar                                   particle_script_dump;                                     // 0x20CE070(0x0080)
	struct RawConVar                                   particle_script_list;                                     // 0x20CE110(0x0080)
	struct RawConVar                                   particle_script_log;                                      // 0x20CE1B0(0x0080)
	struct RawConVar                                   fx_deferWorldTraceConstraint;                             // 0x20CE250(0x0080)
	struct RawConVar                                   r_particle_lighting_force;                                // 0x20CE560(0x0080)
	struct RawConVar                                   particle_remap_vol2cp_debug;                              // 0x20CEEA0(0x0080)
	struct RawConVar                                   r_particle_lighting_enable;                               // 0x20CF1D0(0x0080)
	struct RawConVar                                   r_particle_low_res_enable;                                // 0x20CF2A0(0x0080)
	struct RawConVar                                   rope_visibility_fx_enable;                                // 0x20CF370(0x0080)
	struct RawConVar                                   r_particle_low_res_force;                                 // 0x20CF410(0x0080)
	struct RawConVar                                   r_particle_lighting_force;                                // 0x20CF520(0x0080)
	struct RawConVar                                   particle_lighting_viewmodel_enable;                       // 0x20CF5F0(0x0080)
	struct RawConVar                                   particle_scrub_debug_effect;                              // 0x20CF690(0x0080)
	struct RawConVar                                   particles_spawncull;                                      // 0x20CF730(0x0080)
	struct RawConVar                                   fx_screenspacepass;                                       // 0x20CF7D0(0x0080)
	struct RawConVar                                   particles_spawncull_report;                               // 0x20CF870(0x0080)
	struct RawConVar                                   cl_particle_limiter_hide_killable;                        // 0x20CF910(0x0080)
	struct RawConVar                                   particle_alwayswakeonstop;                                // 0x20CF9B0(0x0080)
	struct RawConVar                                   particle_scrub_max_dt;                                    // 0x20CFA50(0x0080)
	struct RawConVar                                   particle_scrub_play_speed;                                // 0x20CFAF0(0x0080)
	struct RawConVar                                   particle_scrub_time;                                      // 0x20CFB90(0x0080)
	struct RawConVar                                   particles_max_passes;                                     // 0x20CFC30(0x0080)
	struct RawConVar                                   particle_scrub_quality;                                   // 0x20CFCD0(0x0080)
	struct RawConVar                                   particle_delete_all_except;                               // 0x20CFD70(0x0080)
	struct RawConVar                                   particles_cull_dlights;                                   // 0x20CFE10(0x0080)
	struct RawConVar                                   particle_scrub_is_using_time_scrub;                       // 0x20CFEB0(0x0080)
	struct RawConVar                                   enable_io_error_reporting_to_backtrace;                   // 0x20D0060(0x0080)
	struct RawConVar                                   imgui_buildmode;                                          // 0x20D0160(0x0080)
	struct RawConVar                                   imgui_buildmode;                                          // 0x20D04C0(0x0080)
	struct RawConVar                                   vgui_drawfocus;                                           // 0x20D0560(0x0080)
	struct RawConVar                                   vgui_resize_on_resolution_change;                         // 0x20D0640(0x0080)
	struct RawConVar                                   panel_test_title_safe;                                    // 0x20D11A0(0x0080)
	struct RawConVar                                   cursorWide;                                               // 0x20D12B0(0x0080)
	struct RawConVar                                   rui_overrideVguiTextRendering;                            // 0x20D13C0(0x0080)
	struct RawConVar                                   vgui_EnableFixedAspectScaling;                            // 0x20D1480(0x0080)
	struct RawConVar                                   panel_showVisChanges;                                     // 0x20D1630(0x0080)
	struct RawConVar                                   scheme_manager_font_debug;                                // 0x20D16E0(0x0080)
	struct RawConVar                                   vgui_show_glyph_miss;                                     // 0x20D1B20(0x0080)
	struct RawConVar                                   rui_defaultFontHeight;                                    // 0x20D1C80(0x0080)
	struct RawConVar                                   hudwarp_xWarp;                                            // 0x20D1D20(0x0080)
	struct RawConVar                                   hudwarp_yScale;                                           // 0x20D1DC0(0x0080)
	struct RawConVar                                   rui_defaultDebugFontFace;                                 // 0x20D2B20(0x0080)
	struct RawConVar                                   hudwarp_viewDist;                                         // 0x20D2C00(0x0080)
	struct RawConVar                                   hudwarp_yWarp;                                            // 0x20D2CA0(0x0080)
	struct RawConVar                                   hudwarp_override;                                         // 0x20D2D40(0x0080)
	struct RawConVar                                   vgui_notext;                                              // 0x20D2DE0(0x0080)
	struct RawConVar                                   rui_defaultFontFace;                                      // 0x20D2E80(0x0080)
	struct RawConVar                                   vgui_noquads;                                             // 0x20D2F20(0x0080)
	struct RawConVar                                   hudwarp_xScale;                                           // 0x20D2FC0(0x0080)
	struct RawConVar                                   hudwarp_chopsize;                                         // 0x20D3060(0x0080)
	struct RawConVar                                   script_infinite_loop_ms;                                  // 0x20D3830(0x0080)
	struct RawConVar                                   script_debugger_port_ui;                                  // 0x20D38D0(0x0080)
	struct RawConVar                                   script_dump_simple;                                       // 0x20D3970(0x0080)
	struct RawConVar                                   script_debugger_port_server;                              // 0x20D3A10(0x0080)
	struct RawConVar                                   script_debugger_host;                                     // 0x20D3AB0(0x0080)
	struct RawConVar                                   script_debugger_port_client;                              // 0x20D3B50(0x0080)
	struct RawConVar                                   fatal_script_errors;                                      // 0x20D3D30(0x0080)
	struct RawConVar                                   fatal_script_errors_client;                               // 0x20D3DD0(0x0080)
	struct RawConVar                                   fatal_script_error_prompt;                                // 0x20D3E70(0x0080)
	struct RawConVar                                   fatal_script_errors_server;                               // 0x20D3F10(0x0080)
	struct RawConVar                                   script_compile_debug_dump_rprof;                          // 0x20D4560(0x0080)
	struct RawConVar                                   script_compile_debug_track_timing;                        // 0x20D4600(0x0080)
	struct RawConVar                                   script_compile_debug_verbose_logging;                     // 0x20D46A0(0x0080)
	struct RawConVar                                   script_disallow_newslot_on_globals;                       // 0x20D47B0(0x0080)
	struct RawConVar                                   script_div_0_script_error;                                // 0x20D4D70(0x0080)
	struct RawConVar                                   gpu_count;                                                // 0x20D5720(0x0080)
};

